var Metronome=function(A){var t={};function e(g){if(t[g])return t[g].exports;var o=t[g]={i:g,l:!1,exports:{}};return A[g].call(o.exports,o,o.exports,e),o.l=!0,o.exports}return e.m=A,e.c=t,e.d=function(A,t,g){e.o(A,t)||Object.defineProperty(A,t,{enumerable:!0,get:g})},e.r=function(A){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(A,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(A,"__esModule",{value:!0})},e.t=function(A,t){if(1&t&&(A=e(A)),8&t)return A;if(4&t&&"object"==typeof A&&A&&A.__esModule)return A;var g=Object.create(null);if(e.r(g),Object.defineProperty(g,"default",{enumerable:!0,value:A}),2&t&&"string"!=typeof A)for(var o in A)e.d(g,o,function(t){return A[t]}.bind(null,o));return g},e.n=function(A){var t=A&&A.__esModule?function(){return A.default}:function(){return A};return e.d(t,"a",t),t},e.o=function(A,t){return Object.prototype.hasOwnProperty.call(A,t)},e.p="",e(e.s=4)}({4:function(A,t,e){"use strict";e.r(t),e.d(t,"Metronome",function(){return g});class g{constructor(A){this.bpm=120,this.timeOffset=.05,this.audioContext=new AudioContext,A&&(this.bpm=A),this.gainNode=this.audioContext.createGain(),this.gainNode.gain.value=.3,this.gainNode.connect(this.audioContext.destination),fetch(o).then(A=>A.arrayBuffer()).then(A=>this.audioContext.decodeAudioData(A)).then(A=>this.sound=A)}startTick(){if(!this.tickTimer){let A=60/this.bpm;this.audioContext.suspend();let t=this.audioContext.currentTime;this.nextTime=t+this.timeOffset+A,this.tickTimer=setInterval(()=>this.tick(),1e3*A),this.makeSound(t+this.timeOffset),this.audioContext.resume()}}stopTick(){clearInterval(this.tickTimer),this.tickTimer=null}setBpm(A){this.bpm=A}tick(){let A=this.audioContext.currentTime,t=60/this.bpm;A>this.nextTime?(this.timeOffset+=.05,this.makeSound(A+this.timeOffset),this.nextTime=A+this.timeOffset+t):(this.makeSound(this.nextTime),this.nextTime+=t)}makeSound(A){let t=this.audioContext.createBufferSource();return t.buffer=this.sound,t.connect(this.gainNode),t.start(A),t.stop(A+.05),t}}let o="data:audio/wav;base64,UklGRigHAABXQVZFZm10IBAAAAABAAEAgLsAAAB3AQACABAAZGF0YQQHAADw/wAAGAAgAOD+AP0I/Bj7OPr4+Uj5gPhw+BD4gPeQ96j5qPyo/vj9GPwo++j8wP9oAbAC6AOIBBADgADI/kj96PtI+9AB0AtgEYAZyCK4JlAimBkgBmjwAOUI3gDZKNco3LjlEO2o/CAQqBr4FqAM2ASw+njvCOpA+JAPOBzYDejzUOYw8PACmA1IEGAQkA8IC2AE8P44+rj2iPnQ7iDaQNOQ3QjscO6g57DjCOlA8qDzQPHY8QjzGPswBoANSBfAIGgooD51V+Ve1VDAOmgoGCAoHqggqCCYG7gQ4AJo+bj5uPEQ4jDZ2NNQ0HjPwMTbttOyy7kIweDJCNWI4YDwsPwQAwAQqB7II5AaiAxwAwgJ4BUgF6AM8APYAeAEiAZABej3oOjw4hjfGN4Q4ejo4PNQ+xj80Pzg/ggHoBboIegnWDBANZg2yCyQINAgiCcIKxAoQB9YFfAP2AbI/0D9wPqI90j0UOfQ2xjVeNUA3LDfMOXg6uDosOYg6GDrmPIQ+xAAMAoQFYAZCBRoD9gOMA+QD/APcApgEKgbYB3AFigOuAOg77jfgNwY4UDpSO/w7+DvAPE49WD++AV4Avj4cPKQ+qgKmBXgHigiWB+oFagM8AjYFZghUCLgHngX2BC4CEgC2ADQ/3AB8ANgA8j7uPMg71joyONA5ODowO6I8nD4aP44AbAKwBVgGvAY+BNwD+Ab6CzIM/gnYBUICugDsAIwBEgEIAEw/dD2OPEA8MDn4N7Q1+jVUNoQ51j02Pp4/Dj9CP6YBYAOaBLoETATkBRgF7AYcBZgD0ADwPlQ+Dj8OAFQ/wD5APUA/PAHwBCIEdAJqP+w/LgDmA1wFYAZUBewEJgI6ASABcgL8BPQFmgTwA0oCfAEWPxQ9dDzWPYw+jD9kPOQ5gjiaOag7oD2kPyI/iD9UPRA7MjrGPMY/GABCAAI+2j3iABQDsgUYBJICxgCYPz49hD22Pnw/iACMAPYBqAMgA8YDYAIKAaQATj+YP64+7D26PJ49bD70ADAA0ACGP5Y/CgAiAVYCWgJgAWo/xD9mP8gA5gF0AZgCkANyAxgCvgDSP2Y9jjzsPRg+Bj8YP5A/mD64Pao+TgA+ATIAYD6iPVI+EgCSAsIDwgNoAeYAtgA4P+YAVAEgAUgBCACaALAAAj+oPwg+Tj2WPVY9tj5EP6A/1j7+PUI9MjyYPKI9Oj0gPPQ8mj14Pmw/RABSAMYA5ADKAWIBggHcAbgBFAEmARYBIgAOPug+Bj54Pr4/IgAiAR4BmgGiAVgBKgDeAMQA0ACUAF4ADgBaAMABVgEIAIwALD/cABoAagBKAGAAOj+6Pwo/PD9+AAIA4gE8AVIBjgEgABo/Sj7aPkA+Wj5EPog+0D7APpA+XD6mPxI/jD/4P54/Uj86PsQ/Jj8IP14/cj9yP6IABgCQAS4BqgHGAcgBrgE+AHA/uD8CPyI++j7qP3Q/zgBKAE4AFj/sP5Y/mD+EABoAnADaAGI/dj6+PvI/8gCkATgBUgGsAXoBDAE4APQA3AD0AJoAjgCmAIQA/ACkAGw/4j+iP8QAvADGANoAHD+6P0Y/oj+wP6w/qj+QP9QADgBYAAo/oj86Pvg+1D70PpI+8j8wP5oAOD/KP2Q+jD5cPgQ+Pj36Pcw+OD4CPmA+Kj3MPeg9wD6gP3I/9gAwAEYAiACSAJQAqgCoAOoBDgG+AdQCQAKCAs4DIgM+AqgCCAHiAYwBgAGcAWIBOgD+AJoARAAQACoAdgCeALoAIj/YP1Y+jj4ePhg+mD8WP1Y/fj8yPyw/HD8cPtI+iD64Pqw+yj8kPwQ/bD9oP3I/MD76Ps4/eD+uABgAsgCCAIoAXgAMABoAOAAKAIQBGAFkAUQBQAEyAIYAtgBuAFwAVgBcAGAAZABqAFAATgAKAAYAbABCAG4/+D+2P5A/6j/CACAAPgAKAHYAGgAOABAAEAAGAD4/9j/sP9w/+D/+ADQARAC8AGYAWAAcP4A/eD8yP3Q/lD/UP8g/5D+mP3I/LD8MP3I/Vj+mP5o/vj9wP3o/fD9CP6A/lD/0P+w/yj/QP6I/cD8ePz4/PD9EP8IAGgA8ACwAQgCwAFAAagAoAAwAZABKAIYA7AD8AMIBKADkAJgAdgA4AAQASABAAEIAbAA+P9Y/4D/GAB4AAgASP84/xD/cP4A/iD+iP7A/rD+oP7Q/qD/gADAAOD/yP4w/lj+0P4g/0D/cP/Q//D/oP8o/0j/0P8gADgAYABQAFgAiACQABAAcP8w/5D/MACQACgAcP8Q/6j+KP7o/cj9yP0o/kD/aADwAHgBCAIwAtABQAGgAIgA4AD4AKAAWAB4AFAAsP8I/6D+wP5I/9j/EAB4/5D++P2o/Uj9OP04/sD/8ADIAUgCeAKQAg=="}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,