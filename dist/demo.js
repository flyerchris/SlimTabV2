var demo =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/demo.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/DataAdapter.ts":
/*!****************************!*\
  !*** ./src/DataAdapter.ts ***!
  \****************************/
/*! exports provided: DataAdapter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DataAdapter\", function() { return DataAdapter; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\n/* harmony import */ var _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SlimTabV2Types */ \"./src/SlimTabV2Types.ts\");\n\r\n\r\nclass DataAdapter {\r\n    constructor(bpm) {\r\n        this.startTimeOffset = 0;\r\n        this.timeOffset = 0;\r\n        this.bpm = 120;\r\n        this.rawData = [];\r\n        this.lengthPerBeat = 4;\r\n        this.chordInterval = -0.2 * this.bpm + 84; //120=>60, 420=>0\r\n        this.beatInnerCount = [0, 0];\r\n        this.isWorking = false;\r\n        if (bpm) {\r\n            this.bpm = bpm;\r\n        }\r\n        this.callbacks = new _utils__WEBPACK_IMPORTED_MODULE_0__[\"Callbacks\"]([\"packNote\", \"data\"]);\r\n    }\r\n    receiveData(stringIndex, note, amp, time) {\r\n        if (!this.isWorking)\r\n            return;\r\n        this.rawData.push([stringIndex, note, time + 40 + this.timeOffset]);\r\n        if (!this.receiveInterval) {\r\n            this.receiveInterval = setTimeout(this.packNote.bind(this), this.chordInterval);\r\n        }\r\n        this.callbacks[\"data\"].callAll(stringIndex, note, time);\r\n    }\r\n    addPackListener(cb) {\r\n        this.callbacks[\"packNote\"].push(cb);\r\n    }\r\n    addDataListener(cb) {\r\n        this.callbacks[\"data\"].push(cb);\r\n    }\r\n    getTime() {\r\n        return performance.now();\r\n    }\r\n    get milliSecondPerBeat() {\r\n        return 60 * 1000 / this.bpm;\r\n    }\r\n    setBpm(val) {\r\n        this.bpm = val;\r\n    }\r\n    activate() {\r\n        this.isWorking = true;\r\n    }\r\n    deactivate() {\r\n        this.init();\r\n        this.isWorking = false;\r\n    }\r\n    init() {\r\n        this.rawData = [];\r\n        this.beatInnerCount = [0, 0];\r\n        this.noteRawData = null;\r\n    }\r\n    packNote() {\r\n        let notes = [-1, -1, -1, -1, -1, -1];\r\n        for (let i = 0; i < this.rawData.length; i++) {\r\n            notes[this.rawData[i][0]] = this.rawData[i][1];\r\n        }\r\n        let rbc = this.timeToBeatCount(this.rawData[0][2] + this.startTimeOffset);\r\n        if (this.beatInnerCount[0] != Math.floor(rbc / 0.5) * 0.5) {\r\n            this.beatInnerCount[0] = Math.floor(rbc / 0.5) * 0.5;\r\n            if (rbc !== Math.floor(rbc / 0.5) * 0.5) {\r\n                this.beatInnerCount[1] = 1;\r\n            }\r\n            else {\r\n                this.beatInnerCount[1] = 0;\r\n            }\r\n        }\r\n        this.beatInnerCount[1]++;\r\n        if (this.beatInnerCount[1] > 2) {\r\n            this.preTime = (this.beatInnerCount[0] + 0.25) * this.milliSecondPerBeat - this.startTimeOffset;\r\n            this.receiveInterval = null;\r\n            this.rawData = [];\r\n            return;\r\n        }\r\n        if (this.noteRawData) {\r\n            let bc = rbc - this.timeToBeatCount(this.preTime + this.startTimeOffset);\r\n            let nv;\r\n            if (bc <= 0) {\r\n                nv = 16;\r\n                this.preTime = (this.timeToBeatCount(this.rawData[0][2] + this.startTimeOffset) + 0.25) * this.milliSecondPerBeat - this.startTimeOffset;\r\n            }\r\n            else {\r\n                nv = this.lengthPerBeat / bc;\r\n                this.preTime = this.rawData[0][2];\r\n            }\r\n            this.noteRawData.noteValue = nv;\r\n            this.noteRawData.userData = null;\r\n            this.callbacks[\"packNote\"].callAll(this.noteRawData);\r\n        }\r\n        else {\r\n            if (rbc !== 0) {\r\n                let bc = rbc;\r\n                let nv = this.lengthPerBeat / bc;\r\n                this.noteRawData = new _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_1__[\"Note\"]({ noteValue: nv, stringContent: [-1, -1, -1, -1, -1, -1] });\r\n                this.callbacks[\"packNote\"].callAll(this.noteRawData);\r\n            }\r\n            this.preTime = this.rawData[0][2];\r\n        }\r\n        this.noteRawData = new _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_1__[\"Note\"]({ noteValue: 4, stringContent: notes, userData: \"undefined-value\" });\r\n        this.rawData = [];\r\n        this.receiveInterval = null;\r\n        this.callbacks[\"packNote\"].callAll(this.noteRawData);\r\n    }\r\n    timeToBeatCount(time) {\r\n        let ratio = [3, 1];\r\n        let unit = this.milliSecondPerBeat / (2 * (ratio[0] + ratio[1]));\r\n        let range = [unit * ratio[0] / 2];\r\n        for (let i = 0; i < 3; i++)\r\n            range.push(range[i] + ratio[(i + 1) % 2] * unit);\r\n        let beat = time / this.milliSecondPerBeat;\r\n        let bd = Math.floor(beat);\r\n        let bcs = (beat - bd) * this.milliSecondPerBeat;\r\n        let bc = 4;\r\n        for (let i = 0; i < 4; i++) {\r\n            if (bcs < range[i]) {\r\n                bc = i;\r\n                break;\r\n            }\r\n        }\r\n        return bd + bc * 0.25;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRGF0YUFkYXB0ZXIudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9zcmMvRGF0YUFkYXB0ZXIudHM/MjUyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYWxsYmFja3MgfSBmcm9tIFwiLi91dGlsc1wiXHJcbmltcG9ydCB7IE5vdGUgfSBmcm9tIFwiLi9TbGltVGFiVjJUeXBlc1wiXHJcbmV4cG9ydCBjbGFzcyBEYXRhQWRhcHRlcntcclxuICAgIHN0YXJ0VGltZU9mZnNldDogbnVtYmVyID0gMDtcclxuICAgIHRpbWVPZmZzZXQ6IG51bWJlciA9IDA7XHJcbiAgICBwcml2YXRlIGJwbTogbnVtYmVyID0gMTIwO1xyXG4gICAgcHJpdmF0ZSByYXdEYXRhOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl1bXSA9IFtdO1xyXG4gICAgcHJpdmF0ZSBwcmVUaW1lOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIG5vdGVSYXdEYXRhOiBOb3RlO1xyXG4gICAgcHJpdmF0ZSByZWNlaXZlSW50ZXJ2YWw6bnVtYmVyO1xyXG4gICAgcHJpdmF0ZSBsZW5ndGhQZXJCZWF0OiBudW1iZXIgPSA0O1xyXG4gICAgcHJpdmF0ZSBjYWxsYmFja3M6IENhbGxiYWNrcztcclxuICAgIHByaXZhdGUgY2hvcmRJbnRlcnZhbDogbnVtYmVyID0gLTAuMiAqIHRoaXMuYnBtICsgODQ7Ly8xMjA9PjYwLCA0MjA9PjBcclxuICAgIHByaXZhdGUgYmVhdElubmVyQ291bnQgPSBbMCwgMF07XHJcbiAgICBwcml2YXRlIGlzV29ya2luZyA9IGZhbHNlO1xyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3RvcihicG0/OiBudW1iZXIpe1xyXG4gICAgICAgIGlmKGJwbSl7XHJcbiAgICAgICAgICAgIHRoaXMuYnBtID0gYnBtO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNhbGxiYWNrcyA9IG5ldyBDYWxsYmFja3MoW1wicGFja05vdGVcIiwgXCJkYXRhXCJdKTtcclxuICAgIH1cclxuICAgIHJlY2VpdmVEYXRhKHN0cmluZ0luZGV4OiBudW1iZXIsIG5vdGU6IG51bWJlciwgYW1wOiBudW1iZXIsIHRpbWU6IG51bWJlcil7XHJcbiAgICAgICAgaWYoIXRoaXMuaXNXb3JraW5nKXJldHVybjtcclxuICAgICAgICB0aGlzLnJhd0RhdGEucHVzaChbc3RyaW5nSW5kZXgsIG5vdGUsIHRpbWUgKyA0MCArIHRoaXMudGltZU9mZnNldF0pO1xyXG4gICAgICAgIGlmKCF0aGlzLnJlY2VpdmVJbnRlcnZhbCl7XHJcbiAgICAgICAgICAgIHRoaXMucmVjZWl2ZUludGVydmFsID0gc2V0VGltZW91dCh0aGlzLnBhY2tOb3RlLmJpbmQodGhpcyksIHRoaXMuY2hvcmRJbnRlcnZhbCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY2FsbGJhY2tzW1wiZGF0YVwiXS5jYWxsQWxsKHN0cmluZ0luZGV4LCBub3RlLCB0aW1lKTtcclxuICAgIH1cclxuICAgIGFkZFBhY2tMaXN0ZW5lcihjYjogKGRhdGE6IE5vdGUpID0+IGFueSl7XHJcbiAgICAgICAgdGhpcy5jYWxsYmFja3NbXCJwYWNrTm90ZVwiXS5wdXNoKGNiKTtcclxuICAgIH1cclxuICAgIGFkZERhdGFMaXN0ZW5lcihjYjogKHN0cmluZzogbnVtYmVyLCBub3RlOiBudW1iZXIsIHRpbWU6IG51bWJlcikgPT4gYW55KXtcclxuICAgICAgICB0aGlzLmNhbGxiYWNrc1tcImRhdGFcIl0ucHVzaChjYik7XHJcbiAgICB9XHJcbiAgICBnZXRUaW1lKCk6IG51bWJlcntcclxuICAgICAgICByZXR1cm4gcGVyZm9ybWFuY2Uubm93KCk7XHJcbiAgICB9XHJcbiAgICBnZXQgbWlsbGlTZWNvbmRQZXJCZWF0KCl7XHJcbiAgICAgICAgcmV0dXJuIDYwICoxMDAwIC8gdGhpcy5icG07XHJcbiAgICB9XHJcbiAgICBzZXRCcG0odmFsOiBudW1iZXIpe1xyXG4gICAgICAgIHRoaXMuYnBtID0gdmFsO1xyXG4gICAgfVxyXG4gICAgYWN0aXZhdGUoKXtcclxuICAgICAgICB0aGlzLmlzV29ya2luZyA9IHRydWU7XHJcbiAgICB9XHJcbiAgICBkZWFjdGl2YXRlKCl7XHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICAgICAgdGhpcy5pc1dvcmtpbmcgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIHByaXZhdGUgaW5pdCgpe1xyXG4gICAgICAgIHRoaXMucmF3RGF0YSA9IFtdO1xyXG4gICAgICAgIHRoaXMuYmVhdElubmVyQ291bnQgPSBbMCwgMF07XHJcbiAgICAgICAgdGhpcy5ub3RlUmF3RGF0YSA9IG51bGw7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIHBhY2tOb3RlKCl7XHJcbiAgICAgICAgbGV0IG5vdGVzID0gWy0xLCAtMSwgLTEsIC0xLCAtMSwgLTFdO1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCB0aGlzLnJhd0RhdGEubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICBub3Rlc1t0aGlzLnJhd0RhdGFbaV1bMF1dID0gdGhpcy5yYXdEYXRhW2ldWzFdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgcmJjID0gdGhpcy50aW1lVG9CZWF0Q291bnQodGhpcy5yYXdEYXRhWzBdWzJdICsgdGhpcy5zdGFydFRpbWVPZmZzZXQpO1xyXG4gICAgICAgIGlmKHRoaXMuYmVhdElubmVyQ291bnRbMF0gIT0gTWF0aC5mbG9vcihyYmMgLyAwLjUpICogMC41KXtcclxuICAgICAgICAgICAgdGhpcy5iZWF0SW5uZXJDb3VudFswXSA9IE1hdGguZmxvb3IocmJjIC8gMC41KSAqIDAuNTtcclxuICAgICAgICAgICAgaWYocmJjICE9PSBNYXRoLmZsb29yKHJiYyAvIDAuNSkgKiAwLjUpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5iZWF0SW5uZXJDb3VudFsxXSA9IDE7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgdGhpcy5iZWF0SW5uZXJDb3VudFsxXSA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5iZWF0SW5uZXJDb3VudFsxXSsrO1xyXG4gICAgICAgIGlmKHRoaXMuYmVhdElubmVyQ291bnRbMV0gPiAyKXtcclxuICAgICAgICAgICAgdGhpcy5wcmVUaW1lID0gKHRoaXMuYmVhdElubmVyQ291bnRbMF0gKyAwLjI1KSAqIHRoaXMubWlsbGlTZWNvbmRQZXJCZWF0IC0gdGhpcy5zdGFydFRpbWVPZmZzZXQ7XHJcbiAgICAgICAgICAgIHRoaXMucmVjZWl2ZUludGVydmFsID0gbnVsbDtcclxuICAgICAgICAgICAgdGhpcy5yYXdEYXRhID0gW107XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGhpcy5ub3RlUmF3RGF0YSl7XHJcbiAgICAgICAgICAgIGxldCBiYyA9IHJiYyAtIHRoaXMudGltZVRvQmVhdENvdW50KHRoaXMucHJlVGltZSArIHRoaXMuc3RhcnRUaW1lT2Zmc2V0KTtcclxuICAgICAgICAgICAgbGV0IG52O1xyXG4gICAgICAgICAgICBpZihiYyA8PSAwKXtcclxuICAgICAgICAgICAgICAgIG52ID0gMTY7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByZVRpbWUgPSAodGhpcy50aW1lVG9CZWF0Q291bnQodGhpcy5yYXdEYXRhWzBdWzJdICsgdGhpcy5zdGFydFRpbWVPZmZzZXQpICsgMC4yNSkgKiB0aGlzLm1pbGxpU2Vjb25kUGVyQmVhdCAtIHRoaXMuc3RhcnRUaW1lT2Zmc2V0O1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIG52ID0gdGhpcy5sZW5ndGhQZXJCZWF0IC8gYmM7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByZVRpbWUgPSB0aGlzLnJhd0RhdGFbMF1bMl07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5ub3RlUmF3RGF0YS5ub3RlVmFsdWUgPSBudjtcclxuICAgICAgICAgICAgdGhpcy5ub3RlUmF3RGF0YS51c2VyRGF0YSA9IG51bGw7XHJcbiAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzW1wicGFja05vdGVcIl0uY2FsbEFsbCh0aGlzLm5vdGVSYXdEYXRhKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgaWYocmJjICE9PSAwKXtcclxuICAgICAgICAgICAgICAgIGxldCBiYyA9IHJiYztcclxuICAgICAgICAgICAgICAgIGxldCBudiA9IHRoaXMubGVuZ3RoUGVyQmVhdCAvIGJjO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ub3RlUmF3RGF0YSA9IG5ldyBOb3RlKHtub3RlVmFsdWU6IG52LCBzdHJpbmdDb250ZW50OiBbLTEsIC0xLCAtMSwgLTEsIC0xLCAtMV19KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzW1wicGFja05vdGVcIl0uY2FsbEFsbCh0aGlzLm5vdGVSYXdEYXRhKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnByZVRpbWUgPSB0aGlzLnJhd0RhdGFbMF1bMl07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubm90ZVJhd0RhdGEgPSBuZXcgTm90ZSh7bm90ZVZhbHVlOiA0LCBzdHJpbmdDb250ZW50OiBub3RlcywgdXNlckRhdGE6IFwidW5kZWZpbmVkLXZhbHVlXCJ9KTtcclxuICAgICAgICB0aGlzLnJhd0RhdGEgPSBbXTtcclxuICAgICAgICB0aGlzLnJlY2VpdmVJbnRlcnZhbCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5jYWxsYmFja3NbXCJwYWNrTm90ZVwiXS5jYWxsQWxsKHRoaXMubm90ZVJhd0RhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgdGltZVRvQmVhdENvdW50KHRpbWU6IG51bWJlcil7XHJcbiAgICAgICAgbGV0IHJhdGlvID0gWzMsIDFdO1xyXG4gICAgICAgIGxldCB1bml0ID0gdGhpcy5taWxsaVNlY29uZFBlckJlYXQvKDIqKHJhdGlvWzBdICsgcmF0aW9bMV0pKTtcclxuICAgICAgICBsZXQgcmFuZ2UgPSBbdW5pdCAqIHJhdGlvWzBdLzJdO1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCAzOyBpKyspcmFuZ2UucHVzaChyYW5nZVtpXSArIHJhdGlvWyhpKzEpJTJdKnVuaXQpO1xyXG5cclxuICAgICAgICBsZXQgYmVhdCA9IHRpbWUgLyB0aGlzLm1pbGxpU2Vjb25kUGVyQmVhdDtcclxuICAgICAgICBsZXQgYmQgPSBNYXRoLmZsb29yKGJlYXQpO1xyXG4gICAgICAgIGxldCBiY3MgPSAoYmVhdCAtIGJkKSAqIHRoaXMubWlsbGlTZWNvbmRQZXJCZWF0O1xyXG4gICAgICAgIGxldCBiYyA9IDQ7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IDQ7IGkrKyl7XHJcbiAgICAgICAgICAgIGlmKGJjcyA8IHJhbmdlW2ldKXtcclxuICAgICAgICAgICAgICAgIGJjID0gaTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBiZCArIGJjICogMC4yNTtcclxuICAgIH1cclxufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFjQTtBQWJBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFFQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/DataAdapter.ts\n");

/***/ }),

/***/ "./src/KeyBoardAdapter.ts":
/*!********************************!*\
  !*** ./src/KeyBoardAdapter.ts ***!
  \********************************/
/*! exports provided: KeyBoardAdapter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyBoardAdapter\", function() { return KeyBoardAdapter; });\n//A4 = midi note key 69, frequence 440HZ, 12 for a Octave\r\nlet stringFrequency = [329.63, 246.94, 196, 146.83, 110, 82.41];\r\nlet A4Key = 69;\r\nlet A4Frequency = 440;\r\nlet octaveSetp = 12;\r\nclass KeyBoardAdapter {\r\n    constructor() {\r\n        this.unit = Math.pow(Math.E, Math.log(2) / octaveSetp);\r\n    }\r\n    noteKeyToFrequency(noteKey) {\r\n        let dif = noteKey - A4Key;\r\n        return Math.pow(this.unit, dif) * A4Frequency;\r\n    }\r\n    /**\r\n     * convert freqency to string index and block index\r\n     * @param freq frequency\r\n     * @returns [ string index, block index]\r\n     */\r\n    frequencyToStringData(freq) {\r\n        let string = stringFrequency.length - 1;\r\n        for (let i = 0; i < stringFrequency.length; i++) {\r\n            if (freq >= stringFrequency[i]) {\r\n                string = i;\r\n                break;\r\n            }\r\n        }\r\n        let block = Math.floor(Math.log(freq / stringFrequency[string]) / Math.log(this.unit));\r\n        return [string, block];\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvS2V5Qm9hcmRBZGFwdGVyLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vW25hbWVdLy4vc3JjL0tleUJvYXJkQWRhcHRlci50cz83ZWQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vQTQgPSBtaWRpIG5vdGUga2V5IDY5LCBmcmVxdWVuY2UgNDQwSFosIDEyIGZvciBhIE9jdGF2ZVxyXG5sZXQgc3RyaW5nRnJlcXVlbmN5ID0gWzMyOS42MywgMjQ2Ljk0LCAxOTYsIDE0Ni44MywgMTEwLCA4Mi40MV07XHJcbmxldCBBNEtleSA9IDY5O1xyXG5sZXQgQTRGcmVxdWVuY3kgPSA0NDA7XHJcbmxldCBvY3RhdmVTZXRwID0gMTI7XHJcblxyXG5leHBvcnQgY2xhc3MgS2V5Qm9hcmRBZGFwdGVyIHtcclxuICAgIHByaXZhdGUgdW5pdCA9IE1hdGgucG93KE1hdGguRSwgTWF0aC5sb2coMikgLyBvY3RhdmVTZXRwKTtcclxuICAgIG5vdGVLZXlUb0ZyZXF1ZW5jeShub3RlS2V5OiBudW1iZXIpOiBudW1iZXJ7XHJcbiAgICAgICAgbGV0IGRpZiA9IG5vdGVLZXkgLSBBNEtleTtcclxuICAgICAgICByZXR1cm4gTWF0aC5wb3codGhpcy51bml0LCBkaWYpICogQTRGcmVxdWVuY3k7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIGNvbnZlcnQgZnJlcWVuY3kgdG8gc3RyaW5nIGluZGV4IGFuZCBibG9jayBpbmRleFxyXG4gICAgICogQHBhcmFtIGZyZXEgZnJlcXVlbmN5XHJcbiAgICAgKiBAcmV0dXJucyBbIHN0cmluZyBpbmRleCwgYmxvY2sgaW5kZXhdXHJcbiAgICAgKi9cclxuICAgIGZyZXF1ZW5jeVRvU3RyaW5nRGF0YShmcmVxOiBudW1iZXIpOiBbbnVtYmVyLCBudW1iZXJde1xyXG4gICAgICAgIGxldCBzdHJpbmcgPSBzdHJpbmdGcmVxdWVuY3kubGVuZ3RoIC0gMTtcclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgc3RyaW5nRnJlcXVlbmN5Lmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgaWYoZnJlcSA+PSBzdHJpbmdGcmVxdWVuY3lbaV0pe1xyXG4gICAgICAgICAgICAgICAgc3RyaW5nID0gaTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBibG9jayA9IE1hdGguZmxvb3IoTWF0aC5sb2coZnJlcS9zdHJpbmdGcmVxdWVuY3lbc3RyaW5nXSkvTWF0aC5sb2codGhpcy51bml0KSk7XHJcbiAgICAgICAgcmV0dXJuIFtzdHJpbmcsIGJsb2NrXTtcclxuICAgIH1cclxufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQ0E7QUFxQkE7QUFwQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/KeyBoardAdapter.ts\n");

/***/ }),

/***/ "./src/LiCAP.ts":
/*!**********************!*\
  !*** ./src/LiCAP.ts ***!
  \**********************/
/*! exports provided: LiCAP */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LiCAP\", function() { return LiCAP; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\n\r\nclass LiCAP {\r\n    /**\r\n     * ctor\r\n     * @param device valid MIDIInput\r\n     */\r\n    constructor(device) {\r\n        this.device = device;\r\n        this.callbacks = new _utils__WEBPACK_IMPORTED_MODULE_0__[\"Callbacks\"]([\"pick\", \"message\"]);\r\n        this.startTime = performance.now();\r\n        this.device.onmidimessage = this.onMessage.bind(this);\r\n    }\r\n    on(ename, cbk) {\r\n        if (ename in this.callbacks) {\r\n            this.callbacks[ename].push(cbk);\r\n        }\r\n    }\r\n    resetTimer() {\r\n        this.startTime = performance.now();\r\n    }\r\n    /**\r\n     * isSupported\r\n     * Check if LiCAP is supported by computer or not\r\n     */\r\n    static isSupported() {\r\n        return navigator.requestMIDIAccess;\r\n    }\r\n    /**\r\n     * enumerate\r\n     * Enumerate available LiCAP devices\r\n     */\r\n    static async enumerate() {\r\n        let ret = [];\r\n        if (LiCAP.isSupported()) {\r\n            let access = await navigator.requestMIDIAccess();\r\n            for (let input of access.inputs.values()) {\r\n                // console.log(input.name);\r\n                // chage this for normal midi device, chage this and LiCAPName for LiCAP device\r\n                if (input.name.match(/LiCAP MIDI Device/)) {\r\n                    ret.push(new LiCAP(input));\r\n                    console.log(`use ${input.name}`);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    onMessage(e) {\r\n        // Simply parse the data\r\n        let stringIdx = e.data[0] & 0xF;\r\n        // TODO: \r\n        let string_base_id = [40, 45, 50, 55, 59, 64].reverse();\r\n        switch ((e.data[0] >> 4) & 0xF) {\r\n            case 8:\r\n                // note off\r\n                break;\r\n            case 9:\r\n                // note on\r\n                if (this.device.name !== LiCAP.LiCAPName) {\r\n                    this.callbacks[\"message\"].callAll(e);\r\n                }\r\n                else {\r\n                    this.callbacks[\"pick\"].callAll(stringIdx, e.data[1] - string_base_id[stringIdx], e.data[2] / 255, e.timeStamp); // string idex, note, amp, time stamp\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}\r\nLiCAP.LiCAPName = \"LiCAP MIDI Device\";\r\n/*\r\n\r\n if(LiCAP.isSupported()) {\r\n     console.log(\"Your browser supports LiCAP\");\r\n\r\n     LiCAP.enumerate().then((devs) => {\r\n         if(devs.length > 0) {\r\n            \r\n             devs[0].on(\"pick\",\r\n                 (stringIdx, note, amp, time) => {\r\n                     console.log(stringIdx, note, time);\r\n             });\r\n         }\r\n     })\r\n } else {\r\n     console.log(\"Your browser does not support LiCAP\");\r\n}\r\n*/ \r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvTGlDQVAudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9zcmMvTGlDQVAudHM/MTkxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NhbGxiYWNrc30gZnJvbSAnLi91dGlscyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIExpQ0FQRGV2aWNlIHtcclxuICAgIC8qKlxyXG4gICAgICogb25cclxuICAgICAqIEV2ZW50IHJlZ2lzdGVyYXRpb24oc3VwcG9ydCBtdWx0aXBsZSBldmVudCByZWdpc3RlcmF0aW9uKVxyXG4gICAgICogQHBhcmFtIGVuYW1lIG5hbWUgb2YgdGhlIGV2ZW50XHJcbiAgICAgKiBAcGFyYW0gY2JrIGNhbGxiYWNrXHJcbiAgICAgKi9cclxuICAgIG9uKGVuYW1lOiBzdHJpbmcsIGNiazogKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkKTogdm9pZDtcclxuICAgIHJlc2V0VGltZXIoKTogdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIExpQ0FQIGltcGxlbWVudHMgTGlDQVBEZXZpY2Uge1xyXG4gICAgcHJpdmF0ZSBkZXZpY2U6IFdlYk1pZGkuTUlESUlucHV0O1xyXG4gICAgcHJpdmF0ZSBjYWxsYmFja3M6IENhbGxiYWNrcztcclxuICAgIHN0YXRpYyBMaUNBUE5hbWU6IHN0cmluZyA9IFwiTGlDQVAgTUlESSBEZXZpY2VcIjtcclxuICAgIHByaXZhdGUgc3RhcnRUaW1lOiBudW1iZXI7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBjdG9yXHJcbiAgICAgKiBAcGFyYW0gZGV2aWNlIHZhbGlkIE1JRElJbnB1dFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKGRldmljZTogV2ViTWlkaS5NSURJSW5wdXQpIHtcclxuICAgICAgICB0aGlzLmRldmljZSA9IGRldmljZTtcclxuICAgICAgICB0aGlzLmNhbGxiYWNrcyA9IG5ldyBDYWxsYmFja3MoW1wicGlja1wiLCBcIm1lc3NhZ2VcIl0pO1xyXG4gICAgICAgIHRoaXMuc3RhcnRUaW1lID0gcGVyZm9ybWFuY2Uubm93KCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5kZXZpY2Uub25taWRpbWVzc2FnZSA9IHRoaXMub25NZXNzYWdlLmJpbmQodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgb24oZW5hbWU6IHN0cmluZywgY2JrOiAoLi4uYXJnczogYW55W10pID0+IHZvaWQpOiB2b2lkIHtcclxuICAgICAgICBpZihlbmFtZSBpbiB0aGlzLmNhbGxiYWNrcykge1xyXG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrc1tlbmFtZV0ucHVzaChjYmspO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXNldFRpbWVyKCl7XHJcbiAgICAgICAgdGhpcy5zdGFydFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogaXNTdXBwb3J0ZWRcclxuICAgICAqIENoZWNrIGlmIExpQ0FQIGlzIHN1cHBvcnRlZCBieSBjb21wdXRlciBvciBub3RcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGlzU3VwcG9ydGVkKCk6IGJvb2xlYW4gfCBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiAobmF2aWdhdG9yIGFzIGFueSkucmVxdWVzdE1JRElBY2Nlc3MgYXMgYm9vbGVhbjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIGVudW1lcmF0ZVxyXG4gICAgICogRW51bWVyYXRlIGF2YWlsYWJsZSBMaUNBUCBkZXZpY2VzXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBhc3luYyBlbnVtZXJhdGUoKTogUHJvbWlzZTxBcnJheTxMaUNBUERldmljZT4+IHtcclxuICAgICAgICBsZXQgcmV0OiBBcnJheTxMaUNBUERldmljZT4gPSBbXTtcclxuXHJcbiAgICAgICAgaWYoTGlDQVAuaXNTdXBwb3J0ZWQoKSkge1xyXG4gICAgICAgICAgICBsZXQgYWNjZXNzID0gYXdhaXQgbmF2aWdhdG9yLnJlcXVlc3RNSURJQWNjZXNzKCk7XHJcblxyXG4gICAgICAgICAgICBmb3IobGV0IGlucHV0IG9mIGFjY2Vzcy5pbnB1dHMudmFsdWVzKCkpIHtcclxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGlucHV0Lm5hbWUpO1xyXG4gICAgICAgICAgICAgICAgLy8gY2hhZ2UgdGhpcyBmb3Igbm9ybWFsIG1pZGkgZGV2aWNlLCBjaGFnZSB0aGlzIGFuZCBMaUNBUE5hbWUgZm9yIExpQ0FQIGRldmljZVxyXG4gICAgICAgICAgICAgICAgaWYoaW5wdXQubmFtZS5tYXRjaCgvTGlDQVAgTUlESSBEZXZpY2UvKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldC5wdXNoKG5ldyBMaUNBUChpbnB1dCkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGB1c2UgJHtpbnB1dC5uYW1lfWApO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvbk1lc3NhZ2UoZTogV2ViTWlkaS5NSURJTWVzc2FnZUV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgLy8gU2ltcGx5IHBhcnNlIHRoZSBkYXRhXHJcbiAgICAgICAgbGV0IHN0cmluZ0lkeCA9IGUuZGF0YVswXSAmIDB4RjtcclxuICAgICAgICAvLyBUT0RPOiBcclxuICAgICAgICBsZXQgc3RyaW5nX2Jhc2VfaWQgPSBbNDAsIDQ1LCA1MCwgNTUsIDU5LCA2NF0ucmV2ZXJzZSgpO1xyXG4gICAgICAgIHN3aXRjaCgoZS5kYXRhWzBdPj40KSAmIDB4Rikge1xyXG4gICAgICAgICAgICBjYXNlIDg6XHJcbiAgICAgICAgICAgICAgICAvLyBub3RlIG9mZlxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgOTpcclxuICAgICAgICAgICAgICAgIC8vIG5vdGUgb25cclxuICAgICAgICAgICAgICAgIGlmKHRoaXMuZGV2aWNlLm5hbWUgIT09IExpQ0FQLkxpQ0FQTmFtZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxsYmFja3NbXCJtZXNzYWdlXCJdLmNhbGxBbGwoZSk7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrc1tcInBpY2tcIl0uY2FsbEFsbChzdHJpbmdJZHgsIGUuZGF0YVsxXS1zdHJpbmdfYmFzZV9pZFtzdHJpbmdJZHhdLCBlLmRhdGFbMl0gLyAyNTUsIGUudGltZVN0YW1wKTsvLyBzdHJpbmcgaWRleCwgbm90ZSwgYW1wLCB0aW1lIHN0YW1wXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbn1cclxuLypcclxuXHJcbiBpZihMaUNBUC5pc1N1cHBvcnRlZCgpKSB7XHJcbiAgICAgY29uc29sZS5sb2coXCJZb3VyIGJyb3dzZXIgc3VwcG9ydHMgTGlDQVBcIik7XHJcblxyXG4gICAgIExpQ0FQLmVudW1lcmF0ZSgpLnRoZW4oKGRldnMpID0+IHtcclxuICAgICAgICAgaWYoZGV2cy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgZGV2c1swXS5vbihcInBpY2tcIiwgXHJcbiAgICAgICAgICAgICAgICAgKHN0cmluZ0lkeCwgbm90ZSwgYW1wLCB0aW1lKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHN0cmluZ0lkeCwgbm90ZSwgdGltZSk7XHJcbiAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgfVxyXG4gICAgIH0pXHJcbiB9IGVsc2Uge1xyXG4gICAgIGNvbnNvbGUubG9nKFwiWW91ciBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgTGlDQVBcIik7XHJcbn1cclxuKi8iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBYUE7QUFNQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQTFFQTtBQTRFQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/LiCAP.ts\n");

/***/ }),

/***/ "./src/LiCAPStream.ts":
/*!****************************!*\
  !*** ./src/LiCAPStream.ts ***!
  \****************************/
/*! exports provided: LiCAPStream */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LiCAPStream\", function() { return LiCAPStream; });\nclass LiCAPStream {\r\n    constructor() {\r\n        this.ctx = new AudioContext();\r\n        this.sampleRate = 32000;\r\n        this.startAt = 0;\r\n        this.wsL = new WebSocket(\"ws://localhost:9002/LiCAP/L/subscribe\");\r\n        this.wsR = new WebSocket(\"ws://localhost:9002/LiCAP/R/subscribe\");\r\n        this.wsL.binaryType = \"arraybuffer\";\r\n        this.wsR.binaryType = \"arraybuffer\";\r\n    }\r\n    play() {\r\n        this.wsL.onmessage = (event) => {\r\n            let floats = new Float32Array(event.data);\r\n            let source = this.ctx.createBufferSource();\r\n            let buffer = this.ctx.createBuffer(1, floats.length, this.sampleRate);\r\n            buffer.getChannelData(0).set(floats);\r\n            source.buffer = buffer;\r\n            source.connect(this.ctx.destination);\r\n            this.startAt = Math.max(this.ctx.currentTime, this.startAt);\r\n            source.start(this.startAt);\r\n            this.startAt += buffer.duration;\r\n        };\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvTGlDQVBTdHJlYW0udHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9zcmMvTGlDQVBTdHJlYW0udHM/MzdjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgTGlDQVBTdHJlYW0ge1xyXG4gICAgcHJpdmF0ZSBjdHg6IEF1ZGlvQ29udGV4dDtcclxuICAgIHByaXZhdGUgd3NMOiBXZWJTb2NrZXQ7XHJcbiAgICBwcml2YXRlIHdzUjogV2ViU29ja2V0O1xyXG4gICAgcHJpdmF0ZSBzYW1wbGVSYXRlOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIHN0YXJ0QXQ6IG51bWJlcjtcclxuXHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5jdHggPSBuZXcgQXVkaW9Db250ZXh0KCk7XHJcbiAgICAgICAgdGhpcy5zYW1wbGVSYXRlID0gMzIwMDA7XHJcbiAgICAgICAgdGhpcy5zdGFydEF0ID0gMDtcclxuXHJcbiAgICAgICAgdGhpcy53c0wgPSBuZXcgV2ViU29ja2V0KFwid3M6Ly9sb2NhbGhvc3Q6OTAwMi9MaUNBUC9ML3N1YnNjcmliZVwiKTtcclxuICAgICAgICB0aGlzLndzUiA9IG5ldyBXZWJTb2NrZXQoXCJ3czovL2xvY2FsaG9zdDo5MDAyL0xpQ0FQL1Ivc3Vic2NyaWJlXCIpO1xyXG5cclxuICAgICAgICB0aGlzLndzTC5iaW5hcnlUeXBlID0gXCJhcnJheWJ1ZmZlclwiO1xyXG4gICAgICAgIHRoaXMud3NSLmJpbmFyeVR5cGUgPSBcImFycmF5YnVmZmVyXCI7XHJcbiAgICB9XHJcblxyXG4gICAgcGxheSgpIHtcclxuXHJcbiAgICAgICAgdGhpcy53c0wub25tZXNzYWdlID0gKGV2ZW50KSA9PiB7XHJcblxyXG4gICAgICAgICAgICBsZXQgZmxvYXRzID0gbmV3IEZsb2F0MzJBcnJheShldmVudC5kYXRhKTtcclxuICAgICAgICAgICAgbGV0IHNvdXJjZSA9IHRoaXMuY3R4LmNyZWF0ZUJ1ZmZlclNvdXJjZSgpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgbGV0IGJ1ZmZlciA9IHRoaXMuY3R4LmNyZWF0ZUJ1ZmZlcigxLCBmbG9hdHMubGVuZ3RoLCB0aGlzLnNhbXBsZVJhdGUpO1xyXG4gICAgICAgICAgICBidWZmZXIuZ2V0Q2hhbm5lbERhdGEoMCkuc2V0KGZsb2F0cyk7XHJcbiAgICAgICAgICAgIHNvdXJjZS5idWZmZXIgPSBidWZmZXI7XHJcbiAgICAgICAgICAgIHNvdXJjZS5jb25uZWN0KHRoaXMuY3R4LmRlc3RpbmF0aW9uKTtcclxuICAgICAgICAgICAgdGhpcy5zdGFydEF0ID0gTWF0aC5tYXgodGhpcy5jdHguY3VycmVudFRpbWUsIHRoaXMuc3RhcnRBdCk7XHJcbiAgICAgICAgICAgIHNvdXJjZS5zdGFydCh0aGlzLnN0YXJ0QXQpO1xyXG4gICAgICAgICAgICB0aGlzLnN0YXJ0QXQgKz0gYnVmZmVyLmR1cmF0aW9uO1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/LiCAPStream.ts\n");

/***/ }),

/***/ "./src/Metronome.ts":
/*!**************************!*\
  !*** ./src/Metronome.ts ***!
  \**************************/
/*! exports provided: Metronome */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Metronome\", function() { return Metronome; });\nclass Metronome {\r\n    constructor(bpm) {\r\n        this.bpm = 120;\r\n        this.timeOffset = 0.05;\r\n        this.audioStartTime = -1; // start time in audioContext, unit in milli second\r\n        this.startTime = -1; // start time in performance.now(), unit in milli second\r\n        this.mode = \"\";\r\n        this.scheduleOsc = [];\r\n        this.beatCount = 0;\r\n        this.startTimeOffset = 0.1; // unit in second\r\n        this.audioContext = new AudioContext();\r\n        if (bpm)\r\n            this.bpm = bpm;\r\n        this.gainNode = this.audioContext.createGain();\r\n        this.gainNode.gain.value = 1.5;\r\n        this.gainNode.connect(this.audioContext.destination);\r\n        this.base64toAudioBuffer(beep).then(decodeBuffer => this.sound = decodeBuffer);\r\n        this.base64toAudioBuffer(beep2).then(decodeBuffer => this.sound2 = decodeBuffer);\r\n    }\r\n    startTick() {\r\n        this.clearScheduleOsc();\r\n        this.mode = \"click\";\r\n        if (!this.tickTimer) {\r\n            let cycleTime = 60 / this.bpm;\r\n            this.audioContext.suspend();\r\n            let at = this.audioContext.currentTime + this.startTimeOffset;\r\n            this.nextTime = at + cycleTime;\r\n            this.tickTimer = -1 * setTimeout(() => {\r\n                this.tick();\r\n                this.tickTimer = setInterval(() => this.tick(), cycleTime * 1000);\r\n            }, cycleTime * 1000 - this.timeOffset * 1000);\r\n            this.makeSound(at);\r\n            this.audioContext.resume();\r\n        }\r\n    }\r\n    stopTick() {\r\n        if (this.tickTimer < 0) {\r\n            clearTimeout(-1 * this.tickTimer);\r\n        }\r\n        else {\r\n            clearInterval(this.tickTimer);\r\n        }\r\n        this.audioContext.suspend();\r\n        this.clearScheduleOsc();\r\n        this.tickTimer = null;\r\n        this.startTime = -1;\r\n        this.audioStartTime = -1;\r\n        this.beatCount = 0;\r\n    }\r\n    setBpm(bpm) {\r\n        this.bpm = bpm;\r\n    }\r\n    scheduleTick(time, type = \"normal\") {\r\n        if (this.mode === \"click\") {\r\n            this.stopTick();\r\n            this.mode = \"schedule\";\r\n        }\r\n        if (this.startTime >= 0) {\r\n            console.warn(\"Cannot schedule tick before stop tick(call stopTick())\");\r\n            return;\r\n        }\r\n        let scheduleTime = this.audioContext.currentTime * 1000 + time;\r\n        if (this.audioStartTime < 0)\r\n            this.audioStartTime = scheduleTime;\r\n        if (type === \"normal\") {\r\n            this.makeSound(scheduleTime / 1000);\r\n        }\r\n        else {\r\n            this.makeSound(scheduleTime / 1000, this.sound2);\r\n        }\r\n    }\r\n    play() {\r\n        if (this.startTime >= 0)\r\n            return -1;\r\n        if (this.scheduleOsc.length < 1) {\r\n            console.warn(\"no tick is scheduled\");\r\n            return -1;\r\n        }\r\n        this.startTime = this.audioStartTime - this.audioContext.currentTime * 1000 + performance.now();\r\n        this.audioContext.resume();\r\n        return this.startTime;\r\n    }\r\n    getStartTime() {\r\n        return this.startTime;\r\n    }\r\n    base64toAudioBuffer(b64string) {\r\n        return fetch(b64string)\r\n            .then(res => res.arrayBuffer())\r\n            .then(buffer => this.audioContext.decodeAudioData(buffer));\r\n    }\r\n    clearScheduleOsc() {\r\n        for (let i = 0; i < this.scheduleOsc.length; i++) {\r\n            this.scheduleOsc[i].disconnect();\r\n        }\r\n        this.scheduleOsc = [];\r\n    }\r\n    tick() {\r\n        let at = this.audioContext.currentTime;\r\n        let cycleTime = 60 / this.bpm;\r\n        if (at > this.nextTime) {\r\n            this.timeOffset += 0.05;\r\n            this.makeSound(at + this.timeOffset);\r\n            this.nextTime = at + this.timeOffset + cycleTime;\r\n        }\r\n        else {\r\n            this.makeSound(this.nextTime);\r\n            this.nextTime += cycleTime;\r\n        }\r\n        at = this.audioContext.currentTime;\r\n        if (this.beatCount === 4) {\r\n            // there, this.nextTime is the time of 5th beat after above process\r\n            this.startTime = performance.now() + (this.nextTime - at) * 1000;\r\n        }\r\n        if (this.scheduleOsc.length > 10)\r\n            this.scheduleOsc.shift();\r\n    }\r\n    makeSound(startTime, sound = this.sound) {\r\n        let osc = this.audioContext.createBufferSource();\r\n        if (this.beatCount % 4 === 0 && this.mode === \"click\") {\r\n            sound = this.sound2;\r\n        }\r\n        osc.buffer = sound;\r\n        osc.connect(this.gainNode);\r\n        osc.start(startTime);\r\n        osc.stop(startTime + 0.05);\r\n        this.beatCount++;\r\n        this.scheduleOsc.push(osc);\r\n        return osc;\r\n    }\r\n}\r\nlet beep = \"data:audio/wav;base64,UklGRhAHAABXQVZFZm10IBAAAAABAAIARKwAABCxAgAEABAAZGF0YegGAAD6/wQA+v8AADoA6v8k/1YAMgB+/koD6gAuAJQEFPu0/Yr+0vkYAVb/VgB4AQYClgFuBfIERATsBvj9GAPQ+fT6oPoo9xL94Pd+/h77mv/s/5QBVgPWA84DJAUcBOAFngZoBkwILgOYBtT+jgB6/Fb6evhm+wrzBv7Y8yz40vxm8z4D8vKIA071lgT0/IgHeAl0CfIUsgpQHMYK+h+KCwIZTAkqCIQBJvd+9qjpVOoI38TfkNqa2sTdtt0k4troGuCg96TgWAdG7XIUfgL0GtwZJiFcLsIsKjx4MyY/tC/sQaIkzkK0EmQ1YP4WH8zyvgUy8S7oWO2E1XrkHNXq35TWDOFI1DrgatV64IjUtuc60QjqKNhQ6VrlmvFK7Sr8uPLE+mb7Du+CAATlIPtO5J7vIOpc31T2uNOKBHrcAguW9fIKdhBUEsgsrimyR8hEGlSYVNBWxlVkWg9LXVz/OUBXGitpSBgjRS/ZHcoSAhIy/ZL/zvNi7gXy4+HQ7oXZYejt1eLinNWH3IDTbdDm0UHFxdVTxUXXS8wAzlrQL8LOzgW+zMHlwFSoCcW+mFTKiKFn0jK7ttui2sjm8/bN93IM8gN1Bz0KHgs1DtsNjg85EKYQaRKMEvETuxPnE80S1xFYEOoOzQ1KDT4MVQ1iDKQNzg3cDX8Otw7sDE0PjglDDVIFZwi2AbkCYv+u/vH8dfxw+b/5SPVt9UDw1O/R6n7q3+at58rleud85ovokOc56mXpAOwJ7HjtAe9E7hLyY++J9T/y1flP9rz+z/koA3D8RAZY/0wIywLCCSgGUAsQCkQO5w6dEkcTKBaiFngXBxpGF9wcsRbSHLwVrxlFFL8VsRKSEvwQsg9+DnQMqAoYCbMF9QXZAAYDifwPAGL4zfyy9HX5oPFb9nXuWfM36yHwhui27Bjndekw55bmBOiX5OLoUORK6rDlbOyy57vuyOkW8p3sOvfC8Bn9SvZJAi79LgYpBBoJQwmgC6cM7g0SD+EP8g9HEdIPXBJsEFsT0RGwExMTRRMjFPASLhUcE9QVORP6FYISkxV6EBkU1QyMEQMIRw4nA90JpP4eBEb6xv079tj3fPIB88jui+/a61TtZOpi6wfqC+l66lHn2euE57LtXulT79Xrz/Ci7rTyhvEo9Zzzjvdz9K359/Qr/Jj2NP+q+VUCef2hBbEBHAlWBkYM/ArMDgYP/hBUEigTIBXeFFoXbRWdGJ8UqBjHEm0XKhDlFCoNbBFOCswNtQejCiMFDQidArsFOAA2A9T9OwBx++L8Dvmd+Y/27fY/9Nf0hPLe8iPx3fCx7+HuTe7S7HDt8ep17fPpk+5l6rDwROxp8/buV/br8UP5FfVH/Mj4Vv/z/DgC9wAbBWgE+wcjB14KHwnVC6kKhAw3DO8M3A1jDU4P0w1VEAsO4RDmDf8QgQ3TENUMbxC3C7EPTwplDr4IZwzIBrAJQASCBkABFgMe/of/H/sY/Gf4/fgp9kD2iPT68zjzH/IP8rTwefHE753xVu8j8nbv7vIY8AP0DvFS9VDy5fbH87b4ZvWq+kP3s/xy+d7+DfwwAQn/egMDAoYFugRHBz4HxAiCCQAKVQsQC7MMAwy4DbUMeg7LDOcONgzlDjwLcg4TCo0N0AgvDH0HbQr2BX8IDQR+BtkBXQSq/wsCrf2E/9T79fwa+on6l/hM+Er3X/Y59vf0ifUS9D/1evNN9TDzt/VF82v2nvNK9070WviA9a35H/ck++z4r/yf+lT+IPz4/6r9hwF5//UCYgE1BEIDTAUWBUgGvgYhBwcIvgfvCBYIlgknCPwJ6wcACnUHqwnNBiYJ+AVwCAEFcAfsAyIGuAKpBHkBJANLALcBPP9uAEz+L/91/eX9o/yl/Nb7k/sn+8z6p/pD+mP63vlf+o/5ifpW+cz6TPko+4n5ofsG+jr8sPr//H775/1i/NX+VP2y/1j+dQBr/x0BfgC1AXcBQAJDArwC1gIcAzsDTwOEA1YDuwNEA+UDKwP5AwwD6gPbArcDlQJjAz4C+wLZAY0CbAEhAv8AtAGSAEABHgC6AKf/JwA2/5T/1f4N/4f+of5N/lL+K/4a/hv+9/0b/uP9Kv7f/Un+7v10/hL+pv5E/t3+ev4W/7b+U//4/pD/PP/H/3v/+f+1/ycA6/9RACAAdABRAI8AewCiAJoArgCvALQAvQC0AMUAsADGAKgAwQCYALUAhACjAG0AjABVAHQAPgBaACkAQAAWACkABQAVAPf/BADs//j/5P/u/9//5//d/+L/3f/f/97/3//h/+D/5f/j/+n/5//u/+v/8v/v//b/9P/5//f//P/6//7//f////7/AAD//wAAAAAAAAAA\";\r\nlet beep2 = \"data:audio/wav;base64,UklGRuYDAABXQVZFZm10IBAAAAABAAEAgLsAAAB3AQACABAAZGF0Yb4DAADw/wAAGAAgAOD+AP0I/Bj7OPr4+Uj5gPhw+BD4gPeQ96j5qPyo/vj9GPwo++j8wP9oAbAC6AOIBBADgADI/kj96PtI+9AB0AtgEYAZyCK4JlAimBkgBmjwAOUI3gDZKNco3LjlEO2o/CAQqBr4FqAM2ASw+njvCOpA+JAPOBzYDejzUOYw8PACmA1IEGAQkA8IC2AE8P44+rj2iPnQ7iDaQNOQ3QjscO6g57DjCOlA8qDzQPHY8QjzGPswBoANSBfAIGgooD52V+Ze1lDAOmgoFyAnHqYgpSCVG7YQ3wJp+br5vfEb4kHZ7tNr0JfP6sQWtxizELpLwR/KP9Wy4ZfwtfwLA+IPax58I1QaagxnA/AIoRXaFngM4wPRAc4EbwYrBQv4COl447jfxN604WfpJfRs+zD85Pzn/tcG/hXtILYm2S6MM8s0QStrH58fDiZgKXkm+R1yFEAPigbL/2H9Afvz9+D0mei/3XHX29cS3pfhzuYu7FbqU+i06cXshfNp+w8AcAl6E4oXdRIsDqEN7A09Do4OhAnmDh0ZnxqUFMgMWgNH8QjjNuBi5LbrH/G98bbxvfJ99pL+PgUqAtr5LPRF+0AJsxKtGnAd8hqTEtQKoAeXEoUcDh0TGsQTJg5OB+gBtADY/zEBQQPIAon88fU48rzsF+mJ6VbtH/Iy9fT5u/74AHcILBHCFJATnQ8IDKYVwiLxJ7keYBCoB/kCCQIqAzkD2ADm/Sr5CvUu9CjuuOeo4mLhsuQB7p/3T/x7/Qb+nP7wAysK2gxzDEgNLA4KEN4QQw9pCjECzvve+nz9zgCM/2n70/hn/SEFxAo3Cz8GyP/q/VUCeghMDbwPTw4wCjgF9gJNAwkH1wt4DWULBwhQBdkC5/3o+Rj5j/q//G/+H/kG8qPvHfKi9ur6LP45/37+6PnG9Zr1aPkF/rEABACJ/cT7QwDzBgQKyghbBfwATv7Q+277Mf2F//QAawEFA4YFugaiBaADmgKoAEP/Vf9B/j78xPrU+0/+UQBxAdsASP+j/g8ABQJhA10D8gHh//z+3P8OAd8BQAJjA0YEEgRDAzwBK/8n/S/8qvzI/eH+iv+D/3T+h/1P/g8ASQF0AJ/+a/0g/osApgJ3A/QCsgGRAC4A+f9UAN8AFwHNAGcAcwAjAKb/av/W/mL+SP57/g//tv/t/1j/of5q/k3+Tv6f/rb+mv6U/uf+ZP/I/xkASQBCAEgAYwB2AHgAZwBJADwAOwAzAAYA0v/B/83/3//w/wIADgAOAAcA\";\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Metronome.ts\n");

/***/ }),

/***/ "./src/SLPract.ts":
/*!************************!*\
  !*** ./src/SLPract.ts ***!
  \************************/
/*! exports provided: SLPract */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SLPract\", function() { return SLPract; });\n/* harmony import */ var _Timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Timer */ \"./src/Timer.ts\");\n\r\nclass SLPract {\r\n    constructor(controlTab, editor, metronome) {\r\n        this.bpm = 120;\r\n        this.timeSignature = { upper: 4, lower: 4 };\r\n        this.isRepeat = false;\r\n        this.indicatorShapes = [];\r\n        this.resultUIElements = [];\r\n        //Color configs \r\n        this.indicatorColor = \"rgba(255, 209, 81, 0.6)\";\r\n        this.correctResultColor = \"rgba(0, 163, 250, 0.9)\";\r\n        this.wrongResultColor = \"rgba(250, 80, 0, 0.9)\";\r\n        this.whiteColor = \"rgba(255, 255, 255, 0.9)\";\r\n        this.playFlag = false;\r\n        this.startFlag = false;\r\n        this.timer = new _Timer__WEBPACK_IMPORTED_MODULE_0__[\"Timer\"]();\r\n        this.playLag = 50 / 1000;\r\n        this.selectedTimeSum = 0;\r\n        this.metronomeOn = false;\r\n        this.playIter = 0;\r\n        this.maxPracticeTimes = 1;\r\n        this.openStringTunes = [40, 45, 50, 55, 59, 64]; //E2, A2, D3, G3, B3, E4\r\n        this.deviceStartTime = 0;\r\n        this.collectPractContent = [];\r\n        this.anlyzeMethod = \"pluck\";\r\n        this.loadedSheet = [];\r\n        this.preMetronome = true;\r\n        this.correctTolerance = 100;\r\n        this.devices = [];\r\n        this.controlTab = controlTab;\r\n        this.editor = editor;\r\n        this.metronome = metronome;\r\n        this.setEvents();\r\n    }\r\n    play() {\r\n        this.startFlag = true;\r\n        this.controlTab.inEdit = false;\r\n        if (this.playIter == this.maxPracticeTimes || (this.playIter > 0 && !this.isRepeat)) {\r\n            this.stop();\r\n            return;\r\n        }\r\n        //Load the sheet from sltab \r\n        this.loadedSheet = this.loadSheetNote();\r\n        //Clear practice UI\r\n        this.clearAnalyzeUI();\r\n        if (this.playIter > 0) {\r\n            // let result = this.practiceAnalyze(this.collectPractContent,this.deviceStartTime, new Date().getTime());\r\n            if (this.anlyzeMethod == \"whole\") {\r\n                let result = this.practiceAnalyze(this.collectPractContent);\r\n            }\r\n        }\r\n        if (this.playIter == 0) {\r\n            this.metronome.stopTick();\r\n            this.timer.stop();\r\n        }\r\n        let sectionNotes;\r\n        if (this.editor.SelectedNotes.length > 0) { //If selected more then one note swap to repeat playing mode\r\n            this.isRepeat = true;\r\n            sectionNotes = this.sortBySectionId(this.editor.SelectedNotes);\r\n        }\r\n        else {\r\n            this.isRepeat = false;\r\n            let selection = this.controlTab.headToEndSelect(this.controlTab.noteIndex(this.editor.selectedNote));\r\n            sectionNotes = this.sortBySectionId(selection);\r\n        }\r\n        let sectionLenSum = 0;\r\n        let preBeat = 0;\r\n        let sectionMetronomeBeats = [];\r\n        this.editor.undisplayIndicator();\r\n        /**\r\n         * setPracticeSectionIndicator(whole selected note info)\r\n         */\r\n        //////////////////////////////\r\n        sectionNotes.forEach((elem, index, self) => {\r\n            let sectionEnds = this.sectionTwoEnds(elem);\r\n            let sectionBeats = 0;\r\n            if (index == 0) {\r\n                if (this.nowPlaySectionIndicator == null) {\r\n                    this.nowPlaySectionIndicator = this.controlTab.tabCanvas.layers.ui.createRect(sectionEnds.x1, sectionEnds.y1, sectionEnds.x2 - sectionEnds.x1, sectionEnds.y2 - sectionEnds.y1, 2, this.indicatorColor);\r\n                }\r\n                else {\r\n                    this.nowPlaySectionIndicator.setPos(sectionEnds.x1, sectionEnds.y1);\r\n                    this.nowPlaySectionIndicator.setShape(sectionEnds.x2 - sectionEnds.x1, sectionEnds.y2 - sectionEnds.y1);\r\n                }\r\n                //If the first note selected is note on the beat, calc a prebeat note value.\r\n                if (elem[0].note != 0) {\r\n                    let preSum = 0;\r\n                    let firstSection = this.controlTab.getSectionData(elem[0].section);\r\n                    for (let i = 0; i < elem[0].note; i++) {\r\n                        preSum += this.timeSignature.lower / firstSection[i][0];\r\n                    }\r\n                    if (preSum % 1 != 0) {\r\n                        preBeat = this.timeSignature.lower / (1 - (preSum % 1));\r\n                    }\r\n                }\r\n            }\r\n            let sectionLen = 0;\r\n            elem.forEach((note, i, s) => {\r\n                // console.log(note)\r\n                let thisNote = this.controlTab.getNoteData(note.section, note.note);\r\n                // console.log(thisNote)\r\n                sectionLen += this.noteValeu2Time(thisNote.noteValue);\r\n                sectionBeats += this.timeSignature.lower / thisNote.noteValue;\r\n            });\r\n            sectionLenSum += sectionLen;\r\n            sectionMetronomeBeats.push(sectionBeats);\r\n            if (self.length == 1) {\r\n                this.timer.registerDelay(this.stopNowPlaySectionIndicator.bind(this), sectionLen * 1000, 1);\r\n            }\r\n            else if (self.length > 1 && index < self.length - 1) {\r\n                let nextSectionEnds = this.sectionTwoEnds(self[index + 1]);\r\n                this.indicatorShapes.push({ x: nextSectionEnds.x1, y: nextSectionEnds.y1, width: nextSectionEnds.x2 - nextSectionEnds.x1, height: nextSectionEnds.y2 - nextSectionEnds.y1 });\r\n                this.timer.registerDelay(this.pushNowPlaySectionIndicator.bind(this), sectionLenSum * 1000, 1);\r\n            }\r\n            if (index == self.length - 1) {\r\n                this.timer.registerDelay(this.play.bind(this), sectionLenSum * 1000, 1);\r\n            }\r\n        });\r\n        let sectionStartTime = 0;\r\n        if (this.playIter == 0) {\r\n            let repeatTime = 1;\r\n            if (this.isRepeat)\r\n                repeatTime = this.maxPracticeTimes;\r\n            for (let i = 0; i < repeatTime; i++) {\r\n                sectionMetronomeBeats.forEach((el, i, self) => {\r\n                    if (this.selectedTimeSum == 0 && sectionStartTime == 0)\r\n                        sectionStartTime += this.playLag;\r\n                    let sectionDuration = el * 60 / this.bpm;\r\n                    console.log(el);\r\n                    this.registerSectionMetronome(this.selectedTimeSum + sectionStartTime, el, sectionNotes[i][0].note == 0, preBeat);\r\n                    sectionStartTime += sectionDuration;\r\n                });\r\n            }\r\n        }\r\n        this.selectedTimeSum += sectionStartTime;\r\n        this.playIter += 1;\r\n        //////////////////////////\r\n        this.timer.start();\r\n        if (!this.metronomeOn) {\r\n            this.metronome.play();\r\n            this.metronomeOn = true;\r\n        }\r\n        //Start practicer analyze section.\r\n        this.deviceStartTime = performance.now();\r\n    }\r\n    stop() {\r\n        this.timer.stop();\r\n        this.stopNowPlaySectionIndicator();\r\n        this.indicatorShapes = [];\r\n        this.metronome.stopTick();\r\n        this.metronomeOn = false;\r\n        this.selectedTimeSum = 0;\r\n        this.playIter = 0;\r\n        this.editor.displayIndicator();\r\n        this.playFlag = false;\r\n        this.startFlag = false;\r\n        this.controlTab.inEdit = true;\r\n        // let result = this.practiceAnalyze(this.collectPractContent,this.deviceStartTime, new Date().getTime());\r\n        if (this.anlyzeMethod == \"whole\") {\r\n            let result = this.practiceAnalyze(this.collectPractContent);\r\n            this.drawAnalyzeUI(this.controlTab.tabCanvas.layers.ui, result);\r\n        }\r\n    }\r\n    bindDevice() {\r\n    }\r\n    // onPluck(input: MidiInput){\r\n    //     if(this.playFlag){\r\n    //         this.collectPractContent.push(input);\r\n    //     }\r\n    // }\r\n    onPluck(channel, note, time) {\r\n        let input = { \"channel\": channel, \"note\": note, \"time\": time };\r\n        if (this.startFlag) {\r\n            this.collectPractContent.push(input);\r\n            if (this.anlyzeMethod == \"pluck\") {\r\n                let results = this.practiceAnalyze([input]);\r\n                this.drawAnalyzeUI(this.controlTab.tabCanvas.layers.ui, results);\r\n            }\r\n        }\r\n    }\r\n    loadSheetNote() {\r\n        let loadedSheet = [];\r\n        let noteTime = 0;\r\n        let noteId = 0;\r\n        this.controlTab.notes.forEach((elem, i, self) => {\r\n            elem.forEach((el, j, s) => {\r\n                loadedSheet.push({ \"section\": i, \"note\": j, \"noteId\": noteId, \"noteValue\": el.noteValue, 'noteTime': noteTime, 'stringContent': el[1], \"style\": el[2] });\r\n                noteTime += this.noteValeu2Time(el.noteValue) * 1000;\r\n                noteId += 1;\r\n            });\r\n        });\r\n        return loadedSheet;\r\n    }\r\n    playPracticeSectionIndicator() {\r\n        this.timer.start();\r\n    }\r\n    setPracticeSectionIndicator(sectionNotes) {\r\n        let sectionLenSum = 0;\r\n        sectionNotes.forEach((elem, index, self) => {\r\n            let sectionEnds = this.sectionTwoEnds(elem);\r\n            let sectionBeats = 0;\r\n            if (index == 0) {\r\n                if (this.nowPlaySectionIndicator == null) {\r\n                    this.nowPlaySectionIndicator = this.controlTab.tabCanvas.layers.ui.createRect(sectionEnds.x1, sectionEnds.y1, sectionEnds.x2 - sectionEnds.x1, sectionEnds.y2 - sectionEnds.y1, 2, this.indicatorColor);\r\n                }\r\n                else {\r\n                    this.nowPlaySectionIndicator.setPos(sectionEnds.x1, sectionEnds.y1);\r\n                    this.nowPlaySectionIndicator.setShape(sectionEnds.x2 - sectionEnds.x1, sectionEnds.y2 - sectionEnds.y1);\r\n                }\r\n            }\r\n            let sectionLen = 0;\r\n            elem.forEach((note, i, s) => {\r\n                let thisNote = this.controlTab.getNoteData(note.section, note.note);\r\n                sectionLen += this.noteValeu2Time(thisNote.noteValue);\r\n                sectionBeats += this.timeSignature.lower / thisNote.noteValue;\r\n            });\r\n            sectionLenSum += sectionLen;\r\n            if (self.length == 1) {\r\n                this.timer.registerDelay(this.stopNowPlaySectionIndicator.bind(this), sectionLen * 1000, 1);\r\n            }\r\n            else if (self.length > 1 && index < self.length - 1) {\r\n                let nextSectionEnds = this.sectionTwoEnds(self[index + 1]);\r\n                this.indicatorShapes.push({ x: nextSectionEnds.x1, y: nextSectionEnds.y1, width: nextSectionEnds.x2 - nextSectionEnds.x1, height: nextSectionEnds.y2 - nextSectionEnds.y1 });\r\n                this.timer.registerDelay(this.pushNowPlaySectionIndicator.bind(this), sectionLenSum * 1000, 1);\r\n            }\r\n            if (index == self.length - 1) {\r\n                this.timer.registerDelay(this.play.bind(this), sectionLenSum * 1000, 1);\r\n            }\r\n        });\r\n    }\r\n    pushNowPlaySectionIndicator() {\r\n        let nextShape = this.indicatorShapes.shift();\r\n        this.nowPlaySectionIndicator.setPos(nextShape.x, nextShape.y);\r\n        this.nowPlaySectionIndicator.setShape(nextShape.width, nextShape.height);\r\n    }\r\n    stopNowPlaySectionIndicator() {\r\n        if (this.nowPlaySectionIndicator != null) {\r\n            this.nowPlaySectionIndicator.remove();\r\n            this.nowPlaySectionIndicator = null;\r\n        }\r\n    }\r\n    getSetionBeats(sectionNotes) {\r\n        // If the first note selected is note on the beat, calc a prebeat note value.\r\n        let preBeat = 0;\r\n        if (sectionNotes[0].note != 0) {\r\n            let preSum = 0;\r\n            let sectionNoteRaw = this.controlTab.getSectionData(sectionNotes[0].section);\r\n            for (let i = 0; i < sectionNotes[0].note; i++) {\r\n                preSum += this.timeSignature.lower / sectionNoteRaw[i][0];\r\n            }\r\n            if (preSum % 1 != 0) {\r\n                preBeat = this.timeSignature.lower / (1 - (preSum % 1));\r\n            }\r\n        }\r\n    }\r\n    noteValeu2Time(noteValue) {\r\n        if (noteValue == 0)\r\n            return 0;\r\n        else\r\n            return (this.timeSignature.lower / noteValue) / (this.bpm / 60);\r\n    }\r\n    registerSectionMetronome(startTime, sectionBeats, firstClick, preBeat) {\r\n        if (preBeat == null) {\r\n            preBeat = 0;\r\n        }\r\n        let pre = this.timeSignature.lower / preBeat;\r\n        if (pre == Infinity)\r\n            pre = 0;\r\n        //Metronome click first beat on the section\r\n        if (firstClick) {\r\n            this.metronome.scheduleTick(startTime * 1000, 'strong');\r\n        }\r\n        else {\r\n            this.metronome.scheduleTick((startTime + this.noteValeu2Time(preBeat)) * 1000, 'normal');\r\n        }\r\n        console.log(sectionBeats - pre);\r\n        for (let i = 1; i < Math.floor(sectionBeats - pre); i++) {\r\n            this.metronome.scheduleTick((startTime + i * this.noteValeu2Time(this.timeSignature.lower) + this.noteValeu2Time(preBeat)) * 1000, 'normal');\r\n        }\r\n    }\r\n    setEvents() {\r\n        this.controlTab.on(\"keydown\", (key) => {\r\n            if (key.toLowerCase() === \" \") {\r\n                this.controlTab.inEdit = false;\r\n                this.playFlag = !this.playFlag;\r\n                if (this.playFlag) {\r\n                    this.editor.undisplayIndicator();\r\n                    if (this.preMetronome) {\r\n                        this.registerSectionMetronome(this.playLag, this.timeSignature.upper, true);\r\n                        this.timer.registerDelay(this.play.bind(this), this.timeSignature.upper * this.noteValeu2Time(this.timeSignature.lower) * 1000);\r\n                        this.metronome.play();\r\n                        this.timer.start();\r\n                    }\r\n                    else {\r\n                        this.play();\r\n                    }\r\n                }\r\n                else {\r\n                    this.stop();\r\n                }\r\n                this.clearAnalyzeUI();\r\n            }\r\n            if (key.toLowerCase() === \"q\") {\r\n                // this.onPluck({\"channel\": 0, \"note\": 0, \"time\": new Date().getTime()})\r\n                this.onPluck(0, 0, performance.now());\r\n            }\r\n        });\r\n        this.controlTab.on(\"mousedown\", (x, y) => {\r\n            this.clearAnalyzeUI();\r\n        });\r\n    }\r\n    sortBySectionId(notes) {\r\n        let selectedSections = [];\r\n        for (let i = 0; i < notes.length; i++) {\r\n            selectedSections.push(notes[i].section);\r\n        }\r\n        let uniqueSelectedSections = selectedSections.filter(function (elem, index, self) {\r\n            return index == self.indexOf(elem);\r\n        });\r\n        let ret = [];\r\n        for (let i = 0; i < uniqueSelectedSections.length; i++) {\r\n            let pushNotes = notes.filter(function (elem, index, self) {\r\n                return elem.section == uniqueSelectedSections[i];\r\n            });\r\n            ret.push(pushNotes);\r\n        }\r\n        return ret;\r\n    }\r\n    sectionTwoEnds(section) {\r\n        let strings = section[0].blockGroup.length;\r\n        let leftTopEnd = { x: section[0].blockGroup[0].x, y: section[0].blockGroup[0].y };\r\n        let rightBotEnd = { x: section[section.length - 1].blockGroup[strings - 1].x, y: section[section.length - 1].blockGroup[strings - 1].y };\r\n        if (section[0].note == 0) {\r\n            let thisSection = this.controlTab.tabCanvas.layers.ui.sectionIndicator[section[0].section];\r\n            leftTopEnd = { x: thisSection.x, y: thisSection.y };\r\n        }\r\n        if (section[section.length - 1].note == this.controlTab.notes[section[section.length - 1].section].length - 1) {\r\n            let thisSection = this.controlTab.tabCanvas.layers.ui.sectionIndicator[section[section.length - 1].section];\r\n            rightBotEnd = { x: thisSection.x + thisSection.width, y: thisSection.y + thisSection.height };\r\n        }\r\n        return { x1: leftTopEnd.x, y1: leftTopEnd.y, x2: rightBotEnd.x, y2: rightBotEnd.y };\r\n    }\r\n    // private practiceAnalyze(input: MidiInput[], devicePlayTime: number, deviceEndTime: number): AnalyzeResult[]{\r\n    practiceAnalyze(input) {\r\n        // let loadedSheetMusic: NoteInfo[] = this.loadSheetNote();\r\n        // let sheetMusic: NoteInfo[] = loadedSheetMusic.filter((elem, index, self) =>{\r\n        //     return elem.noteTime>= devicePlayTime - this.deviceStartTime && elem.noteTime <= deviceEndTime -this.deviceStartTime;\r\n        // });\r\n        if (input.length < 1)\r\n            return [];\r\n        if (this.loadedSheet.length < 1)\r\n            return [];\r\n        let rets = [];\r\n        input.forEach((elem, index, self) => {\r\n            let ret;\r\n            // if(elem.time < devicePlayTime || elem.time > deviceEndTime){\r\n            //     return\r\n            // }\r\n            let mappedNote = this.timeNoteMapping(elem.time - this.deviceStartTime, this.loadedSheet);\r\n            let timeResult;\r\n            let noteResult;\r\n            //Check if playing input is correct and return results.\r\n            console.log(elem.time - this.deviceStartTime);\r\n            console.log(performance.now() - this.deviceStartTime);\r\n            if (Math.abs((elem.time - this.deviceStartTime) - (this.loadedSheet[mappedNote].noteTime + this.playLag)) <= this.correctTolerance) {\r\n                timeResult = \"correct\";\r\n            }\r\n            else if ((elem.time - this.deviceStartTime) - (this.loadedSheet[mappedNote].noteTime + this.playLag) > 0) {\r\n                timeResult = \"drag\";\r\n            }\r\n            else {\r\n                timeResult = 'rush';\r\n            }\r\n            if (elem.note == this.loadedSheet[mappedNote].stringContent[elem.channel]) {\r\n                noteResult = true;\r\n            }\r\n            else {\r\n                noteResult = false;\r\n            }\r\n            ret = {\r\n                \"section\": this.loadedSheet[mappedNote].section,\r\n                \"note\": this.loadedSheet[mappedNote].note,\r\n                \"channel\": elem.channel,\r\n                \"playedNote\": elem.note,\r\n                \"sheetNote\": this.loadedSheet[mappedNote].stringContent[elem.channel],\r\n                \"playedTime\": elem.time - this.deviceStartTime,\r\n                \"sheetTime\": this.loadedSheet[mappedNote].noteTime,\r\n                \"noteId\": this.loadedSheet[mappedNote].noteId,\r\n                \"timeResult\": timeResult,\r\n                \"noteResult\": noteResult\r\n            };\r\n            rets.push(ret);\r\n        });\r\n        return rets;\r\n    }\r\n    drawAnalyzeUI(target, playResults) {\r\n        playResults.forEach((result, index, self) => {\r\n            let [x, y] = this.controlTab.getNotePosition(result.section, result.note, result.channel);\r\n            let noteValue = this.controlTab.getNoteData(result.section, result.note).noteValue;\r\n            let resultPosBias = 0;\r\n            if (result.timeResult == \"drag\") {\r\n                resultPosBias = 1 / (noteValue / this.timeSignature.lower) * 30;\r\n            }\r\n            else if (result.timeResult == \"rush\") {\r\n                resultPosBias = 1 / (noteValue / this.timeSignature.lower) * (-30);\r\n            }\r\n            let resultEllipse = target.createEllipse(x + resultPosBias, y, 8, 8);\r\n            let resultText = target.createText(x + resultPosBias, y + 5, result.playedNote.toString(), \"middle\");\r\n            if (result.timeResult == \"correct\" && result.noteResult) {\r\n                resultText.fill = this.correctResultColor;\r\n                resultEllipse.fill = this.correctResultColor;\r\n            }\r\n            else {\r\n                // resultText.fill = this.wrongResultColor;\r\n                resultText.fill = this.whiteColor;\r\n                resultEllipse.fill = this.wrongResultColor;\r\n            }\r\n            // console.log(resultEllipse.cx)\r\n            // resultText.x += resultPosBias;\r\n            // resultEllipse.cx += resultPosBias;\r\n            // console.log(resultEllipse.cx)\r\n            this.resultUIElements.push(resultText);\r\n            this.resultUIElements.push(resultEllipse);\r\n        });\r\n    }\r\n    clearAnalyzeUI() {\r\n        this.resultUIElements.forEach((elem, index, self) => {\r\n            elem.remove();\r\n        });\r\n    }\r\n    timeNoteMapping(time, sheetMusic) {\r\n        let lastTime = 0;\r\n        for (let i = 0; i < sheetMusic.length; i++) {\r\n            if (time > lastTime && time <= sheetMusic[i].noteTime) {\r\n                if (Math.abs(time - lastTime) > Math.abs(time - sheetMusic[i].noteTime)) {\r\n                    return i;\r\n                }\r\n                else\r\n                    return i - 1;\r\n            }\r\n            else if (time > sheetMusic[sheetMusic.length - 1].noteTime) {\r\n                return sheetMusic.length - 1;\r\n            }\r\n            lastTime = sheetMusic[i].noteTime;\r\n        }\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/SLPract.ts\n");

/***/ }),

/***/ "./src/SlimTabV2.ts":
/*!**************************!*\
  !*** ./src/SlimTabV2.ts ***!
  \**************************/
/*! exports provided: SLTab */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SLTab\", function() { return SLTab; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\n/* harmony import */ var _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SlimTabV2Types */ \"./src/SlimTabV2Types.ts\");\n/* harmony import */ var _SlimTabV2Canvas__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SlimTabV2Canvas */ \"./src/SlimTabV2Canvas.ts\");\n\r\n\r\n\r\nclass SLTab {\r\n    constructor(data) {\r\n        this.inEdit = true;\r\n        this.lengthPerBeat = 4;\r\n        this.beatPerSection = 4;\r\n        this.containerHeight = 700;\r\n        this.lineWidth = 1200;\r\n        this.sectionPerLine = 4;\r\n        this.stringPadding = 16; // distance between each string\r\n        this.linePerPage = 20;\r\n        this.lineMargin = 42; // only for left and right\r\n        this.linePadding = [32, 14];\r\n        this.lineDistance = 90; // distance between each line\r\n        this.sectionAddNoteNumber = 8;\r\n        this.linkerElement = [];\r\n        this.startPosition = [this.lineMargin + this.linePadding[0] + 20, 120 + this.linePadding[1]]; // x, y\r\n        this.lineStartPosition = [this.lineMargin, 120]; // total line number, last line X, last line Y\r\n        this.calData = [];\r\n        Object.assign(this, data);\r\n        this.tabCanvas = new _SlimTabV2Canvas__WEBPACK_IMPORTED_MODULE_2__[\"SLCanvas\"](_SlimTabV2Canvas__WEBPACK_IMPORTED_MODULE_2__[\"SLLayer\"]);\r\n        this.width = this.lineWidth + this.linePadding[0] * 2 + 42 * 2;\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.tabCanvas.domElement, { width: `${this.width}` });\r\n        this.domElement = document.createElement(\"div\");\r\n        this.domElement.append(this.tabCanvas.domElement);\r\n        this.domElement.addEventListener(\"keydown\", (e) => {\r\n            let ka = [32, 37, 38, 39, 40]; //space: 32, left: 37, up: 38, right: 39, down: 40,\r\n            if (ka.includes(e.keyCode)) {\r\n                e.preventDefault();\r\n                e.returnValue = false;\r\n            }\r\n        });\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.domElement, { \"width\": `${this.width + 20}px`, height: `${this.containerHeight}px`, \"overflow-y\": \"auto\", \"overflow-x\": \"hidden\" });\r\n        //if add new event, you should describe the callback in eventCallBackInterface above\r\n        this.callbacks = new _utils__WEBPACK_IMPORTED_MODULE_0__[\"Callbacks\"]([\r\n            \"noteclick\",\r\n            \"noteshiftclick\",\r\n            \"notealtclick\",\r\n            \"notectrlclick\",\r\n            \"keydown\",\r\n            \"mouseovernote\",\r\n            \"mouseoutnote\",\r\n            \"mousedown\",\r\n            \"mousemove\",\r\n            \"mouseup\",\r\n            \"rightclick\",\r\n            \"sectionhover\",\r\n            \"sectionhout\",\r\n            \"sectionclick\",\r\n        ]);\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, { tabindex: \"-1\" });\r\n        this.domElement.addEventListener(\"keydown\", this.onKeydown.bind(this));\r\n        this.domElement.addEventListener(\"mousedown\", this.onMouseDown.bind(this));\r\n        this.domElement.addEventListener(\"mousemove\", this.onMouseMove.bind(this));\r\n        this.domElement.addEventListener(\"mouseup\", this.onMouseUp.bind(this));\r\n        this.domElement.addEventListener(\"contextmenu\", this.onMouseRightClick.bind(this)); //Right click\r\n    }\r\n    //todo: do a stricter check for these function\r\n    setData(data) {\r\n        this.clearData();\r\n        let na = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            let newSection = [];\r\n            for (let j = 0; j < data[i].length; j++) {\r\n                let newNote = new _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_1__[\"Note\"]({ noteValue: data[i][j][0], stringContent: data[i][j][1], userData: data[i][j][2] });\r\n                newSection.push(newNote);\r\n            }\r\n            na.push(newSection);\r\n        }\r\n        this.notes = na;\r\n    }\r\n    getNoteData(section, note) {\r\n        return this.notes[section][note];\r\n    }\r\n    setNoteData(section, note, data) {\r\n        if (section === -1)\r\n            section = this.notes.length - 1;\r\n        if (note === -1)\r\n            note = this.notes[section].length - 1;\r\n        this.notes[section][note] = data;\r\n    }\r\n    setStringDataOfNote(section, note, string, data) {\r\n        if (string >= 0 && string <= 5) {\r\n            this.notes[section][note][1][string] = data;\r\n        }\r\n    }\r\n    getSectionData(section) {\r\n        return this.notes[section];\r\n    }\r\n    deleteNote(section, note, number = 1) {\r\n        if (section === -1)\r\n            section = this.notes.length - 1;\r\n        if (note === -1)\r\n            note = this.notes[section].length - 1;\r\n        let np = this.getNoteFlattenNumber(section, note);\r\n        let dn = this.notes[section].splice(note, number).length;\r\n        this.removeCalData(np, dn);\r\n    }\r\n    addNote(section, note, data) {\r\n        if (this.inEdit) {\r\n            if (section === -1 || section >= this.notes.length) {\r\n                section = this.notes.length;\r\n                this.notes.push([]);\r\n            }\r\n            if (note === -1 || note > this.notes[section].length) {\r\n                note = this.notes[section].length;\r\n            }\r\n            this.notes[section].splice(note, 0, data);\r\n            let np = this.getNoteFlattenNumber(section, note);\r\n            this.calData.splice(np, 0, { x: -1, y: -1, length: -1, blocks: [], tail: [], section: -1, note: -1, hasSvg: false });\r\n        }\r\n    }\r\n    isBlankNote(section, note) {\r\n        for (let i = 0; i < 6; i++) {\r\n            if (this.notes[section][note][1][i] != -1) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    getSVGNote(section, note) {\r\n        let noteElements = this.tabCanvas.layers.notes.noteElements;\r\n        return noteElements.find((elem) => {\r\n            return elem.section == section && elem.note == note;\r\n        });\r\n    }\r\n    getNotePosition(section, note, string = 0) {\r\n        let sum = 0;\r\n        if (section == -1)\r\n            section = this.notes.length - 1;\r\n        if (note == -1)\r\n            note = this.notes[section].length - 1;\r\n        if (section >= this.notes.length || section < -1 || note >= this.notes[section].length || note < -1 || string > 5 || string < 0) {\r\n            return [-1, -1];\r\n        }\r\n        if (this.notes[section].length === 0)\r\n            return [-1, -1];\r\n        for (let i = 0; i < section; i++) {\r\n            sum += this.notes[i].length;\r\n        }\r\n        sum += note;\r\n        if (!this.tabCanvas.layers.notes.noteElements[sum])\r\n            return [-1, -1];\r\n        let sel = this.tabCanvas.layers.notes.noteElements[sum].blockGroup[string];\r\n        return [sel.x, sel.y];\r\n    }\r\n    getNoteNumberOfSection(section) {\r\n        if (section == -1)\r\n            section = this.notes.length - 1;\r\n        return this.notes[section].length;\r\n    }\r\n    getSectionNumber() {\r\n        return this.notes.length;\r\n    }\r\n    insertSection(section, data = []) {\r\n        if (section < -1 || section > this.notes.length) {\r\n            return false;\r\n        }\r\n        if (section === -1)\r\n            section = this.notes.length;\r\n        let isp = this.getNoteFlattenNumber(section, -1);\r\n        let isa = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            isa.push({ x: -1, y: -1, length: -1, blocks: [], tail: [], section: -1, note: -1, hasSvg: false });\r\n        }\r\n        this.notes.splice(section, 0, data);\r\n        this.calData.splice(isp + 1, 0, ...isa);\r\n        return true;\r\n    }\r\n    deleteSections(section, number = 1) {\r\n        if (section < -1 || section >= this.notes.length) {\r\n            return [];\r\n        }\r\n        let dn = 0;\r\n        let dp = this.getNoteFlattenNumber(section, 0);\r\n        for (let i = section; i < section + number && i < this.noteIndex.length; i++)\r\n            dn += this.notes[i].length;\r\n        this.removeCalData(dp, dn);\r\n        return this.notes.splice(section, number);\r\n    }\r\n    getNoteFlattenNumber(section, note) {\r\n        if (!this.notes[section])\r\n            return -1;\r\n        if (note === -1)\r\n            note = this.notes[section].length - 1;\r\n        if (this.notes[section][note]) {\r\n            let total = 0;\r\n            for (let i = 0; i < section; i++)\r\n                total += this.notes[i].length;\r\n            total += note;\r\n            return total;\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n     * add a note\r\n     * @param { [number, number[], any] }   data, note length, [block number, index is string number,], user data\r\n     * @param { number }                    section, if give -1, note will be appended at last section. Index start from 0\r\n     * @param { number }                    note, if give -1, note will be appended at last note. Index start from 0\r\n     */\r\n    instrumentNoteInput(correction, data, section = -1, note = -1) {\r\n        if (section == -1)\r\n            section = this.notes.length - 1;\r\n        if (note == -1)\r\n            note = this.notes[section].length;\r\n        correction(this, data, section, note);\r\n        this.render();\r\n    }\r\n    attach(anchor) {\r\n        anchor.append(this.domElement);\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(anchor, { width: `${this.width + 20}px` });\r\n    }\r\n    noteIndex(note) {\r\n        return this.tabCanvas.layers.notes.noteElements.indexOf(note);\r\n    }\r\n    /**\r\n * Drag and drog area select notes\r\n * Bad implement by now, the function search each note to find collision\r\n * Algorithm will be fixed in future.\r\n */\r\n    areaSelect(x1, y1, x2, y2) {\r\n        let noteElements = this.tabCanvas.layers.notes.noteElements;\r\n        var selectedNoteIds = [];\r\n        let leftSelectedNote;\r\n        let rightSelectedNote;\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            for (let j = 0; j < 6; j++) {\r\n                //Check if note is in the selected area\r\n                if (noteElements[i].blockGroup[j].x >= x1\r\n                    && noteElements[i].blockGroup[j].x <= x2\r\n                    && noteElements[i].blockGroup[j].y >= y1\r\n                    && noteElements[i].blockGroup[j].y <= y2\r\n                    && noteElements[i].domelement.style.display != \"none\") {\r\n                    selectedNoteIds.push(i);\r\n                }\r\n            }\r\n        }\r\n        leftSelectedNote = Math.min(...selectedNoteIds);\r\n        rightSelectedNote = Math.max(...selectedNoteIds);\r\n        return noteElements.slice(leftSelectedNote, rightSelectedNote + 1);\r\n    }\r\n    endsSelect(head, tail) {\r\n        if (head > tail) {\r\n            let temp = tail;\r\n            tail = head;\r\n            head = temp;\r\n        }\r\n        return this.tabCanvas.layers.notes.noteElements.slice(head, tail + 1);\r\n    }\r\n    headToEndSelect(head) {\r\n        return this.tabCanvas.layers.notes.noteElements.slice(head, this.tabCanvas.layers.notes.noteElements.length);\r\n    }\r\n    render() {\r\n        this.setAllLine();\r\n        let [calDataLength, changeSet, linkerData, sectionPosition, dotData] = this.calNoteData();\r\n        this.setSectionIndicator(sectionPosition);\r\n        this.setAllNoteElementData(calDataLength, changeSet);\r\n        this.setLinker(linkerData);\r\n        this.setDot(dotData);\r\n        let ln = Math.ceil(this.notes.length / this.sectionPerLine);\r\n        if (this.height != (this.lineStartPosition[1] + (this.stringPadding * 5 + this.lineDistance) * ln + 70)) {\r\n            this.height = (this.lineStartPosition[1] + (this.stringPadding * 5 + this.lineDistance) * ln + 70);\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.tabCanvas.domElement, { height: `${this.height}` });\r\n        }\r\n    }\r\n    on(ename, cbk) {\r\n        if (ename in this.callbacks) {\r\n            this.callbacks[ename].push(cbk);\r\n        }\r\n    }\r\n    scrollTo(val) {\r\n        this.domElement.scrollTop = val;\r\n    }\r\n    getSectionLeftTopPos(section) {\r\n        if (section < this.notes.length) {\r\n            return [this.tabCanvas.layers.ui.sectionIndicator[section].x, this.tabCanvas.layers.ui.sectionIndicator[section].y];\r\n        }\r\n        return [-1, -1];\r\n    }\r\n    getSectionWidth(section) {\r\n        if (section < this.notes.length) {\r\n            this.tabCanvas.layers.ui.sectionIndicator[section].width;\r\n        }\r\n        return 0;\r\n    }\r\n    getSectionHeight(section) {\r\n        if (section < this.notes.length) {\r\n            this.tabCanvas.layers.ui.sectionIndicator[section].height;\r\n        }\r\n        return 0;\r\n    }\r\n    adjustPostion(y) {\r\n        if (y + 220 > this.domElement.scrollTop + this.containerHeight) {\r\n            this.scrollTo(y - this.containerHeight + 220);\r\n        }\r\n        if (y - 80 < this.domElement.scrollTop) {\r\n            this.scrollTo(y - 80);\r\n        }\r\n    }\r\n    isSectionFull(section) {\r\n        let stackLength = 0; // unit in beat\r\n        for (let i = 0; i < this.notes[section].length; i++) {\r\n            stackLength += this.lengthPerBeat / this.notes[section][i][0];\r\n        }\r\n        if (stackLength >= this.beatPerSection) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    clearData() {\r\n        this.notes = [[]];\r\n        this.calData = [];\r\n        this.tabCanvas.layers.notes.removeNote(0, this.tabCanvas.layers.notes.noteElements.length);\r\n    }\r\n    removeCalData(removeIndex, num) {\r\n        this.calData.splice(removeIndex, num);\r\n        this.tabCanvas.layers.notes.removeNote(removeIndex, num);\r\n    }\r\n    setAllLine() {\r\n        let ln = Math.ceil(this.notes.length / this.sectionPerLine); // number of row you need\r\n        let an = this.tabCanvas.layers.sheet.row.length; // number of row you have\r\n        for (let i = an; i < ln; i++) {\r\n            let x = this.lineStartPosition[0];\r\n            let y = this.lineStartPosition[1] + (this.stringPadding * 5 + this.lineDistance) * i;\r\n            this.tabCanvas.layers.sheet.createRow(x, y, this.lineWidth, this.linePadding, this.stringPadding, this.sectionPerLine);\r\n        }\r\n        for (let i = ln; i < an; i++) {\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.tabCanvas.layers.sheet.row[i], { display: \"none\" });\r\n        }\r\n        for (let i = 0; i < ln; i++) {\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.tabCanvas.layers.sheet.row[i], { display: \"unset\" });\r\n        }\r\n    }\r\n    setSectionIndicator(position) {\r\n        if (position.length > this.tabCanvas.layers.ui.sectionIndicator.length) {\r\n            let nsNumber = position.length - this.tabCanvas.layers.ui.sectionIndicator.length;\r\n            for (let i = 0; i < nsNumber; i++) {\r\n                let nc = this.tabCanvas.layers.ui.createSectionIndicator();\r\n                nc.domElement.addEventListener(\"mousemove\", this.onSectionHover.bind(this));\r\n                nc.domElement.addEventListener(\"mouseout\", this.onSectionHout.bind(this));\r\n                nc.domElement.addEventListener(\"click\", this.onSectionClick.bind(this));\r\n            }\r\n        }\r\n        for (let i = 0; i < position.length; i++) {\r\n            let width = position[i][1][0] - position[i][0][0];\r\n            let height = this.stringPadding * 5;\r\n            this.tabCanvas.layers.ui.sectionIndicator[i].x = position[i][0][0];\r\n            this.tabCanvas.layers.ui.sectionIndicator[i].y = position[i][0][1];\r\n            this.tabCanvas.layers.ui.sectionIndicator[i].width = width;\r\n            this.tabCanvas.layers.ui.sectionIndicator[i].height = height;\r\n            this.tabCanvas.layers.sheet.bar[i].x1 = position[i][0][0] + width;\r\n            this.tabCanvas.layers.sheet.bar[i].x2 = position[i][0][0] + width;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.tabCanvas.layers.ui.sectionIndicator[i].domElement, { \"data-section\": `${i}` });\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.tabCanvas.layers.ui.sectionIndicator[i].domElement, { display: \"unset\" });\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.tabCanvas.layers.sheet.bar[i].domElement, { display: \"unset\" });\r\n        }\r\n        for (let i = position.length; i < this.tabCanvas.layers.ui.sectionIndicator.length; i++) {\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.tabCanvas.layers.ui.sectionIndicator[i].domElement, { display: \"none\" });\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.tabCanvas.layers.sheet.bar[i].domElement, { display: \"none\" });\r\n        }\r\n    }\r\n    calNoteData() {\r\n        let [x, y] = this.startPosition;\r\n        let sectionLength = this.beatPerSection / this.lengthPerBeat;\r\n        let linker = [];\r\n        let dot = [];\r\n        let sectionIndicator = [];\r\n        let seperaterLength = 1 / 4;\r\n        let accumulatedLength = 0;\r\n        let ci = 0;\r\n        let changeSet = new Set();\r\n        let first = -1;\r\n        for (let s = 0; s < this.notes.length; s++) { // section\r\n            let line = Math.floor(s / this.sectionPerLine);\r\n            let lineTotalNote = 0;\r\n            accumulatedLength = 0;\r\n            for (let i = 0; i < this.sectionPerLine; i++) {\r\n                if (this.notes[line * this.sectionPerLine + i]) {\r\n                    lineTotalNote += Math.max(this.notes[line * this.sectionPerLine + i].length, this.sectionAddNoteNumber);\r\n                }\r\n                else {\r\n                    lineTotalNote += this.sectionAddNoteNumber;\r\n                }\r\n            }\r\n            let sectionWidth = this.lineWidth * (Math.max(this.notes[s].length, this.sectionAddNoteNumber)) / lineTotalNote;\r\n            let sectionTotalBeat = 0;\r\n            for (let i = 0; i < this.notes[s].length; i++) {\r\n                sectionTotalBeat += this.lengthPerBeat / this.notes[s][i][0];\r\n            }\r\n            let beatLength = (sectionWidth - 20) / sectionTotalBeat;\r\n            if (s % this.sectionPerLine == 0) { // change line\r\n                x = this.startPosition[0];\r\n                if (s != 0)\r\n                    y += this.stringPadding * 5 + this.lineDistance;\r\n            }\r\n            let sx = [[x - 20, y], [0, y]]; // section position\r\n            let nx = x + sectionWidth;\r\n            sx[1][0] = nx - 20;\r\n            sectionIndicator.push(sx);\r\n            for (let i = 0; i < this.notes[s].length; i++) { // note\r\n                let note = this.notes[s][i];\r\n                let noteLength = this.lengthPerBeat / note[0];\r\n                let tail;\r\n                if (accumulatedLength + noteLength / this.lengthPerBeat >= seperaterLength) { // the note is the end of a beat or the note's length equals to a beat\r\n                    let cdataLLength = 0;\r\n                    if (ci > 0)\r\n                        cdataLLength = this.calData[ci - 1].length;\r\n                    tail = this.calculateTail(cdataLLength, note[0], -1, beatLength);\r\n                    accumulatedLength = 0;\r\n                }\r\n                else {\r\n                    let cdataLLength = 0;\r\n                    if (ci > 0)\r\n                        cdataLLength = this.calData[ci - 1].length;\r\n                    tail = this.calculateTail(cdataLLength, note[0], accumulatedLength, beatLength);\r\n                    accumulatedLength += noteLength / this.lengthPerBeat;\r\n                }\r\n                let step = beatLength * this.lengthPerBeat / note[0];\r\n                let updateNote = this.updatecalData(ci, x, y, note[0], note[1], tail, s, i);\r\n                if (updateNote >= 0)\r\n                    changeSet.add(updateNote).add(updateNote - 1);\r\n                ci++;\r\n                let userDataArray = [];\r\n                if (note[2])\r\n                    userDataArray = note[2].split(\" \");\r\n                if (userDataArray.includes(\"linkEnd\"))\r\n                    linker.push([x, y]);\r\n                if (userDataArray.includes(\"linkStart\"))\r\n                    linker.push([x, y]);\r\n                if (note[0] !== Math.floor(note[0])) {\r\n                    //console.log(note[0]);\r\n                    dot.push([x, y]);\r\n                }\r\n                x += step;\r\n            }\r\n            x = nx;\r\n        }\r\n        changeSet.delete(-1);\r\n        return [ci, changeSet, linker, sectionIndicator, dot]; // ci = totoal section number, changeSet = store index of change data\r\n    }\r\n    updatecalData(arryIndex, x, y, noteLength, noteData, tail, section, note) {\r\n        if (arryIndex > this.calData.length) {\r\n            console.error(\"array index erro, should not be greater than calData.length\");\r\n            return -1;\r\n        }\r\n        if (arryIndex === this.calData.length) {\r\n            this.calData.push({ x: x, y: y, length: noteLength, blocks: noteData.slice(0, 6), tail: tail.slice(0, tail.length), section: section, note: note, hasSvg: false });\r\n            return arryIndex;\r\n        }\r\n        let data = this.calData[arryIndex];\r\n        if (data.x != x || data.y != y || data.length != noteLength || data.section != section || data.note != note || !this.compareArray(data.blocks, noteData) || !this.compareArray(data.tail, tail)) {\r\n            this.calData[arryIndex].x = x;\r\n            this.calData[arryIndex].y = y;\r\n            this.calData[arryIndex].length = noteLength;\r\n            this.calData[arryIndex].blocks = noteData.slice(0, 6);\r\n            this.calData[arryIndex].tail = tail.slice(0, tail.length);\r\n            this.calData[arryIndex].section = section;\r\n            this.calData[arryIndex].note = note;\r\n            return arryIndex;\r\n        }\r\n        return -1;\r\n    }\r\n    compareArray(a, b) {\r\n        if (a.length != b.length)\r\n            return false;\r\n        for (let i = 0; i < a.length; i++) {\r\n            if (a[i] != b[i])\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    calculateTail(lastNoteLength, noteLength, accumulatedLength, beatLength) {\r\n        let step = beatLength * this.lengthPerBeat / lastNoteLength * -1;\r\n        let basicLength = 8;\r\n        if (accumulatedLength == -1)\r\n            basicLength = -8;\r\n        if (accumulatedLength == 0) { // start of a seperate note\r\n            if (noteLength <= 4) {\r\n            }\r\n            else if (noteLength <= 8) {\r\n                return [basicLength, 0, 0];\r\n            }\r\n            else if (noteLength <= 16) {\r\n                return [basicLength, basicLength, 0];\r\n            }\r\n            else if (noteLength <= 32) {\r\n                return [basicLength, basicLength, basicLength];\r\n            }\r\n        }\r\n        else {\r\n            if (noteLength <= 4) {\r\n            }\r\n            else if (noteLength <= 8) {\r\n                if (lastNoteLength >= 8) {\r\n                    return [step, 0, 0];\r\n                }\r\n            }\r\n            else if (noteLength <= 16) {\r\n                if (lastNoteLength <= 4) {\r\n                }\r\n                else if (lastNoteLength <= 8) {\r\n                    return [step, basicLength, 0];\r\n                }\r\n                else if (lastNoteLength <= 32) {\r\n                    return [step, step, 0];\r\n                }\r\n            }\r\n            else if (noteLength <= 32) {\r\n                if (lastNoteLength <= 4) {\r\n                }\r\n                else if (lastNoteLength <= 8) {\r\n                    return [step, basicLength, basicLength];\r\n                }\r\n                else if (lastNoteLength <= 16) {\r\n                    return [step, step, basicLength];\r\n                }\r\n                else if (lastNoteLength <= 32) {\r\n                    return [step, step, step];\r\n                }\r\n            }\r\n        }\r\n        return [0, 0, 0];\r\n    }\r\n    /**\r\n     * receive data from calNoteData and set elements\r\n     * @param { [number, number, number, number[]][] } data\r\n     */\r\n    setAllNoteElementData(dataLength, changeSet) {\r\n        let data = this.calData;\r\n        let noteElement = this.tabCanvas.layers.notes.noteElements;\r\n        let ne = dataLength - noteElement.length;\r\n        let nullData = { x: 0, y: 0, length: 0, blocks: [-1, -1, -1, -1, -1, -1], tail: [0, 0, 0], section: 0, note: 0, hasSvg: null }; //[0, 0, 0, [-1, -1, -1, -1, -1, -1], [0, 0, 0], 0, 0];\r\n        for (let i = 0; i < this.calData.length; i++) {\r\n            if (!this.calData[i].hasSvg) {\r\n                this.tabCanvas.layers.notes.createNote(i);\r\n                this.calData[i].hasSvg = true;\r\n                noteElement[i].blockGroup.forEach((wg, i) => {\r\n                    wg.domelement.addEventListener(\"click\", this.onNoteClicked.bind(this));\r\n                    wg.domelement.addEventListener(\"mouseover\", this.onMouseOverNote.bind(this), false);\r\n                    wg.domelement.addEventListener(\"mouseout\", this.onMouseOutNote.bind(this));\r\n                    wg.string = i;\r\n                    _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(wg.domelement, { \"data-string\": `${i}` });\r\n                });\r\n            }\r\n        }\r\n        changeSet.forEach((si, i) => {\r\n            if (i != data.length - 1) {\r\n                if (data[i + 1].x > data[i].x) {\r\n                    this.setNoteElementData(noteElement[i], data[i], data[i + 1], (data[i + 1].x - data[i].x) * 0.7);\r\n                }\r\n                else {\r\n                    this.setNoteElementData(noteElement[i], data[i], data[i + 1], 30);\r\n                }\r\n            }\r\n            else {\r\n                this.setNoteElementData(noteElement[i], data[i], nullData, 30);\r\n            }\r\n        });\r\n    }\r\n    setNoteElementData(el, data, nexData, xlength) {\r\n        this.setElementPosition(el, data.x, data.y, data.tail, data.section, data.note, xlength);\r\n        this.setChordVisiable(el, data.x, data.y, data.length, data.blocks, data.tail, nexData.tail);\r\n    }\r\n    setElementPosition(e, x, y, tail, sectionIndex, noteIndex, xlength) {\r\n        let ln = Math.floor(sectionIndex / this.sectionPerLine);\r\n        // set note bar's position and bar tail's length\r\n        e.lineGroup[0].x1 = x;\r\n        e.lineGroup[0].y1 = 26 + y + this.stringPadding * 5;\r\n        e.lineGroup[0].x2 = x;\r\n        e.lineGroup[0].y2 = y;\r\n        e.lineGroup[1].x1 = x;\r\n        e.lineGroup[1].y1 = 25 + y + this.stringPadding * 5;\r\n        e.lineGroup[1].x2 = x + tail[0];\r\n        e.lineGroup[1].y2 = 25 + y + this.stringPadding * 5;\r\n        e.lineGroup[2].x1 = x;\r\n        e.lineGroup[2].y1 = 21 + y + this.stringPadding * 5;\r\n        e.lineGroup[2].x2 = x + tail[1];\r\n        e.lineGroup[2].y2 = 21 + y + this.stringPadding * 5;\r\n        e.lineGroup[3].x1 = x;\r\n        e.lineGroup[3].y1 = 17 + y + this.stringPadding * 5;\r\n        e.lineGroup[3].x2 = x + tail[2];\r\n        e.lineGroup[3].y2 = 17 + y + this.stringPadding * 5;\r\n        // set note word position\r\n        for (let i = 0; i < 6; i++) {\r\n            e.blockGroup[i].x = x;\r\n            e.blockGroup[i].y = y + this.stringPadding * i;\r\n            e.blockGroup[i].extendRect.y = y + this.stringPadding * (i - 0.5);\r\n            e.blockGroup[i].extendRect.height = this.stringPadding;\r\n            e.blockGroup[i].extendRect.width = xlength;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(e.blockGroup[i].domelement, { \"data-x\": `${x}`, \"data-y\": `${y + this.stringPadding * i}`, \"data-line\": `${ln}` });\r\n        }\r\n        e.tail8.setPosition(x + 0.4, y + this.stringPadding * 5 + 14);\r\n        e.tail16.setPosition(x + 0.4, y + this.stringPadding * 5 + 10);\r\n        e.tail32.setPosition(x + 0.4, y + this.stringPadding * 5 + 6);\r\n        e.section = sectionIndex;\r\n        e.note = noteIndex;\r\n        e.line = ln;\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(e.domelement, { \"data-section\": `${sectionIndex}`, \"data-note\": `${noteIndex}` });\r\n        e.blockGroup.forEach((wg, i) => {\r\n            wg.section = sectionIndex;\r\n            wg.note = noteIndex;\r\n            wg.line = ln;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(wg.domelement, { \"data-section\": `${sectionIndex}`, \"data-note\": `${noteIndex}`, \"data-line\": `${ln}` });\r\n        });\r\n    }\r\n    setChordVisiable(e, x, y, noteLength, data, tail, nextTail) {\r\n        let ap = true;\r\n        let hc = -1; // top chord which data is not -1\r\n        for (let i = 0; i < 6; i++) {\r\n            if (data[i] != -1) {\r\n                hc = i;\r\n                break;\r\n            }\r\n        }\r\n        e.tail8.hide();\r\n        e.tail16.hide();\r\n        e.tail32.hide();\r\n        for (let i = 0; i < 3; i++) {\r\n            if (tail[i] < 0 || nextTail[i] < 0) {\r\n                ap = false;\r\n                break;\r\n            }\r\n        }\r\n        if (ap) {\r\n            if (hc != -1) {\r\n                if (noteLength <= 4) {\r\n                }\r\n                else if (noteLength <= 8) {\r\n                    e.tail8.show();\r\n                }\r\n                else if (noteLength <= 16) {\r\n                    e.tail16.show();\r\n                }\r\n                else if (noteLength <= 32) {\r\n                    e.tail32.show();\r\n                }\r\n            }\r\n            e.lineGroup[1].x2 = x;\r\n            e.lineGroup[2].x2 = x;\r\n            e.lineGroup[3].x2 = x;\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            if (data[i] == -1) {\r\n                e.blockGroup[i].word.text = ``;\r\n                e.blockGroup[i].wordBack.text = ``;\r\n            }\r\n            else {\r\n                e.blockGroup[i].word.text = `${data[i]}`;\r\n                e.blockGroup[i].wordBack.text = `${data[i]}`;\r\n            }\r\n        }\r\n        if (noteLength == 2) {\r\n            e.lineGroup[0].y2 = 10 + y + this.stringPadding * 5;\r\n            return;\r\n        }\r\n        else if (noteLength == 1) {\r\n            e.lineGroup[0].y2 = 26 + y + this.stringPadding * 5;\r\n            return;\r\n        }\r\n        // note bar should reach the top word\r\n        if (hc === -1) {\r\n            e.lineGroup[0].y2 = y + this.stringPadding * 5 + 26;\r\n        }\r\n        else {\r\n            e.lineGroup[0].y2 = y + this.stringPadding * hc;\r\n        }\r\n    }\r\n    setLinker(linkerData) {\r\n        let lenumber = Math.floor(linkerData.length / 2);\r\n        let existNumber = this.tabCanvas.layers.background.linker.length;\r\n        for (let i = 0; i < lenumber - existNumber; i++) {\r\n            this.tabCanvas.layers.background.createLinker();\r\n        }\r\n        for (let i = 0; i < lenumber; i++) {\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.tabCanvas.layers.background.linker[i], { display: \"unset\" });\r\n            this.setLinkerData(this.tabCanvas.layers.background.linker[i], linkerData[i * 2], linkerData[i * 2 + 1]);\r\n        }\r\n        for (let i = lenumber; i < this.tabCanvas.layers.background.linker.length; i++) {\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.tabCanvas.layers.background.linker[i], { display: \"none\" });\r\n        }\r\n    }\r\n    setLinkerData(linkElement, start, end) {\r\n        let ly = start[1] + 31 + this.stringPadding * 5;\r\n        if (start[1] !== end[1]) {\r\n            let ex = start[0] + 30;\r\n            let sx = start[0];\r\n            let path = `M ${sx} ${ly} C ${sx + 4} ${ly + 15}, ${ex - 4} ${ly + 15}, ${ex} ${ly} C ${ex - 4} ${ly + 12}, ${sx + 4} ${ly + 12}, ${sx} ${ly} `;\r\n            ly = end[1] + 31 + this.stringPadding * 5;\r\n            sx = end[0] - 30;\r\n            ex = end[0];\r\n            path += `M ${sx} ${ly} C ${sx + 4} ${ly + 15}, ${ex - 4} ${ly + 15}, ${ex} ${ly} C ${ex - 4} ${ly + 12}, ${sx + 4} ${ly + 12}, ${sx} ${ly}`;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(linkElement, { d: path });\r\n        }\r\n        else {\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(linkElement, { d: `M ${start[0]} ${ly} C ${start[0] + 4} ${ly + 15}, ${end[0] - 4} ${ly + 15}, ${end[0]} ${ly} C ${end[0] - 4} ${ly + 12}, ${start[0] + 4} ${ly + 12}, ${start[0]} ${ly}` });\r\n        }\r\n    }\r\n    setDot(dotData) {\r\n        let lenumber = dotData.length;\r\n        let existNumber = this.tabCanvas.layers.notes.dot.length;\r\n        for (let i = 0; i < lenumber - existNumber; i++) {\r\n            let ndt = this.tabCanvas.layers.notes.createEllipse(0, 0, 2.5, 2.5);\r\n            ndt.fill = \"white\";\r\n            this.tabCanvas.layers.notes.dot.push(ndt);\r\n        }\r\n        for (let i = 0; i < lenumber; i++) {\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.tabCanvas.layers.notes.dot[i].domElement, { display: \"unset\" });\r\n            this.tabCanvas.layers.notes.dot[i].cx = dotData[i][0] + 12;\r\n            this.tabCanvas.layers.notes.dot[i].cy = dotData[i][1] + 12 + this.stringPadding * 5;\r\n        }\r\n        for (let i = lenumber; i < this.tabCanvas.layers.notes.dot.length; i++) {\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.tabCanvas.layers.notes.dot[i].domElement, { display: \"none\" });\r\n        }\r\n    }\r\n    onNoteClicked(ev) {\r\n        let section = Number(ev.currentTarget.dataset.section);\r\n        let note = Number(ev.currentTarget.dataset.note);\r\n        let string = Number(ev.currentTarget.dataset.string);\r\n        let position = [Number(ev.currentTarget.dataset.x), Number(ev.currentTarget.dataset.y)];\r\n        if (ev.shiftKey) {\r\n            this.callbacks[\"noteshiftclick\"].callAll(section, note, string, position, ev.currentTarget);\r\n        }\r\n        else if (ev.altKey) {\r\n            this.callbacks[\"notealtclick\"].callAll(section, note, string, position, ev.currentTarget);\r\n        }\r\n        else if (ev.ctrlKey) {\r\n            this.callbacks[\"notectrlclick\"].callAll(section, note, string, position, ev.currentTarget);\r\n        }\r\n        else {\r\n            this.callbacks[\"noteclick\"].callAll(section, note, string, position, ev.currentTarget);\r\n        }\r\n    }\r\n    onKeydown(ev) {\r\n        this.callbacks[\"keydown\"].callAll(ev.key, ev.keyCode);\r\n    }\r\n    onMouseOverNote(ev) {\r\n        let section = Number(ev.currentTarget.dataset.section);\r\n        let note = Number(ev.currentTarget.dataset.note);\r\n        let string = Number(ev.currentTarget.dataset.string);\r\n        let position = [Number(ev.currentTarget.dataset.x), Number(ev.currentTarget.dataset.y)];\r\n        this.callbacks[\"mouseovernote\"].callAll(section, note, string, position, ev.currentTarget);\r\n    }\r\n    onMouseOutNote(ev) {\r\n        let section = Number(ev.currentTarget.dataset.section);\r\n        let note = Number(ev.currentTarget.dataset.note);\r\n        let string = Number(ev.currentTarget.dataset.string);\r\n        let position = [Number(ev.currentTarget.dataset.x), Number(ev.currentTarget.dataset.y)];\r\n        this.callbacks[\"mouseoutnote\"].callAll(section, note, string, position, ev.currentTarget);\r\n    }\r\n    onMouseDown(ev) {\r\n        this.callbacks[\"mousedown\"].callAll(Number(ev.x), Number(ev.y));\r\n    }\r\n    onMouseMove(ev) {\r\n        this.callbacks[\"mousemove\"].callAll(Number(ev.x), Number(ev.y));\r\n    }\r\n    onMouseUp(ev) {\r\n        this.callbacks[\"mouseup\"].callAll(Number(ev.x), Number(ev.y));\r\n    }\r\n    onMouseRightClick(ev) {\r\n        this.callbacks[\"rightclick\"].callAll(Number(ev.x), Number(ev.y));\r\n    }\r\n    onSectionHover(ev) {\r\n        this.callbacks[\"sectionhover\"].callAll(Number(ev.currentTarget.dataset.section));\r\n    }\r\n    onSectionHout(ev) {\r\n        this.callbacks[\"sectionhout\"].callAll(Number(ev.currentTarget.dataset.section));\r\n    }\r\n    onSectionClick(ev) {\r\n        let offsetY = ev.clientY - this.domElement.getBoundingClientRect().top + this.domElement.scrollTop;\r\n        let y = Number(ev.currentTarget.getAttribute(\"y\"));\r\n        let string = Math.floor((offsetY - y) / this.stringPadding);\r\n        this.callbacks[\"sectionclick\"].callAll(Number(ev.currentTarget.dataset.section), string);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/SlimTabV2.ts\n");

/***/ }),

/***/ "./src/SlimTabV2Canvas.ts":
/*!********************************!*\
  !*** ./src/SlimTabV2Canvas.ts ***!
  \********************************/
/*! exports provided: NoteBlock, SVGNote, Layer, SVGShape, Rect, Ellipse, Line, Text, Layers, SLLayer, SLCanvas */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoteBlock\", function() { return NoteBlock; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SVGNote\", function() { return SVGNote; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Layer\", function() { return Layer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SVGShape\", function() { return SVGShape; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Rect\", function() { return Rect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ellipse\", function() { return Ellipse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Line\", function() { return Line; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Text\", function() { return Text; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Layers\", function() { return Layers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SLLayer\", function() { return SLLayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SLCanvas\", function() { return SLCanvas; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\n\r\nclass NoteBlock {\r\n    constructor(domelement, word, wordBack, extendRect) {\r\n        this.domelement = domelement;\r\n        this.word = word;\r\n        this.wordBack = wordBack;\r\n        this.extendRect = extendRect;\r\n    }\r\n    set x(val) {\r\n        if (this._x !== val) {\r\n            this._x = val;\r\n            this.word.x = val;\r\n            this.wordBack.x = val;\r\n            this.extendRect.x = val;\r\n        }\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    set y(val) {\r\n        if (this._y !== val) {\r\n            this._y = val;\r\n            this.word.y = val + 4;\r\n            this.wordBack.y = val + 4;\r\n        }\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set section(val) {\r\n        this._section = val;\r\n    }\r\n    get section() {\r\n        return this._section;\r\n    }\r\n    set note(val) {\r\n        this._note = val;\r\n    }\r\n    get note() {\r\n        return this._note;\r\n    }\r\n    set string(val) {\r\n        this._string = val;\r\n    }\r\n    get string() {\r\n        return this._string;\r\n    }\r\n    set line(val) {\r\n        this._line = val;\r\n    }\r\n    get line() {\r\n        return this._line;\r\n    }\r\n}\r\nclass SVGNote {\r\n    constructor(domelement, blockGroup, lineGroup) {\r\n        this.blockGroup = [];\r\n        this.lineGroup = [];\r\n        this.domelement = domelement;\r\n        this.blockGroup = blockGroup;\r\n        this.lineGroup = lineGroup;\r\n        this.tail8 = new Base8Tail();\r\n        this.tail16 = new Base16Tail();\r\n        this.tail32 = new Base32Tail();\r\n        this.domelement.append(this.tail32.domElement, this.tail16.domElement, this.tail8.domElement);\r\n    }\r\n    set section(val) {\r\n        this._section = val;\r\n    }\r\n    get section() {\r\n        return this._section;\r\n    }\r\n    set note(val) {\r\n        this._note = val;\r\n    }\r\n    get note() {\r\n        return this._note;\r\n    }\r\n    set line(val) {\r\n        this._line = val;\r\n    }\r\n    get line() {\r\n        return this._line;\r\n    }\r\n}\r\nclass Tail {\r\n    constructor() {\r\n        this._isShow = true;\r\n        this.domElement = document.createElementNS('http://www.w3.org/2000/svg', \"g\");\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, { style: \"fill: white;\" });\r\n        //this.hide();\r\n    }\r\n    setPosition(x, y) {\r\n        if (this._x !== x || this._y !== y) {\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.domElement, { \"transform\": `scale(0.08) translate(${x / 0.08}px,${y / 0.08}px)` });\r\n            this._x = x;\r\n            this._y = y;\r\n        }\r\n    }\r\n    show() {\r\n        if (!this._isShow) {\r\n            this._isShow = true;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.domElement, { display: \"unset\" });\r\n        }\r\n    }\r\n    hide() {\r\n        if (this._isShow) {\r\n            this._isShow = false;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.domElement, { display: \"none\" });\r\n        }\r\n    }\r\n}\r\nclass Base8Tail extends Tail {\r\n    constructor() {\r\n        super();\r\n        this.domElement.innerHTML = `<use xlink:href=\"#stail8\"></use>`;\r\n    }\r\n}\r\nclass Base16Tail extends Tail {\r\n    constructor() {\r\n        super();\r\n        this.domElement.innerHTML = `<use xlink:href=\"#stail16\"></use>`;\r\n    }\r\n}\r\nclass Base32Tail extends Tail {\r\n    constructor() {\r\n        super();\r\n        this.domElement.innerHTML = `<use xlink:href=\"#stail32\"></use>`;\r\n    }\r\n}\r\nclass Layer {\r\n    constructor() {\r\n        this.linker = [];\r\n        this.domElement = document.createElementNS('http://www.w3.org/2000/svg', \"g\");\r\n    }\r\n    clear() {\r\n        this.domElement.innerHTML = \"\";\r\n    }\r\n    createRect(x, y, width, height, strokeWidth, fill, target) {\r\n        const inst = document.createElementNS('http://www.w3.org/2000/svg', \"rect\");\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(inst, {\r\n            x: `${x}`, y: `${y}`,\r\n            width: `${width}`, height: `${height}`,\r\n            \"stroke-width\": `${strokeWidth}`,\r\n            fill: fill,\r\n        });\r\n        if (!target)\r\n            this.domElement.appendChild(inst);\r\n        else\r\n            target.appendChild(inst);\r\n        return new Rect(inst);\r\n    }\r\n    createEllipse(cx, cy, rx, ry, target) {\r\n        const inst = document.createElementNS('http://www.w3.org/2000/svg', \"ellipse\");\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(inst, {\r\n            cx: `${cx}`, cy: `${cy}`,\r\n            rx: `${rx}`, ry: `${ry}`\r\n        });\r\n        if (!target)\r\n            this.domElement.appendChild(inst);\r\n        else\r\n            target.appendChild(inst);\r\n        return new Ellipse(inst);\r\n    }\r\n    createText(x, y, str, anchor, target) {\r\n        const inst = document.createElementNS('http://www.w3.org/2000/svg', \"text\");\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(inst, {\r\n            x: `${x}`, y: `${y}`,\r\n            'text-anchor': `${anchor}`\r\n        });\r\n        inst.innerHTML = `${str}`;\r\n        if (!target)\r\n            this.domElement.appendChild(inst);\r\n        else\r\n            target.appendChild(inst);\r\n        return new Text(inst);\r\n    }\r\n    createLine(x1, y1, x2, y2, width, color, target) {\r\n        const inst = document.createElementNS('http://www.w3.org/2000/svg', \"line\");\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(inst, {\r\n            x1: `${x1}`, y1: `${y1}`,\r\n            x2: `${x2}`, y2: `${y2}`,\r\n            stroke: `${color}`,\r\n            \"stroke-width\": `${width}`\r\n        });\r\n        if (!target)\r\n            this.domElement.appendChild(inst);\r\n        else\r\n            target.appendChild(inst);\r\n        return new Line(inst);\r\n    }\r\n    ;\r\n    createLinker(target) {\r\n        let linker = document.createElementNS('http://www.w3.org/2000/svg', \"path\");\r\n        if (!target)\r\n            this.domElement.appendChild(linker);\r\n        else\r\n            target.appendChild(linker);\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(linker, { fill: `white` });\r\n        this.linker.push(linker);\r\n        return linker;\r\n    }\r\n}\r\nclass SVGShape {\r\n    constructor(domElement) {\r\n        this._domElement = domElement;\r\n    }\r\n    remove() {\r\n        this._domElement.remove();\r\n    }\r\n    get domElement() {\r\n        return this._domElement;\r\n    }\r\n    set style(val) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.domElement, val);\r\n    }\r\n}\r\n;\r\nclass Rect extends SVGShape {\r\n    constructor(domElement) {\r\n        super(domElement);\r\n    }\r\n    setPos(x, y) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            \"x\": `${x}`, \"y\": `${y}`\r\n        });\r\n    }\r\n    setShape(width, height) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            \"width\": `${width}`, \"height\": `${height}`\r\n        });\r\n    }\r\n    set x(val) {\r\n        if (this._x !== val) {\r\n            this._x = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                x: `${val}`\r\n            });\r\n        }\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    set y(val) {\r\n        if (this._y !== val) {\r\n            this._y = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                y: `${val}`\r\n            });\r\n        }\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set width(val) {\r\n        if (this._width !== val) {\r\n            this._width = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                width: `${val}`\r\n            });\r\n        }\r\n    }\r\n    get width() {\r\n        return this._width;\r\n    }\r\n    set height(val) {\r\n        if (this._height !== val) {\r\n            this._height = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                height: `${val}`\r\n            });\r\n        }\r\n    }\r\n    get height() {\r\n        return this._height;\r\n    }\r\n    set strokeWidth(val) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            \"stroke-width\": `${val}`\r\n        });\r\n    }\r\n    get strokeWidth() {\r\n        return Number(this.domElement.getAttribute(\"stroke-width\"));\r\n    }\r\n    set fill(val) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            fill: `${val}`\r\n        });\r\n    }\r\n    get fill() {\r\n        return this.domElement.getAttribute(\"fill\");\r\n    }\r\n}\r\nclass Ellipse extends SVGShape {\r\n    constructor(domElement) {\r\n        super(domElement);\r\n    }\r\n    setPos(cx, cy) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            \"cx\": `${cx}`, \"cy\": `${cy}`\r\n        });\r\n    }\r\n    setShape(cx, cy, rx, ry) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            \"rx\": `${rx}`, \"ry\": `${ry}`\r\n        });\r\n    }\r\n    set cx(val) {\r\n        if (this._cx != val) {\r\n            this._cx = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                \"cx\": `${val}`\r\n            });\r\n        }\r\n    }\r\n    get cx() {\r\n        return this._cx;\r\n    }\r\n    set cy(val) {\r\n        if (this._cy != val) {\r\n            this._cy = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                \"cy\": `${val}`\r\n            });\r\n        }\r\n    }\r\n    get cy() {\r\n        return this._cy;\r\n    }\r\n    set rx(val) {\r\n        if (this._rx != val) {\r\n            this._rx = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                rx: `${val}`\r\n            });\r\n        }\r\n    }\r\n    get rx() {\r\n        return this._rx;\r\n    }\r\n    set ry(val) {\r\n        if (this._ry != val) {\r\n            this._ry = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                ry: `${val}`\r\n            });\r\n        }\r\n    }\r\n    get ry() {\r\n        return this._ry;\r\n    }\r\n    set fill(val) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            fill: `${val}`\r\n        });\r\n    }\r\n    get fill() {\r\n        return this.domElement.getAttribute(\"fill\");\r\n    }\r\n}\r\nclass Line extends SVGShape {\r\n    constructor(domElement) {\r\n        super(domElement);\r\n    }\r\n    setEndPoints(x1, y1, x2, y2) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            \"x1\": `${x1}`, \"y1\": `${y1}`,\r\n            \"x2\": `${x2}`, \"y2\": `${y2}`\r\n        });\r\n    }\r\n    set x1(val) {\r\n        if (this._x1 != val) {\r\n            this._x1 = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                x1: `${val}`\r\n            });\r\n        }\r\n    }\r\n    get x1() {\r\n        return Number(this.domElement.getAttribute(\"x1\"));\r\n    }\r\n    set y1(val) {\r\n        if (this._y1 != val) {\r\n            this._y1 = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                y1: `${val}`\r\n            });\r\n        }\r\n    }\r\n    get y1() {\r\n        return Number(this.domElement.getAttribute(\"y1\"));\r\n    }\r\n    set x2(val) {\r\n        if (this._x2 != val) {\r\n            this._x2 = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                x2: `${val}`\r\n            });\r\n        }\r\n    }\r\n    get x2() {\r\n        return Number(this.domElement.getAttribute(\"x2\"));\r\n    }\r\n    set y2(val) {\r\n        if (this._y2 != val) {\r\n            this._y2 = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                y2: `${val}`\r\n            });\r\n        }\r\n    }\r\n    get y2() {\r\n        return Number(this.domElement.getAttribute(\"y2\"));\r\n    }\r\n    set stroke(val) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            stroke: `${val}`\r\n        });\r\n    }\r\n    get stroke() {\r\n        return this.domElement.getAttribute(\"stroke\");\r\n    }\r\n    set strokeWidth(val) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            \"stroke-width\": `${val}`\r\n        });\r\n    }\r\n    get strokeWidth() {\r\n        return Number(this.domElement.getAttribute(\"stroke-width\"));\r\n    }\r\n}\r\nclass Text extends SVGShape {\r\n    constructor(domElement) {\r\n        super(domElement);\r\n    }\r\n    setPos(x, y) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            \"x\": `${x}`, \"y\": `${y}`,\r\n        });\r\n    }\r\n    set x(val) {\r\n        if (this._x != val) {\r\n            this._x = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                x: `${val}`\r\n            });\r\n        }\r\n    }\r\n    get x() {\r\n        return Number(this.domElement.getAttribute(\"x\"));\r\n    }\r\n    set y(val) {\r\n        if (this._y != val) {\r\n            this._y = val;\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n                y: `${val}`\r\n            });\r\n        }\r\n    }\r\n    get y() {\r\n        return Number(this.domElement.getAttribute(\"y\"));\r\n    }\r\n    set anchor(val) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            \"text-anchor\": `${val}`\r\n        });\r\n    }\r\n    get anchor() {\r\n        return this.domElement.getAttribute(\"text-anchor\");\r\n    }\r\n    set text(val) {\r\n        if (this.domElement.innerHTML !== val) {\r\n            this.domElement.innerHTML = `${val}`;\r\n        }\r\n    }\r\n    get text() {\r\n        return this.domElement.innerHTML;\r\n    }\r\n    set strokeWidth(val) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            \"stroke-width\": `${val}`\r\n        });\r\n    }\r\n    get strokeWidth() {\r\n        return Number(this.domElement.getAttribute(\"stroke-width\"));\r\n    }\r\n    set fill(val) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, {\r\n            fill: `${val}`\r\n        });\r\n    }\r\n}\r\nclass NoteLayer extends Layer {\r\n    constructor() {\r\n        super();\r\n        this.noteElements = [];\r\n        this.dot = [];\r\n        this.domElement.innerHTML = `\r\n        <defs>\r\n            <path id=\"SVGTAIL8_1\" d=\"M-4.728,151.313l10.303,2.061l39.153-33.854c0,0,20.543-24.318,23.338-67.708L70.34,0H43.846L22.061,78.012\r\n                l-33.854,20.901L-4.728,151.313z\"/>\r\n        \t<clipPath id=\"SVGTAIL8_2\">\r\n                <use xlink:href=\"#SVGTAIL8_1\"  style=\"overflow:visible;\"/>\r\n            </clipPath>\r\n\r\n            <path id=\"stail16\"d=\"M67.37,59.776c2.698-19.84-2.806-39.01-7.124-58.173C60.138,1.127,59.523,0.765,58.825,0c0,3.411-0.317,6.266,0.054,9.029\r\n            c1.69,12.576,0.707,25.062-2.478,37.175c-5.494,20.897-15.163,39.32-35.394,49.69c-6.397,3.279-13.599,4.99-20.612,7.443\r\n            l-0.168,42.842c0.429-1.459,1.031-2.899,1.881-4.318c5.712-9.535,13.379-17.275,23.422-21.731\r\n            c11.728-5.203,21.372-12.634,29.432-22.407c0.486-0.59,1.154-1.029,2.017-1.782c-6.693,34.412-26.894,55.961-56.794,60.555\r\n            L0,203.874c1.634-4.092,2.518-8.621,4.922-12.148c5.906-8.664,14.092-14.797,23.71-19.308c16.597-7.786,30.016-19.532,35.085-37.498\r\n            c3.198-11.333,4.22-23.682,3.872-35.506C67.2,86.185,65.551,73.148,67.37,59.776z\"/>\r\n        \r\n            <path id=\"stail8\" style=\"clip-path:url(#SVGTAIL8_2);\" d=\"M67.352,64.184c2.698-19.84-2.806-39.01-7.124-58.173\r\n            c-0.107-0.476-0.722-0.837-1.42-1.603c0,3.411-0.317,6.266,0.054,9.029c1.69,12.576,0.707,25.062-2.478,37.175\r\n            c-5.494,20.897-15.163,39.32-35.394,49.69c-6.397,3.279-13.599,4.99-20.612,7.443l-0.168,42.842\r\n            c0.429-1.459,1.031-2.899,1.881-4.318c5.712-9.535,13.379-17.275,23.422-21.731c11.728-5.203,21.372-12.634,29.432-22.407\r\n            c0.486-0.59,1.154-1.029,2.017-1.782c-6.693,34.412-26.894,55.961-56.794,60.555l-0.186,47.379\r\n            c1.634-4.092,2.518-8.621,4.922-12.148c5.906-8.664,14.092-14.797,23.71-19.308c16.597-7.786,30.016-19.532,35.085-37.498\r\n            c3.198-11.333,4.22-23.682,3.872-35.506C67.182,90.594,65.534,77.557,67.352,64.184z\"/>\r\n\r\n            <path id=\"SVGID_1_\" d=\"M-4.17,255.543l10.303,2.061l39.153-33.854c0,0,20.543-24.318,23.338-67.708l2.274-51.812H44.404\r\n                l-21.784,78.012l-33.854,20.901L-4.17,255.543z\"/>\r\n            <clipPath id=\"SVGID_2_\">\r\n                <use xlink:href=\"#SVGID_1_\"  style=\"overflow:visible;\"/>\r\n            </clipPath>\r\n            <g id=\"stail32\">\r\n            <path d=\"M67.183,59.776c2.698-19.84-2.806-39.01-7.124-58.173C59.952,1.127,59.337,0.765,58.639,0c0,3.411-0.317,6.266,0.054,9.029\r\n\t\tc1.69,12.576,0.707,25.062-2.478,37.175c-5.494,20.897-15.163,39.32-35.394,49.69c-6.397,3.279-13.599,4.99-20.612,7.443\r\n\t\tl-0.168,42.842c0.429-1.459,1.031-2.899,1.881-4.318c5.712-9.535,13.379-17.275,23.422-21.731\r\n\t\tc11.728-5.203,21.372-12.634,29.432-22.407c0.486-0.59,1.154-1.029,2.017-1.782C50.101,130.352,29.9,151.901,0,156.495\r\n\t\tl-0.186,47.379c1.634-4.092,2.518-8.621,4.922-12.148c5.906-8.664,14.092-14.797,23.71-19.308\r\n\t\tc16.597-7.786,30.016-19.532,35.085-37.498c3.198-11.333,4.22-23.682,3.872-35.506C67.013,86.185,65.365,73.148,67.183,59.776z\"/>\r\n            <path style=\"clip-path:url(#SVGID_2_);\" d=\"M67.91,168.414c2.698-19.84-2.806-39.01-7.124-58.173\r\n\t\t\tc-0.107-0.476-0.722-0.837-1.42-1.603c0,3.411-0.317,6.266,0.054,9.029c1.69,12.576,0.707,25.062-2.478,37.175\r\n\t\t\tc-5.494,20.897-15.163,39.32-35.394,49.69c-6.397,3.279-13.599,4.99-20.612,7.443l-0.168,42.842\r\n\t\t\tc0.429-1.459,1.031-2.899,1.881-4.318c5.712-9.535,13.379-17.275,23.422-21.731c11.728-5.203,21.372-12.634,29.432-22.407\r\n\t\t\tc0.486-0.59,1.154-1.029,2.017-1.782c-6.693,34.412-26.894,55.96-56.794,60.555L0.54,312.512\r\n\t\t\tc1.634-4.092,2.518-8.621,4.922-12.148c5.906-8.664,14.092-14.797,23.71-19.308c16.597-7.786,30.016-19.532,35.085-37.498\r\n            c3.198-11.333,4.22-23.682,3.872-35.506C67.74,194.823,66.092,181.786,67.91,168.414z\"/>\r\n            </g>\r\n        </defs>\r\n        `;\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, { \"data-layer\": \"NoteLayer\" });\r\n    }\r\n    createNote(insertIndex = -1) {\r\n        const note = document.createElementNS('http://www.w3.org/2000/svg', \"g\");\r\n        const blockGroup = document.createElementNS('http://www.w3.org/2000/svg', \"g\");\r\n        const blockArray = [];\r\n        const lineGroup = document.createElementNS('http://www.w3.org/2000/svg', \"g\");\r\n        const lg = [];\r\n        lg.push(this.createLine(0, 0, 0, 0, 1, \"white\", lineGroup));\r\n        for (let i = 0; i < 3; i++) {\r\n            lg.push(this.createLine(0, 0, 0, 0, 2, \"white\", lineGroup));\r\n        }\r\n        note.append(lineGroup);\r\n        for (let i = 0; i < 6; i++) {\r\n            const wordGroup = document.createElementNS('http://www.w3.org/2000/svg', \"g\");\r\n            const extendRect = this.createRect(0, 0, 0, 0, 0, \"rgba(0, 0, 0, 0)\", wordGroup);\r\n            const wordBack = this.createText(0, 0, \"\", \"middle\", wordGroup);\r\n            const word = this.createText(0, 0, \"\", \"middle\", wordGroup);\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(wordGroup, { \"stroke-width\": '0', \"stroke\": \"black\", style: \"cursor:pointer;\" });\r\n            wordBack.strokeWidth = 3;\r\n            wordBack.style = { font: \"12px Sans-serf\" };\r\n            word.style = { \"font\": \"12px Sans-serif\", \"fill\": \"#fff\" };\r\n            blockGroup.append(wordGroup);\r\n            blockArray.push(new NoteBlock(wordGroup, word, wordBack, extendRect));\r\n        }\r\n        note.append(blockGroup);\r\n        if (insertIndex === -1)\r\n            insertIndex = this.noteElements.length;\r\n        this.noteElements.splice(insertIndex, 0, new SVGNote(note, blockArray, lg));\r\n        //this.noteElements.push(new SVGNote(<HTMLElement><unknown>note, blockArray, lg));\r\n        this.domElement.append(note);\r\n        return note;\r\n    }\r\n    removeNote(noteIndex, num = 1) {\r\n        for (let i = 0; i < num; i++) {\r\n            if (this.noteElements[noteIndex + i])\r\n                this.domElement.removeChild(this.noteElements[noteIndex + i].domelement);\r\n        }\r\n        this.noteElements.splice(noteIndex, num);\r\n    }\r\n}\r\nclass SheetLayer extends Layer {\r\n    constructor() {\r\n        super();\r\n        this.row = [];\r\n        this.bar = [];\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, { \"data-layer\": \"SheetLayer\" });\r\n    }\r\n    createRow(x, y, lineWidth, linePadding, stringPadding, sectionPerLine) {\r\n        let ng = document.createElementNS('http://www.w3.org/2000/svg', \"g\");\r\n        let lineBack = document.createElementNS('http://www.w3.org/2000/svg', \"rect\");\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(lineBack, { x: `${x}`, y: `${y}`, style: \"fill: rgba(255, 255, 255, 0.09)\", width: `${linePadding[0] * 2 + lineWidth}`, height: `${linePadding[1] * 2 + stringPadding * 5}` });\r\n        ng.appendChild(lineBack);\r\n        x += linePadding[0];\r\n        y += linePadding[1];\r\n        for (let i = 0; i < 6; i++) {\r\n            let l = lineWidth;\r\n            this.createLine(x, y + i * stringPadding, x + l, y + i * stringPadding, 2, \"rgba(255, 255, 255, 0.24)\", ng);\r\n        }\r\n        this.drawRowTitle(x - 30, y, ng);\r\n        this.createLine(x, y, x, y + stringPadding * 5, 2, \"rgba(255, 255, 255, 0.24)\", ng);\r\n        for (let i = 0; i < sectionPerLine; i++) {\r\n            let nb = this.createLine(0, y, 0, y + stringPadding * 5, 2, \"rgba(255, 255, 255, 0.24)\", this.domElement);\r\n            this.bar.push(nb);\r\n        }\r\n        this.domElement.append(ng);\r\n        this.row.push(ng);\r\n        return ng;\r\n    }\r\n    drawRowTitle(x, y, target) {\r\n        let title = document.createElementNS('http://www.w3.org/2000/svg', \"g\");\r\n        title.innerHTML = `\r\n        <text style=\"fill:#959595;font:17px arial;\">\r\n            <tspan x='${x + 10}' y='${y + 26}'>T</tspan>\r\n            <tspan x='${x + 10}' y='${y + 22 + 26}'>A</tspan>\r\n            <tspan x='${x + 10}' y='${y + 44 + 26}'>B</tspan>\r\n        </text>\r\n        `;\r\n        if (target)\r\n            target.append(title);\r\n        return title;\r\n    }\r\n}\r\nclass UILayer extends Layer {\r\n    constructor() {\r\n        super();\r\n        this.sectionIndicator = [];\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.domElement, { \"data-layer\": \"UILayer\" });\r\n    }\r\n    createSectionIndicator() {\r\n        let newSquare = this.createRect(0, 0, 0, 0, 0, \"rgba(0, 255, 255, 0)\");\r\n        //utils.setAttributes(newSquare, {style: \"display: none\"});\r\n        this.sectionIndicator.push(newSquare);\r\n        return newSquare;\r\n    }\r\n    hightLightSection(section) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.sectionIndicator[section].domElement, { fill: \"rgba(0, 255, 255, 0.13)\" });\r\n    }\r\n    hideSectionIndicator(section) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setAttributes(this.sectionIndicator[section].domElement, { fill: \"rgba(0, 255, 255, 0)\" });\r\n    }\r\n}\r\nclass Layers {\r\n    constructor() {\r\n        this.background = new Layer();\r\n        this.sheet = new SheetLayer();\r\n        this.notes = new NoteLayer();\r\n        this.foreground = new Layer();\r\n    }\r\n    get flattened() {\r\n        return [this.background, this.sheet, this.notes, this.foreground];\r\n    }\r\n}\r\nclass SLLayer extends Layers {\r\n    constructor() {\r\n        super();\r\n        this.ui = new UILayer();\r\n    }\r\n    get flattened() {\r\n        return [this.background, this.sheet, this.ui, this.notes, this.foreground];\r\n    }\r\n}\r\nclass SLCanvas {\r\n    constructor(layerType) {\r\n        this.layerType = layerType;\r\n        this.layers = new layerType();\r\n        this.domElement = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__[\"utils\"].setStyle(this.domElement, { \"user-select\": \"none\", \"outline\": \"none\" });\r\n        this.layers.flattened.forEach(layer => this.domElement.appendChild(layer.domElement));\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/SlimTabV2Canvas.ts\n");

/***/ }),

/***/ "./src/SlimTabV2Editor.ts":
/*!********************************!*\
  !*** ./src/SlimTabV2Editor.ts ***!
  \********************************/
/*! exports provided: SLEditor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SLEditor\", function() { return SLEditor; });\n/* harmony import */ var _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SlimTabV2Types */ \"./src/SlimTabV2Types.ts\");\n\r\nclass SLEditor {\r\n    constructor(controlTab) {\r\n        this.inputBlock = 0;\r\n        this.mouseDown = false;\r\n        this.mouseMove = false;\r\n        this.selectNotesIndicator = [];\r\n        this.selectNotesIndicatorPadding = 8;\r\n        this.controlTab = controlTab;\r\n        this.indicator = this.controlTab.tabCanvas.layers.ui.createEllipse(0, 0, 8, 8);\r\n        this.shadowIndicator = this.controlTab.tabCanvas.layers.ui.createEllipse(0, 0, 8, 8);\r\n        this.indicator.cx = -20;\r\n        this.indicator.cy = -20;\r\n        this.indicator.fill = \"rgb(255, 50, 0)\";\r\n        this.shadowIndicator.cx = -20;\r\n        this.shadowIndicator.cy = -20;\r\n        this.shadowIndicator.fill = \"rgba(255, 50, 0, 0.6)\";\r\n        this.dragNDropSection = this.controlTab.tabCanvas.layers.ui.createRect(0, 0, 0, 0, 0, \"rgba(255, 50, 0, 0.6)\");\r\n        this.setEvents();\r\n    }\r\n    get selectedNote() {\r\n        return this.selectedSVGNote;\r\n    }\r\n    get SelectedNotes() {\r\n        return this.selectedSVGNotes;\r\n    }\r\n    undisplayIndicator() {\r\n        this.indicator.style = { display: \"none\" };\r\n        this.shadowIndicator.style = { display: \"none\" };\r\n        this.selectNotesIndicator.forEach((elem, index, self) => {\r\n            elem.style = { display: \"none\" };\r\n        });\r\n    }\r\n    displayIndicator() {\r\n        this.indicator.style = { display: \"unset\" };\r\n        this.shadowIndicator.style = { display: \"unset\" };\r\n        this.selectNotesIndicator.forEach((elem, index, self) => {\r\n            elem.style = { display: \"unset\" };\r\n        });\r\n    }\r\n    resetIndicator() {\r\n        this.selectedBlock = null;\r\n        this.unselectNoteBlock();\r\n    }\r\n    setEvents() {\r\n        this.controlTab.on(\"noteclick\", (section, note, string, position) => {\r\n            this.selectNoteAndMoveIndicator(section, note, string);\r\n            this.selectedSVGNote = this.controlTab.getSVGNote(section, note);\r\n            this.unselectSVGNotes();\r\n        });\r\n        this.controlTab.on(\"noteshiftclick\", (section, note, string, position) => {\r\n            this.unselectSVGNotes();\r\n            this.controlTab.getSVGNote(section, note);\r\n            this.selectedSVGNotes = this.controlTab.endsSelect(this.controlTab.noteIndex(this.selectedSVGNote), this.controlTab.noteIndex(this.controlTab.getSVGNote(section, note)));\r\n            this.drawMultiSelectRect(this.selectedSVGNotes);\r\n        });\r\n        this.controlTab.on(\"keydown\", (key, keyCode) => {\r\n            if (key.toLowerCase() !== \" \" && !isNaN(Number(key))) {\r\n                if (this.selectedBlock) {\r\n                    let tb = this.inputBlock * 10 + Number(key);\r\n                    if (tb < 40) {\r\n                        this.inputBlock = tb;\r\n                    }\r\n                    else {\r\n                        this.inputBlock = Number(key);\r\n                    }\r\n                    this.controlTab.setStringDataOfNote(this.selectedBlock.section, this.selectedBlock.note, this.selectedBlock.string, this.inputBlock);\r\n                    this.controlTab.render();\r\n                }\r\n            }\r\n            else {\r\n                this.inputBlock = 0;\r\n            }\r\n            if (key.toLowerCase() === \"d\" || key.toLowerCase() === \"arrowright\") {\r\n                if (this.selectedSVGNotes.length > 0) {\r\n                    let rightSideBlock = this.selectedSVGNotes[this.selectedSVGNotes.length - 1].blockGroup[0];\r\n                    this.selectedBlock = { section: rightSideBlock.section, note: rightSideBlock.note, string: rightSideBlock.string };\r\n                    this.unselectSVGNotes();\r\n                }\r\n                if (this.selectedBlock) {\r\n                    this.selectRight(this.selectedBlock, this.controlTab);\r\n                }\r\n            }\r\n            if (key.toLowerCase() === \"a\" || key.toLowerCase() === \"arrowleft\") {\r\n                if (this.selectedSVGNotes.length > 0) {\r\n                    let leftSideBlock = this.selectedSVGNotes[0].blockGroup[0];\r\n                    this.selectedBlock = { section: leftSideBlock.section, note: leftSideBlock.note, string: leftSideBlock.string };\r\n                    this.unselectSVGNotes();\r\n                }\r\n                if (this.selectedBlock) {\r\n                    this.selectLeft(this.selectedBlock, this.controlTab);\r\n                }\r\n            }\r\n            if (key.toLowerCase() === \"w\" || key.toLowerCase() === \"arrowup\") {\r\n                if (this.selectedSVGNotes.length > 0) {\r\n                    let rightSideBlock = this.selectedSVGNotes[this.selectedSVGNotes.length - 1].blockGroup[0];\r\n                    this.selectedBlock = { section: rightSideBlock.section, note: rightSideBlock.note, string: rightSideBlock.string };\r\n                    this.unselectSVGNotes();\r\n                }\r\n                if (this.selectedBlock) {\r\n                    this.selectUp(this.selectedBlock, this.controlTab);\r\n                }\r\n            }\r\n            if (key.toLowerCase() === \"s\" || key.toLowerCase() === \"arrowdown\") {\r\n                if (this.selectedSVGNotes.length > 0) {\r\n                    let rightSideBlock = this.selectedSVGNotes[this.selectedSVGNotes.length - 1].blockGroup[0];\r\n                    this.selectedBlock = { section: rightSideBlock.section, note: rightSideBlock.note, string: rightSideBlock.string };\r\n                    this.unselectSVGNotes();\r\n                }\r\n                if (this.selectedBlock) {\r\n                    this.selectDown(this.selectedBlock, this.controlTab);\r\n                }\r\n            }\r\n            if (key.toLowerCase() === \"i\") {\r\n                if (this.selectedSVGNotes.length > 0) {\r\n                    this.selectedBlock = { section: this.selectedSVGNotes[0].section, note: this.selectedSVGNotes[0].note, string: 0 };\r\n                    this.unselectSVGNotes();\r\n                }\r\n                if (this.selectedBlock) {\r\n                    let emptyNote = this.insertEmptyNote(this.selectedBlock);\r\n                    this.controlTab.render();\r\n                    this.selectNoteAndMoveIndicator(emptyNote.section, emptyNote.note, emptyNote.string);\r\n                }\r\n                this.controlTab.render();\r\n            }\r\n            if (key.toLowerCase() === \"delete\" || key.toLowerCase() === \"backspace\") {\r\n                if (this.selectedSVGNotes.length > 0) {\r\n                    for (let i = this.selectedSVGNotes.length - 1; i >= 0; i--) {\r\n                        this.controlTab.deleteNote(this.selectedSVGNotes[i].section, this.selectedSVGNotes[i].note);\r\n                        this.controlTab.render();\r\n                    }\r\n                    this.unselectSVGNotes();\r\n                }\r\n                else if (this.selectedBlock) {\r\n                    this.deleteNoteBlock(this.selectedBlock, this.controlTab);\r\n                }\r\n            }\r\n            if (key.toLowerCase() === \"+\") {\r\n                this.changeNoteLength(\"+\");\r\n            }\r\n            if (key.toLowerCase() === \"-\") {\r\n                this.changeNoteLength(\"-\");\r\n            }\r\n            if (keyCode === 110 || keyCode === 190) { // press \".\"\r\n                if (this.selectedBlock) {\r\n                    let data = this.controlTab.getNoteData(this.selectedBlock.section, this.selectedBlock.note);\r\n                    if (Math.floor(data[0]) === data[0]) {\r\n                        data[0] = 2 * data[0] / 3;\r\n                    }\r\n                    else {\r\n                        data[0] = data[0] * 3 / 2;\r\n                    }\r\n                    this.controlTab.setNoteData(this.selectedBlock.section, this.selectedBlock.note, data);\r\n                    this.controlTab.render();\r\n                    this.selectNoteAndMoveIndicator(this.selectedBlock.section, this.selectedBlock.note, this.selectedBlock.string);\r\n                }\r\n            }\r\n        });\r\n        this.controlTab.on(\"mouseovernote\", (section, note, string, position) => {\r\n            this.shadowIndicator.cx = position[0];\r\n            this.shadowIndicator.cy = position[1];\r\n        });\r\n        this.controlTab.on(\"mouseoutnote\", (section, note, string, position) => {\r\n            this.shadowIndicator.cx = -20;\r\n            this.shadowIndicator.cy = -20;\r\n        });\r\n        this.controlTab.on(\"mousedown\", (x, y) => {\r\n            y += this.controlTab.domElement.scrollTop;\r\n            if (this.dragNDropSection != null) {\r\n                this.dragNDropSection.remove();\r\n            }\r\n            this.dragNDropSection = this.controlTab.tabCanvas.layers.ui.createRect(0, 0, 0, 0, 5, \"rgba(255, 50, 0, 0.6)\");\r\n            this.dragStartPos = [x, y];\r\n            this.dragNDropSection.style = { display: \"none\" };\r\n            this.mouseDown = true;\r\n            this.mouseMove = false;\r\n            this.unselectSVGNotes();\r\n        });\r\n        //Mouse move event, handle with all quadrant of direction.\r\n        this.controlTab.on(\"mousemove\", (x, y) => {\r\n            y += this.controlTab.domElement.scrollTop;\r\n            if (this.mouseDown) {\r\n                if (Math.sqrt(Math.pow(x - this.dragStartPos[0], 2) + Math.pow(y - this.dragStartPos[1], 2)) > 1) {\r\n                    this.mouseMove = true;\r\n                    //Clear the empty note when clicking \r\n                    if (this.selectedBlock && this.controlTab.isBlankNote(this.selectedBlock.section, this.selectedBlock.note)) {\r\n                        this.controlTab.deleteNote(this.selectedBlock.section, this.selectedBlock.note);\r\n                        this.unselectNoteBlock();\r\n                        this.controlTab.render();\r\n                    }\r\n                }\r\n                if (this.mouseMove) {\r\n                    if (x - this.dragStartPos[0] >= 0) {\r\n                        this.dragNDropSection.x = this.dragStartPos[0];\r\n                    }\r\n                    else {\r\n                        this.dragNDropSection.x = x;\r\n                    }\r\n                    if (y - this.dragStartPos[1] >= 0) {\r\n                        this.dragNDropSection.y = this.dragStartPos[1];\r\n                    }\r\n                    else {\r\n                        this.dragNDropSection.y = y;\r\n                    }\r\n                    this.dragNDropSection.setShape(Math.abs(x - this.dragStartPos[0]), Math.abs(y - this.dragStartPos[1]));\r\n                    this.dragNDropSection.style = { display: \"unset\" };\r\n                }\r\n            }\r\n        });\r\n        this.controlTab.on(\"mouseup\", (x, y) => {\r\n            y += this.controlTab.domElement.scrollTop;\r\n            this.mouseDown = false;\r\n            if (this.mouseMove) {\r\n                let x1;\r\n                let y1;\r\n                let x2;\r\n                let y2;\r\n                this.dragNDropSection.remove();\r\n                if (x >= this.dragStartPos[0]) {\r\n                    x1 = this.dragStartPos[0];\r\n                    x2 = x;\r\n                }\r\n                else {\r\n                    x1 = x;\r\n                    x2 = this.dragStartPos[0];\r\n                }\r\n                if (y >= this.dragStartPos[1]) {\r\n                    y1 = this.dragStartPos[1];\r\n                    y2 = y;\r\n                }\r\n                else {\r\n                    y1 = y;\r\n                    y2 = this.dragStartPos[1];\r\n                }\r\n                this.selectedSVGNotes = this.controlTab.areaSelect(x1, y1, x2, y2);\r\n                this.drawMultiSelectRect(this.selectedSVGNotes);\r\n            }\r\n        });\r\n        this.controlTab.on(\"sectionhover\", (section) => {\r\n            this.controlTab.tabCanvas.layers.ui.hightLightSection(section);\r\n        });\r\n        this.controlTab.on(\"sectionhout\", (section) => {\r\n            this.controlTab.tabCanvas.layers.ui.hideSectionIndicator(section);\r\n        });\r\n        this.controlTab.on(\"sectionclick\", (section, string) => {\r\n            this.selectNoteAndMoveIndicator(section, this.controlTab.getNoteNumberOfSection(section) - 1, string);\r\n            if (this.selectedBlock &&\r\n                this.selectedBlock.section === section &&\r\n                this.selectedBlock.note === this.controlTab.getNoteNumberOfSection(section) - 1 &&\r\n                this.controlTab.isBlankNote(section, this.selectedBlock.note)) {\r\n                return;\r\n            }\r\n            this.controlTab.addNote(section, -1, new _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_0__[\"Note\"]());\r\n            this.controlTab.render();\r\n            this.selectNoteAndMoveIndicator(section, this.controlTab.getNoteNumberOfSection(section) - 1, string);\r\n        });\r\n    }\r\n    selectNoteAndMoveIndicator(section, note, string) {\r\n        let sp = this.controlTab.getSectionLeftTopPos(section);\r\n        let np = this.controlTab.getNotePosition(section, note, string);\r\n        if (np[0] === -1)\r\n            return false;\r\n        if (this.selectedBlock && (this.selectedBlock.section != section || this.selectedBlock.note != note)) {\r\n            if (this.controlTab.getNoteNumberOfSection(this.selectedBlock.section) > 1 && this.controlTab.isBlankNote(this.selectedBlock.section, this.selectedBlock.note)) {\r\n                this.controlTab.deleteNote(this.selectedBlock.section, this.selectedBlock.note);\r\n                this.controlTab.render();\r\n                if (this.selectedBlock.section === section && this.selectedBlock.note < note)\r\n                    note--;\r\n                sp = this.controlTab.getSectionLeftTopPos(section);\r\n                np = this.controlTab.getNotePosition(section, note, string);\r\n            }\r\n        }\r\n        this.setSelectNote(section, note, string);\r\n        this.setIndicator(np);\r\n        this.controlTab.adjustPostion(sp[1]);\r\n        return true;\r\n    }\r\n    setSelectNote(section, note, string) {\r\n        this.selectedBlock = { section: section, note: note, string: string };\r\n    }\r\n    setIndicator(position) {\r\n        this.indicator.cx = position[0];\r\n        this.indicator.cy = position[1];\r\n    }\r\n    changeNoteLength(operater) {\r\n        let factor;\r\n        if (operater === \"+\") {\r\n            factor = 1;\r\n        }\r\n        else if (operater === \"-\") {\r\n            factor = 0;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        if (this.selectedBlock) {\r\n            let lengthArray = [1, 2, 4, 8, 16, 32];\r\n            let selectData = this.controlTab.getNoteData(this.selectedBlock.section, this.selectedBlock.note);\r\n            for (let i = 1 - factor; i < lengthArray.length - factor; i++) {\r\n                if (lengthArray[i] >= selectData[0]) {\r\n                    selectData[0] = lengthArray[i - 1 + factor * 2];\r\n                    this.controlTab.setNoteData(this.selectedBlock.section, this.selectedBlock.note, selectData);\r\n                    this.controlTab.render();\r\n                    this.selectNoteAndMoveIndicator(this.selectedBlock.section, this.selectedBlock.note, this.selectedBlock.string);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    selectRight(selectNote, controlTab) {\r\n        let s = this.selectNoteAndMoveIndicator(selectNote.section, selectNote.note + 1, selectNote.string);\r\n        if (!s) { // the current selection is the last note of the section\r\n            if (controlTab.isBlankNote(selectNote.section, selectNote.note)) {\r\n                s = this.selectNoteAndMoveIndicator(selectNote.section + 1, 0, selectNote.string);\r\n                if (!s) { // the current selection is the last section and the last note\r\n                    controlTab.addNote(selectNote.section + 1, 0, new _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_0__[\"Note\"]());\r\n                    controlTab.render();\r\n                    this.selectNoteAndMoveIndicator(selectNote.section + 1, 0, selectNote.string);\r\n                }\r\n            }\r\n            else {\r\n                controlTab.addNote(selectNote.section, selectNote.note + 1, new _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_0__[\"Note\"]());\r\n                controlTab.render();\r\n                this.selectNoteAndMoveIndicator(selectNote.section, selectNote.note + 1, selectNote.string);\r\n            }\r\n        }\r\n    }\r\n    selectLeft(selectNoteBlock, controlTab) {\r\n        if (selectNoteBlock.note === 0) {\r\n            if (controlTab.isBlankNote(selectNoteBlock.section, selectNoteBlock.note)) {\r\n                if (selectNoteBlock.section > 0) {\r\n                    this.selectNoteAndMoveIndicator(selectNoteBlock.section - 1, this.controlTab.getNoteNumberOfSection(selectNoteBlock.section - 1) - 1, selectNoteBlock.string);\r\n                }\r\n            }\r\n            else {\r\n                controlTab.addNote(selectNoteBlock.section, 0, new _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_0__[\"Note\"]());\r\n                controlTab.render();\r\n                this.selectNoteAndMoveIndicator(selectNoteBlock.section, 0, selectNoteBlock.string);\r\n            }\r\n        }\r\n        else {\r\n            this.selectNoteAndMoveIndicator(selectNoteBlock.section, selectNoteBlock.note - 1, selectNoteBlock.string);\r\n        }\r\n    }\r\n    selectUp(selectNoteBlock, controlTab) {\r\n        if (selectNoteBlock.string > 0) {\r\n            this.selectNoteAndMoveIndicator(selectNoteBlock.section, selectNoteBlock.note, selectNoteBlock.string - 1);\r\n        }\r\n    }\r\n    selectDown(selectNoteBlock, controlTab) {\r\n        if (selectNoteBlock.string < 5) {\r\n            this.selectNoteAndMoveIndicator(selectNoteBlock.section, selectNoteBlock.note, selectNoteBlock.string + 1);\r\n        }\r\n    }\r\n    insertEmptyNote(selectedBlock) {\r\n        if (!this.controlTab.isBlankNote(this.selectedBlock.section, this.selectedBlock.note)) {\r\n            this.controlTab.addNote(this.selectedBlock.section, this.selectedBlock.note, new _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_0__[\"Note\"]());\r\n            this.selectedBlock = { section: this.selectedBlock.section, note: this.selectedBlock.note, string: this.selectedBlock.string };\r\n        }\r\n        return this.selectedBlock;\r\n    }\r\n    deleteNoteBlock(selectNoteBlock, controlTab) {\r\n        this.controlTab.setStringDataOfNote(selectNoteBlock.section, selectNoteBlock.note, selectNoteBlock.string, -1);\r\n        controlTab.render();\r\n    }\r\n    drawMultiSelectRect(selectedSVGNotes) {\r\n        //Sort out the selected lines.\r\n        let selectedLines = [];\r\n        for (let i = 0; i < selectedSVGNotes.length; i++) {\r\n            selectedLines.push(selectedSVGNotes[i].line);\r\n        }\r\n        let uniqueSelectedLines = selectedLines.filter(function (elem, index, self) {\r\n            return index == self.indexOf(elem);\r\n        });\r\n        if (selectedSVGNotes.length > 0) {\r\n            this.unselectNoteBlock();\r\n            let lineNotes = [];\r\n            for (let i = 0; i < uniqueSelectedLines.length; i++) {\r\n                let pushNotes = selectedSVGNotes.filter(function (elem, index, self) {\r\n                    return elem.line == uniqueSelectedLines[i];\r\n                });\r\n                lineNotes.push({ lineIndex: uniqueSelectedLines[i], notes: pushNotes });\r\n            }\r\n            for (let i = 0; i < lineNotes.length; i++) {\r\n                //let rectIndicatorLT = this.selectedNotes[0].blockGroup[0];\r\n                let rectIndicatorLT = lineNotes[i].notes[0].blockGroup[0];\r\n                //Indicator's right bottom note, which provideds position.\r\n                //let rectIndicatorRB = this.selectedNotes[this.selectedNotes.length-1].blockGroup[this.selectedNotes[this.selectedNotes.length-1].blockGroup.length-1];\r\n                let rectIndicatorRB = lineNotes[i].notes[lineNotes[i].notes.length - 1].blockGroup[lineNotes[i].notes[lineNotes[i].notes.length - 1].blockGroup.length - 1];\r\n                this.selectNotesIndicator.push(this.controlTab.tabCanvas.layers.ui.createRect(rectIndicatorLT.x - this.selectNotesIndicatorPadding, rectIndicatorLT.y - this.selectNotesIndicatorPadding, rectIndicatorRB.x - rectIndicatorLT.x + 2 * this.selectNotesIndicatorPadding, rectIndicatorRB.y - rectIndicatorLT.y + 2 * this.selectNotesIndicatorPadding, 5, \"rgba(255, 182, 45, 0.6)\"));\r\n            }\r\n        }\r\n    }\r\n    unselectSVGNotes() {\r\n        this.selectedSVGNotes = [];\r\n        if (this.selectNotesIndicator.length > 0) {\r\n            this.selectNotesIndicator.forEach((elem, index, self) => {\r\n                elem.remove();\r\n            });\r\n        }\r\n    }\r\n    unselectNoteBlock() {\r\n        this.selectedBlock = null;\r\n        this.setIndicator([-20, -20]);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/SlimTabV2Editor.ts\n");

/***/ }),

/***/ "./src/SlimTabV2Types.ts":
/*!*******************************!*\
  !*** ./src/SlimTabV2Types.ts ***!
  \*******************************/
/*! exports provided: Note */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Note\", function() { return Note; });\nclass Note {\r\n    constructor(data = {}) {\r\n        if (data[0]) {\r\n            this[0] = data[0];\r\n            this[1] = data[1] || [-1, -1, -1, -1, -1, -1];\r\n            this[2] = data[2] || null;\r\n            return;\r\n        }\r\n        this[0] = data.noteValue || 4;\r\n        this[1] = data.stringContent || [-1, -1, -1, -1, -1, -1];\r\n        this[2] = data.userData || null;\r\n    }\r\n    get noteValue() {\r\n        return this[0];\r\n    }\r\n    set noteValue(l) {\r\n        this[0] = l;\r\n    }\r\n    get stringContent() {\r\n        return this[1];\r\n    }\r\n    set stringContent(v) {\r\n        this[1] = v;\r\n    }\r\n    get userData() {\r\n        return this[2];\r\n    }\r\n    set userData(v) {\r\n        this[2] = v;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvU2xpbVRhYlYyVHlwZXMudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9zcmMvU2xpbVRhYlYyVHlwZXMudHM/YmVjMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvL2V4cG9ydCB0eXBlIG5vdGUgPSBbbnVtYmVyLCBudW1iZXJbXSwgYW55XTsvLyBbNCwgWzMsIC0xLCAtMSwgNCwgLTEsIC0xXSwgbnVsbF0sLy8gbm90ZSBsZW5ndGgsIFtibG9jayBudW1iZXIsIGluZGV4IGlzIHN0cmluZyBudW1iZXIsXSwgdXNlciBkYXRhXHJcbmV4cG9ydCB0eXBlIHNlY3Rpb24gPSBOb3RlW107XHJcbmV4cG9ydCBjbGFzcyBOb3RlIHtcclxuICAgIDA6IG51bWJlcjtcclxuICAgIDE6IG51bWJlcltdO1xyXG4gICAgMjogYW55O1xyXG4gICAgY29uc3RydWN0b3IoZGF0YToge25vdGVWYWx1ZT86IG51bWJlciwgc3RyaW5nQ29udGVudD86IG51bWJlcltdLCB1c2VyRGF0YT86IGFueSwgMD86IG51bWJlciwgMT86IG51bWJlcltdLCAyPzogYW55fSA9IHt9KXtcclxuICAgICAgICBpZihkYXRhWzBdKXtcclxuICAgICAgICAgICAgdGhpc1swXSA9IGRhdGFbMF07XHJcbiAgICAgICAgICAgIHRoaXNbMV0gPSBkYXRhWzFdIHx8IFstMSwgLTEsIC0xLCAtMSwgLTEsIC0xXTtcclxuICAgICAgICAgICAgdGhpc1syXSA9IGRhdGFbMl0gfHwgbnVsbDtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzWzBdID0gZGF0YS5ub3RlVmFsdWUgfHwgNDtcclxuICAgICAgICB0aGlzWzFdID0gZGF0YS5zdHJpbmdDb250ZW50IHx8IFstMSwgLTEsIC0xLCAtMSwgLTEsIC0xXTtcclxuICAgICAgICB0aGlzWzJdID0gZGF0YS51c2VyRGF0YSB8fCBudWxsO1xyXG4gICAgfVxyXG4gICAgZ2V0IG5vdGVWYWx1ZSgpOiBudW1iZXJ7XHJcbiAgICAgICAgcmV0dXJuIHRoaXNbMF07XHJcbiAgICB9XHJcbiAgICBzZXQgbm90ZVZhbHVlKGw6IG51bWJlcil7XHJcbiAgICAgICAgdGhpc1swXSA9IGw7XHJcbiAgICB9XHJcbiAgICBnZXQgc3RyaW5nQ29udGVudCgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzWzFdO1xyXG4gICAgfVxyXG4gICAgc2V0IHN0cmluZ0NvbnRlbnQodjogbnVtYmVyW10pe1xyXG4gICAgICAgIHRoaXNbMV0gPSB2O1xyXG4gICAgfVxyXG4gICAgZ2V0IHVzZXJEYXRhKCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXNbMl07XHJcbiAgICB9XHJcbiAgICBzZXQgdXNlckRhdGEodjogYW55KXtcclxuICAgICAgICB0aGlzWzJdID0gdjtcclxuICAgIH1cclxufSJdLCJtYXBwaW5ncyI6IkFBRUE7QUFBQTtBQUFBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/SlimTabV2Types.ts\n");

/***/ }),

/***/ "./src/Timer.ts":
/*!**********************!*\
  !*** ./src/Timer.ts ***!
  \**********************/
/*! exports provided: Timer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Timer\", function() { return Timer; });\nclass Timer {\r\n    constructor() {\r\n        this._running = false;\r\n        this._systemTime = 0;\r\n        this.lastTime = 0;\r\n        this.delay = 33;\r\n        this.funcs = [];\r\n        this.timerId = null;\r\n        this.executeFuncs = [];\r\n    }\r\n    searchIndex(time) {\r\n        let funcs = this.executeFuncs;\r\n        let low = 0;\r\n        let high = funcs.length;\r\n        let mid = 0;\r\n        while (low < high) {\r\n            mid = Math.floor(low + (high - low) / 2);\r\n            if (time >= funcs[mid].time) {\r\n                low = mid + 1;\r\n            }\r\n            else {\r\n                high = mid - 1;\r\n            }\r\n        }\r\n        return low;\r\n    }\r\n    register(func) {\r\n        if (this.funcs.indexOf(func)) {\r\n            return;\r\n        }\r\n        this.funcs.push(func);\r\n    }\r\n    registerDelay(func, delay, loop = 1) {\r\n        let time = this._systemTime + delay;\r\n        this.registerDelayP(func, delay, time, loop);\r\n    }\r\n    unregister(func) {\r\n        this.funcs.map((value, index) => {\r\n            if (func === value) {\r\n                this.funcs.splice(index, 1);\r\n            }\r\n        });\r\n    }\r\n    start(systemTime = 0) {\r\n        if (this._running) {\r\n            return;\r\n        }\r\n        this._running = true;\r\n        this._systemTime = systemTime;\r\n        this.lastTime = new Date().getTime();\r\n        this.update();\r\n    }\r\n    stop() {\r\n        if (this.timerId) {\r\n            clearTimeout(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n        this._running = false;\r\n        this._systemTime = 0;\r\n        this.lastTime = 0;\r\n        this.clearFuncs();\r\n        this.clearDelayFuncs();\r\n    }\r\n    update() {\r\n        let currentTime = new Date().getTime();\r\n        let delay = currentTime - this.lastTime;\r\n        this._systemTime += delay;\r\n        this.funcs.forEach((value) => {\r\n            value(delay);\r\n        });\r\n        this.executeFunc();\r\n        this.lastTime = currentTime;\r\n        if (this._running)\r\n            this.timerId = setTimeout(this.update.bind(this), this.delay);\r\n    }\r\n    executeFunc() {\r\n        if (this.executeFuncs[0] && this.executeFuncs[0].time < this._systemTime) {\r\n            let value = this.executeFuncs.shift();\r\n            value.func();\r\n            this.executeFunc();\r\n            // loop <= 0 will be infinite loop\r\n            if (value.loop > 0 && --value.loop === 0) {\r\n                return;\r\n            }\r\n            let nextTime = value.time + value.delay;\r\n            this.registerDelayP(value.func, value.delay, nextTime, value.loop);\r\n        }\r\n    }\r\n    clearFuncs() {\r\n        this.funcs = [];\r\n    }\r\n    clearDelayFuncs() {\r\n        this.executeFuncs = [];\r\n    }\r\n    registerDelayP(func, delay, time, loop) {\r\n        let index = this.searchIndex(time);\r\n        let value = { func: func, delay: delay, time: time, loop: loop };\r\n        this.executeFuncs.splice(index, 0, value);\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvVGltZXIudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9zcmMvVGltZXIudHM/NTBkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgVGltZXJ7XHJcbiAgICBfcnVubmluZzogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgX3N5c3RlbVRpbWU6IG51bWJlciA9IDA7XHJcbiAgICBsYXN0VGltZTogbnVtYmVyID0gMDtcclxuICAgIGRlbGF5OiBudW1iZXIgPSAzMztcclxuICAgIGZ1bmNzOiBBcnJheTxGdW5jdGlvbj4gPSBbXTtcclxuICAgIHRpbWVySWQ6IG51bWJlciA9IG51bGw7XHJcbiAgICBleGVjdXRlRnVuY3M6IEFycmF5PEV4ZWN1dGVWYWx1ZT4gPSBbXTtcclxuXHJcblxyXG4gICAgY29uc3RydWN0b3IoKXt9XHJcblxyXG4gICAgc2VhcmNoSW5kZXgodGltZTogbnVtYmVyKXtcclxuICAgICAgICBsZXQgZnVuY3M6IEFycmF5PEV4ZWN1dGVWYWx1ZT4gPSB0aGlzLmV4ZWN1dGVGdW5jcztcclxuICAgICAgICBsZXQgbG93OiBudW1iZXIgPSAwO1xyXG4gICAgICAgIGxldCBoaWdoOiBudW1iZXIgPSBmdW5jcy5sZW5ndGg7XHJcbiAgICAgICAgbGV0IG1pZDogbnVtYmVyID0gMDtcclxuICAgICAgICB3aGlsZSAobG93IDwgaGlnaCl7XHJcbiAgICAgICAgICAgIG1pZCA9IE1hdGguZmxvb3IobG93ICsgKGhpZ2ggLSBsb3cpLzIpO1xyXG4gICAgICAgICAgICBpZih0aW1lID49IGZ1bmNzW21pZF0udGltZSl7XHJcbiAgICAgICAgICAgICAgICBsb3cgPSBtaWQgKzE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIGhpZ2ggPSBtaWQgLTE7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBsb3c7XHJcbiAgICB9XHJcblxyXG4gICAgcmVnaXN0ZXIoZnVuYzogRnVuY3Rpb24pe1xyXG4gICAgICAgIGlmICh0aGlzLmZ1bmNzLmluZGV4T2YoZnVuYykpe1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuZnVuY3MucHVzaChmdW5jKTtcclxuICAgIH1cclxuXHJcbiAgICByZWdpc3RlckRlbGF5KGZ1bmM6IEZ1bmN0aW9uLCBkZWxheTpudW1iZXIsIGxvb3A6IG51bWJlciA9IDEpe1xyXG4gICAgICAgIGxldCB0aW1lOiBudW1iZXIgPSB0aGlzLl9zeXN0ZW1UaW1lICsgZGVsYXk7XHJcbiAgICAgICAgdGhpcy5yZWdpc3RlckRlbGF5UChmdW5jLCBkZWxheSwgdGltZSwgbG9vcCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHVucmVnaXN0ZXIgKGZ1bmM6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5mdW5jcy5tYXAoKHZhbHVlOiBGdW5jdGlvbiwgaW5kZXg6IG51bWJlcikgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZnVuYyA9PT0gdmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZnVuY3Muc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXJ0KHN5c3RlbVRpbWU6IG51bWJlciA9IDApe1xyXG4gICAgICAgIGlmKHRoaXMuX3J1bm5pbmcpe1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX3J1bm5pbmcgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuX3N5c3RlbVRpbWUgPSBzeXN0ZW1UaW1lO1xyXG4gICAgICAgIHRoaXMubGFzdFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuICAgICAgICB0aGlzLnVwZGF0ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0b3AoKXtcclxuICAgICAgICBpZih0aGlzLnRpbWVySWQpe1xyXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcklkKTtcclxuICAgICAgICAgICAgdGhpcy50aW1lcklkID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fcnVubmluZyA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuX3N5c3RlbVRpbWUgPSAwO1xyXG4gICAgICAgIHRoaXMubGFzdFRpbWUgPSAwO1xyXG4gICAgICAgIHRoaXMuY2xlYXJGdW5jcygpO1xyXG4gICAgICAgIHRoaXMuY2xlYXJEZWxheUZ1bmNzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKCl7XHJcbiAgICAgICAgbGV0IGN1cnJlbnRUaW1lOiBudW1iZXIgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgXHJcbiAgICAgICAgbGV0IGRlbGF5OiBudW1iZXIgPSBjdXJyZW50VGltZSAtIHRoaXMubGFzdFRpbWU7XHJcbiAgICAgICAgdGhpcy5fc3lzdGVtVGltZSArPSBkZWxheTtcclxuICAgICAgICB0aGlzLmZ1bmNzLmZvckVhY2goKHZhbHVlOiBGdW5jdGlvbikgPT57XHJcbiAgICAgICAgICAgIHZhbHVlKGRlbGF5KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmV4ZWN1dGVGdW5jKCk7XHJcbiAgICAgICAgdGhpcy5sYXN0VGltZSA9Y3VycmVudFRpbWU7XHJcbiAgICAgICAgaWYodGhpcy5fcnVubmluZylcclxuICAgICAgICAgICAgdGhpcy50aW1lcklkID0gc2V0VGltZW91dCh0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpLCB0aGlzLmRlbGF5KTtcclxuICAgIH1cclxuXHJcbiAgICBleGVjdXRlRnVuYygpe1xyXG4gICAgICAgIGlmKHRoaXMuZXhlY3V0ZUZ1bmNzWzBdICYmIHRoaXMuZXhlY3V0ZUZ1bmNzWzBdLnRpbWUgPCB0aGlzLl9zeXN0ZW1UaW1lKXtcclxuICAgICAgICAgICAgbGV0IHZhbHVlOiBFeGVjdXRlVmFsdWUgPSB0aGlzLmV4ZWN1dGVGdW5jcy5zaGlmdCgpO1xyXG4gICAgICAgICAgICB2YWx1ZS5mdW5jKCk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmV4ZWN1dGVGdW5jKCk7XHJcblxyXG4gICAgICAgICAgICAvLyBsb29wIDw9IDAgd2lsbCBiZSBpbmZpbml0ZSBsb29wXHJcbiAgICAgICAgICAgIGlmICh2YWx1ZS5sb29wID4gMCAmJiAtLXZhbHVlLmxvb3AgPT09MCl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGV0IG5leHRUaW1lOiBudW1iZXIgPSB2YWx1ZS50aW1lICsgdmFsdWUuZGVsYXk7XHJcbiAgICAgICAgICAgIHRoaXMucmVnaXN0ZXJEZWxheVAodmFsdWUuZnVuYywgdmFsdWUuZGVsYXksIG5leHRUaW1lLCB2YWx1ZS5sb29wKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGNsZWFyRnVuY3MoKXtcclxuICAgICAgICB0aGlzLmZ1bmNzPSBbXTtcclxuICAgIH1cclxuICAgIGNsZWFyRGVsYXlGdW5jcygpe1xyXG4gICAgICAgIHRoaXMuZXhlY3V0ZUZ1bmNzID0gW107XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSByZWdpc3RlckRlbGF5UChmdW5jOiBGdW5jdGlvbiwgZGVsYXk6IG51bWJlciwgdGltZTogbnVtYmVyLCBsb29wOiBudW1iZXIpe1xyXG4gICAgICAgIGxldCBpbmRleDogbnVtYmVyID0gdGhpcy5zZWFyY2hJbmRleCh0aW1lKTtcclxuICAgICAgICBsZXQgdmFsdWU6IEV4ZWN1dGVWYWx1ZSA9IHtmdW5jOiBmdW5jLCBkZWxheTogZGVsYXksIHRpbWU6IHRpbWUsIGxvb3A6IGxvb3B9O1xyXG4gICAgICAgIHRoaXMuZXhlY3V0ZUZ1bmNzLnNwbGljZShpbmRleCwgMCwgdmFsdWUpO1xyXG4gICAgfVxyXG59XHJcblxyXG5pbnRlcmZhY2UgRXhlY3V0ZVZhbHVlIHtcclxuICAgIGZ1bmM6IEZ1bmN0aW9uO1xyXG4gICAgdGltZTogbnVtYmVyO1xyXG4gICAgZGVsYXk6IG51bWJlcjtcclxuICAgIGxvb3A6IG51bWJlcjtcclxufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBVUE7QUFUQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Timer.ts\n");

/***/ }),

/***/ "./src/demo.ts":
/*!*********************!*\
  !*** ./src/demo.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SlimTabV2Types */ \"./src/SlimTabV2Types.ts\");\n/* harmony import */ var _SlimTabV2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SlimTabV2 */ \"./src/SlimTabV2.ts\");\n/* harmony import */ var _DataAdapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataAdapter */ \"./src/DataAdapter.ts\");\n/* harmony import */ var _LiCAP__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./LiCAP */ \"./src/LiCAP.ts\");\n/* harmony import */ var _Metronome__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Metronome */ \"./src/Metronome.ts\");\n/* harmony import */ var _instrumentCorrection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./instrumentCorrection */ \"./src/instrumentCorrection.ts\");\n/* harmony import */ var _SlimTabV2Editor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SlimTabV2Editor */ \"./src/SlimTabV2Editor.ts\");\n/* harmony import */ var _LiCAPStream__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LiCAPStream */ \"./src/LiCAPStream.ts\");\n/* harmony import */ var _SLPract__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./SLPract */ \"./src/SLPract.ts\");\n/* harmony import */ var _KeyBoardAdapter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./KeyBoardAdapter */ \"./src/KeyBoardAdapter.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet ka = new _KeyBoardAdapter__WEBPACK_IMPORTED_MODULE_9__[\"KeyBoardAdapter\"]();\r\nlet nt = new _SlimTabV2__WEBPACK_IMPORTED_MODULE_1__[\"SLTab\"]();\r\nlet data = [\r\n    []\r\n    // [// section\r\n    //     // [4, [3, -1, -1, 4, -1, -1], null],// note length, [block number, index is string number,], user data\r\n    //     [4, [3, 5, 2, -1, -1, -1], null],\r\n    //     [4, [-1, 5, 2, -1, -1, -1], null],\r\n    //     [4, [-1, 5, 2, -1, -1, -1], null],\r\n    //     [8, [-1, 5, 2, -1, -1, -1], null],\r\n    // ],\r\n    // [\r\n    //     [8, [-1, 5, 2, -1, -1, -1], null],\r\n    //     [4, [-1, 5, 2, -1, -1, -1], null],\r\n    //     [4, [-1, 5, 2, -1, -1, -1], null],\r\n    //     [8, [-1, 5, 2, -1, -1, -1], null],\r\n    //     [8, [-1, 5, 2, -1, -1, -1], null],\r\n    // ]\r\n];\r\nnt.setData(data);\r\nlet tabEditor = new _SlimTabV2Editor__WEBPACK_IMPORTED_MODULE_6__[\"SLEditor\"](nt);\r\nnt.attach(document.getElementById(\"slimtab\"));\r\ndocument.addEventListener(\"keydown\", (e) => {\r\n    let ka = [32, 37, 38, 39, 40]; //space: 32, left: 37, up: 38, right: 39, down: 40,\r\n    if (ka.includes(e.keyCode)) {\r\n        e.preventDefault();\r\n        e.returnValue = false;\r\n    }\r\n});\r\nnt.render();\r\nlet da = new _DataAdapter__WEBPACK_IMPORTED_MODULE_2__[\"DataAdapter\"]();\r\nda.timeOffset = 40;\r\nlet device;\r\nlet beep = new _Metronome__WEBPACK_IMPORTED_MODULE_4__[\"Metronome\"](120);\r\n_LiCAP__WEBPACK_IMPORTED_MODULE_3__[\"LiCAP\"].enumerate().then((devs) => {\r\n    if (devs.length > 0) {\r\n        device = devs[0];\r\n        devs[0].on(\"pick\", (strIndex, note, amp, time) => {\r\n            da.startTimeOffset = -beep.getStartTime();\r\n            da.receiveData(strIndex, note, amp, time);\r\n        });\r\n        devs[0].on(\"message\", (e) => {\r\n            da.startTimeOffset = -beep.getStartTime();\r\n            let freq = ka.noteKeyToFrequency(e.data[1]);\r\n            let [string, block] = ka.frequencyToStringData(freq);\r\n            da.receiveData(string, block, e.data[2], e.timeStamp);\r\n        });\r\n    }\r\n});\r\nda.addPackListener((data) => {\r\n    if (data.userData === \"undefined-value\") {\r\n        if (nt.isSectionFull(nt.getSectionNumber() - 1)) {\r\n            nt.addNote(-1, -1, data);\r\n        }\r\n        else {\r\n            nt.addNote(nt.getSectionNumber() - 1, -1, data);\r\n        }\r\n        nt.render();\r\n    }\r\n    else {\r\n        nt.deleteNote(-1, -1);\r\n        nt.instrumentNoteInput(_instrumentCorrection__WEBPACK_IMPORTED_MODULE_5__[\"instrumentCorrection\"], data);\r\n    }\r\n    nt.adjustPostion(nt.getSectionLeftTopPos(nt.getSectionNumber() - 1)[1]);\r\n});\r\nda.addDataListener((string, note, time) => {\r\n    pt.onPluck(string, note, performance.now() - 30 - 50 /*play lag*/);\r\n});\r\nlet bs = 0;\r\nlet beepEle = document.getElementById(\"metronome\");\r\nlet bpmDom = document.getElementById(\"metronome-bpm\");\r\nbpmDom.addEventListener(\"change\", () => {\r\n    beep.setBpm(Number(bpmDom.value));\r\n    da.setBpm(Number(bpmDom.value));\r\n    document.getElementById(\"bpm-display\").innerHTML = bpmDom.value;\r\n    console.log(bpmDom.value);\r\n});\r\nbeepEle.onclick = function (event) {\r\n    if (bs == 0) {\r\n        beep.startTick();\r\n        beepEle.style.background = \"#e99415\";\r\n        da.activate();\r\n        bs = 1;\r\n    }\r\n    else {\r\n        beep.stopTick();\r\n        beepEle.style.background = \"\";\r\n        da.deactivate();\r\n        bs = 0;\r\n    }\r\n};\r\nlet win = window;\r\nlet s;\r\nwindow.gg = () => { s = setInterval(function () { nt.instrumentNoteInput(_instrumentCorrection__WEBPACK_IMPORTED_MODULE_5__[\"instrumentCorrection\"], new _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_0__[\"Note\"]([8, [-1, -1, -1, 4, -1, 6], null])); }, 100); };\r\nwindow.gx = () => { clearInterval(s); };\r\n//s= setInterval(function(){nt.instrumentNoteInput(instrumentCorrection,new Note([8, [-1, -1, -1, 4, -1, 6], null]))}, 100);\r\n//nt.instrumentNoteInput(instrumentCorrection,[4, [-1, -1, -1, 4, -1, 6], null]);\r\n//nt.instrumentNoteInput(instrumentCorrection,[4, [-1, -1, -1, 4, -1, 6], null]);\r\n// nt.instrumentNoteInput(instrumentCorrection,[8/3, [-1, -1, -1, 4, -1, 6], null]);\r\n//nt.instrumentNoteInput(instrumentCorrection,[4, [-1, -1, -1, 4, -1, 6], null], 0, 2);\r\nfunction pad(num, size) { return ('000000000' + num).substr(-size); }\r\nnt.on(\"noteclick\", (sectionIdx, noteIdx, stringIdx) => {\r\n    document.getElementById(\"section-idx\").innerText = pad(String(sectionIdx + 1), 3) + \".\";\r\n});\r\nlet stream = new _LiCAPStream__WEBPACK_IMPORTED_MODULE_7__[\"LiCAPStream\"]();\r\ndocument.getElementById('playstream').addEventListener('click', () => {\r\n    stream.play();\r\n});\r\nconsole.log(nt);\r\nlet pt = new _SLPract__WEBPACK_IMPORTED_MODULE_8__[\"SLPract\"](nt, tabEditor, beep);\r\ndocument.addEventListener(\"keydown\", (ev) => {\r\n    if ((ev.key).toLowerCase() === \" \") {\r\n        da.activate();\r\n        setTimeout(() => device.resetTimer(), 2000);\r\n    }\r\n    if (ev.key == \"r\" || ev.key == \"e\") {\r\n        //console.log(ev.timeStamp - beep.getStartTime());\r\n        da.startTimeOffset = -beep.getStartTime();\r\n        da.receiveData(1, 5, 2, ev.timeStamp);\r\n    }\r\n});\r\ndocument.getElementById('save-file').addEventListener('click', saveFile);\r\nfunction saveFile() {\r\n    let dl = document.createElement(\"a\");\r\n    dl.setAttribute(\"download\", \"tablature.tab\");\r\n    dl.style.display = \"none\";\r\n    dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${JSON.stringify(nt.notes)}`);\r\n    document.body.append(dl);\r\n    dl.click();\r\n    document.body.removeChild(dl);\r\n}\r\nlet loadFileEle = document.getElementById(\"load-file\");\r\nloadFileEle.style.display = \"none\";\r\nloadFileEle.addEventListener(\"change\", (ev) => {\r\n    let reader = new FileReader();\r\n    reader.onload = (e) => {\r\n        let ldata = JSON.parse(e.target.result);\r\n        tabEditor.resetIndicator();\r\n        nt.setData(ldata);\r\n        nt.render();\r\n    };\r\n    reader.readAsText(loadFileEle.files[0]);\r\n    loadFileEle.value = \"\";\r\n});\r\ndocument.getElementById(\"load-f\").addEventListener('click', () => {\r\n    loadFileEle.click();\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/demo.ts\n");

/***/ }),

/***/ "./src/instrumentCorrection.ts":
/*!*************************************!*\
  !*** ./src/instrumentCorrection.ts ***!
  \*************************************/
/*! exports provided: instrumentCorrection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"instrumentCorrection\", function() { return instrumentCorrection; });\n/* harmony import */ var _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SlimTabV2Types */ \"./src/SlimTabV2Types.ts\");\n\r\nconst instrumentCorrection = function (sltab, addData, section, note, userData = \"\") {\r\n    sltab.deleteNote(section, note, sltab.getNoteNumberOfSection(section));\r\n    let stackLength = 0; // unit in beat\r\n    for (let i = 0; i < note; i++) {\r\n        stackLength += sltab.lengthPerBeat / sltab.notes[section][i][0];\r\n    }\r\n    addData.userData += ` ${userData}`;\r\n    if (stackLength >= sltab.beatPerSection) {\r\n        sltab.insertSection(-1, []);\r\n        sltab.addNote(section + 1, -1, addData);\r\n    }\r\n    else if (stackLength + sltab.lengthPerBeat / addData[0] > sltab.beatPerSection) {\r\n        let restLength = sltab.beatPerSection - stackLength;\r\n        let addLength = sltab.lengthPerBeat / (sltab.lengthPerBeat / addData[0] - restLength);\r\n        restLength = sltab.lengthPerBeat / restLength;\r\n        sltab.addNote(section, -1, new _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_0__[\"Note\"]({ noteValue: restLength, stringContent: addData[1], userData: \"linkStart \" + userData }));\r\n        sltab.insertSection(-1, []);\r\n        instrumentCorrection(sltab, new _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_0__[\"Note\"]({ noteValue: addLength, stringContent: addData[1], userData: \"\" }), section + 1, 0, \"linkEnd\");\r\n        return;\r\n    }\r\n    else {\r\n        let noteRestLength = 1 - stackLength % 1; // unit in beat\r\n        if (noteRestLength >= sltab.lengthPerBeat / addData[0]) {\r\n            sltab.addNote(section, -1, addData);\r\n        }\r\n        else {\r\n            let noteAddLength = sltab.lengthPerBeat / addData[0] - noteRestLength;\r\n            sltab.addNote(section, -1, new _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_0__[\"Note\"]({ noteValue: sltab.lengthPerBeat / noteRestLength, stringContent: addData[1], userData: \"linkStart \" + userData }));\r\n            sltab.addNote(section, -1, new _SlimTabV2Types__WEBPACK_IMPORTED_MODULE_0__[\"Note\"]({ noteValue: sltab.lengthPerBeat / noteAddLength, stringContent: addData[1], userData: \"linkEnd\" }));\r\n        }\r\n    }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5zdHJ1bWVudENvcnJlY3Rpb24udHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9zcmMvaW5zdHJ1bWVudENvcnJlY3Rpb24udHM/MzlhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3JyZWN0aW9uIH0gZnJvbSBcIi4vU2xpbVRhYlYySW50ZXJmYWNlXCJcclxuaW1wb3J0IHsgc2VjdGlvbiwgTm90ZSB9IGZyb20gXCIuL1NsaW1UYWJWMlR5cGVzXCJcclxuaW1wb3J0IHsgU0xUYWIgfSBmcm9tIFwiLi9TbGltVGFiVjJcIlxyXG5jb25zdCBpbnN0cnVtZW50Q29ycmVjdGlvbjogQ29ycmVjdGlvbiA9IGZ1bmN0aW9uKHNsdGFiOiBTTFRhYiwgYWRkRGF0YTogTm90ZSwgc2VjdGlvbjogbnVtYmVyLCBub3RlOiBudW1iZXIsIHVzZXJEYXRhOiBzdHJpbmcgPSBcIlwiKXtcclxuICAgIHNsdGFiLmRlbGV0ZU5vdGUoc2VjdGlvbiwgbm90ZSAsIHNsdGFiLmdldE5vdGVOdW1iZXJPZlNlY3Rpb24oc2VjdGlvbikpO1xyXG4gICAgbGV0IHN0YWNrTGVuZ3RoID0gMDsvLyB1bml0IGluIGJlYXRcclxuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBub3RlOyBpKyspe1xyXG4gICAgICAgIHN0YWNrTGVuZ3RoICs9IHNsdGFiLmxlbmd0aFBlckJlYXQgLyBzbHRhYi5ub3Rlc1tzZWN0aW9uXVtpXVswXTtcclxuICAgIH1cclxuICAgIGFkZERhdGEudXNlckRhdGEgKz0gYCAke3VzZXJEYXRhfWA7XHJcbiAgICBpZihzdGFja0xlbmd0aCA+PSBzbHRhYi5iZWF0UGVyU2VjdGlvbil7XHJcbiAgICAgICAgc2x0YWIuaW5zZXJ0U2VjdGlvbigtMSwgW10pO1xyXG4gICAgICAgIHNsdGFiLmFkZE5vdGUoc2VjdGlvbiArIDEsIC0xLCBhZGREYXRhKTtcclxuICAgIH1lbHNlIGlmKHN0YWNrTGVuZ3RoICsgc2x0YWIubGVuZ3RoUGVyQmVhdCAvIGFkZERhdGFbMF0gPiBzbHRhYi5iZWF0UGVyU2VjdGlvbil7XHJcbiAgICAgICAgbGV0IHJlc3RMZW5ndGggPSBzbHRhYi5iZWF0UGVyU2VjdGlvbiAtIHN0YWNrTGVuZ3RoO1xyXG4gICAgICAgIGxldCBhZGRMZW5ndGggPSBzbHRhYi5sZW5ndGhQZXJCZWF0IC8gKHNsdGFiLmxlbmd0aFBlckJlYXQgLyBhZGREYXRhWzBdIC0gcmVzdExlbmd0aCk7XHJcbiAgICAgICAgcmVzdExlbmd0aCA9IHNsdGFiLmxlbmd0aFBlckJlYXQgLyByZXN0TGVuZ3RoO1xyXG4gICAgICAgIHNsdGFiLmFkZE5vdGUoc2VjdGlvbiwgLTEsIG5ldyBOb3RlKHtub3RlVmFsdWU6IHJlc3RMZW5ndGgsIHN0cmluZ0NvbnRlbnQ6IGFkZERhdGFbMV0sIHVzZXJEYXRhOiBcImxpbmtTdGFydCBcIiArIHVzZXJEYXRhfSkpO1xyXG4gICAgICAgIHNsdGFiLmluc2VydFNlY3Rpb24oLTEsIFtdKTtcclxuICAgICAgICBpbnN0cnVtZW50Q29ycmVjdGlvbihzbHRhYiwgbmV3IE5vdGUoe25vdGVWYWx1ZTogYWRkTGVuZ3RoLCBzdHJpbmdDb250ZW50OiBhZGREYXRhWzFdLCB1c2VyRGF0YTogXCJcIn0pLCBzZWN0aW9uICsgMSwgMCwgXCJsaW5rRW5kXCIpO1xyXG4gICAgICAgIHJldHVybjsgXHJcbiAgICB9ZWxzZXtcclxuICAgICAgICBsZXQgbm90ZVJlc3RMZW5ndGggPSAxIC0gc3RhY2tMZW5ndGggJSAxOyAvLyB1bml0IGluIGJlYXRcclxuICAgICAgICBpZihub3RlUmVzdExlbmd0aCA+PSBzbHRhYi5sZW5ndGhQZXJCZWF0IC8gYWRkRGF0YVswXSl7XHJcbiAgICAgICAgICAgIHNsdGFiLmFkZE5vdGUoc2VjdGlvbiwgLTEsIGFkZERhdGEpO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBsZXQgbm90ZUFkZExlbmd0aCA9IHNsdGFiLmxlbmd0aFBlckJlYXQgLyBhZGREYXRhWzBdIC0gbm90ZVJlc3RMZW5ndGg7XHJcbiAgICAgICAgICAgIHNsdGFiLmFkZE5vdGUoc2VjdGlvbiwgLTEsIG5ldyBOb3RlKHtub3RlVmFsdWU6IHNsdGFiLmxlbmd0aFBlckJlYXQgLyBub3RlUmVzdExlbmd0aCwgc3RyaW5nQ29udGVudDogYWRkRGF0YVsxXSwgdXNlckRhdGE6IFwibGlua1N0YXJ0IFwiICsgdXNlckRhdGF9KSk7XHJcbiAgICAgICAgICAgIHNsdGFiLmFkZE5vdGUoc2VjdGlvbiwgLTEsIG5ldyBOb3RlKHtub3RlVmFsdWU6IHNsdGFiLmxlbmd0aFBlckJlYXQgLyBub3RlQWRkTGVuZ3RoLCBzdHJpbmdDb250ZW50OiBhZGREYXRhWzFdLCB1c2VyRGF0YTogXCJsaW5rRW5kXCJ9KSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbmV4cG9ydCB7IGluc3RydW1lbnRDb3JyZWN0aW9uIH07Il0sIm1hcHBpbmdzIjoiQUFDQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/instrumentCorrection.ts\n");

/***/ }),

/***/ "./src/utils.ts":
/*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
/*! exports provided: utils, Callbacks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"utils\", function() { return utils; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Callbacks\", function() { return Callbacks; });\nvar utils;\r\n(function (utils) {\r\n    function setAttributes(el, attr) {\r\n        for (let k in attr) {\r\n            el.setAttribute(k, attr[k]);\r\n        }\r\n    }\r\n    utils.setAttributes = setAttributes;\r\n    function setStyle(el, style) {\r\n        for (let k in style) {\r\n            el.style.setProperty(k, style[k]);\r\n        }\r\n    }\r\n    utils.setStyle = setStyle;\r\n    const noteNumber = { \"C\": 0, \"C#\": 1, \"D\": 2, \"D#\": 3, \"E\": 4, \"F\": 5, \"F#\": 6, \"G\": 7, \"G#\": 8, \"A\": 9, \"A#\": 10, \"B\": 11 };\r\n    const regex = /^([CDEFGAB]#?)([0-9])$/;\r\n    function noteToDecimal(note) {\r\n        let groups = regex.exec(note);\r\n        if (groups.length != 3)\r\n            return -1;\r\n        return noteNumber[groups[1]] + (Number(groups[2]) + 1) * 12;\r\n    }\r\n    utils.noteToDecimal = noteToDecimal;\r\n})(utils || (utils = {}));\r\nclass ArrayFunction {\r\n    constructor() {\r\n        this.funcs = [];\r\n    }\r\n    callAll(...args) {\r\n        this.funcs.forEach((func) => {\r\n            func(...args);\r\n        });\r\n    }\r\n    push(cbk) {\r\n        this.funcs.push(cbk);\r\n    }\r\n}\r\n;\r\nclass Callbacks {\r\n    constructor(eventType) {\r\n        eventType.forEach(element => {\r\n            this[element] = new ArrayFunction();\r\n        });\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9zcmMvdXRpbHMudHM/N2RkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgbmFtZXNwYWNlIHV0aWxzIHtcclxuICAgIGV4cG9ydCBmdW5jdGlvbiBzZXRBdHRyaWJ1dGVzKGVsOiBFbGVtZW50LCBhdHRyOntba2V5OiBzdHJpbmddOiBzdHJpbmd9KXtcclxuICAgICAgICBmb3IobGV0IGsgaW4gYXR0cil7XHJcbiAgICAgICAgICAgIGVsLnNldEF0dHJpYnV0ZShrLCBhdHRyW2tdKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBleHBvcnQgZnVuY3Rpb24gc2V0U3R5bGUoZWw6IEhUTUxFbGVtZW50LCBzdHlsZTp7W2tleTogc3RyaW5nXTogc3RyaW5nfSl7XHJcbiAgICAgICAgZm9yKGxldCBrIGluIHN0eWxlKXtcclxuICAgICAgICAgICAgZWwuc3R5bGUuc2V0UHJvcGVydHkoaywgc3R5bGVba10pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBub3RlTnVtYmVyID0ge1wiQ1wiOiAwLCBcIkMjXCI6IDEsIFwiRFwiOiAyLCBcIkQjXCI6IDMsIFwiRVwiOiA0LCBcIkZcIjogNSwgXCJGI1wiOiA2LCBcIkdcIjogNywgXCJHI1wiOiA4LCBcIkFcIjogOSwgXCJBI1wiOiAxMCwgXCJCXCI6IDExfTtcclxuICAgIGNvbnN0IHJlZ2V4ID0gL14oW0NERUZHQUJdIz8pKFswLTldKSQvO1xyXG4gICAgZXhwb3J0IGZ1bmN0aW9uIG5vdGVUb0RlY2ltYWwobm90ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgbGV0IGdyb3VwcyA9IHJlZ2V4LmV4ZWMobm90ZSk7XHJcbiAgICAgICAgaWYoZ3JvdXBzLmxlbmd0aCAhPSAzKVxyXG4gICAgICAgICAgICByZXR1cm4gLTE7XHJcbiAgICAgICAgcmV0dXJuIG5vdGVOdW1iZXJbZ3JvdXBzWzFdIGFzIGtleW9mIHR5cGVvZiBub3RlTnVtYmVyXSsoTnVtYmVyKGdyb3Vwc1syXSkrMSkqMTI7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5jbGFzcyBBcnJheUZ1bmN0aW9uIHtcclxuICAgIHByaXZhdGUgZnVuY3M6IEFycmF5PEZ1bmN0aW9uPiA9IFtdO1xyXG4gICAgY2FsbEFsbCguLi5hcmdzOiBhbnlbXSkge1xyXG4gICAgICAgIHRoaXMuZnVuY3MuZm9yRWFjaCgoZnVuYykgPT4ge1xyXG4gICAgICAgICAgICBmdW5jKC4uLmFyZ3MpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgcHVzaChjYms6ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuZnVuY3MucHVzaChjYmspO1xyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNsYXNzIENhbGxiYWNrcyB7XHJcbiAgICBba2V5OiBzdHJpbmddOiBBcnJheUZ1bmN0aW9uO1xyXG4gICAgY29uc3RydWN0b3IoZXZlbnRUeXBlOiBBcnJheTxzdHJpbmc+KSB7XHJcbiAgICAgICAgZXZlbnRUeXBlLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIHRoaXNbZWxlbWVudF0gPSBuZXcgQXJyYXlGdW5jdGlvbigpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTEE7QUFNQTtBQUdBO0FBQUE7QUFDQTtBQVVBO0FBVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils.ts\n");

/***/ })

/******/ });